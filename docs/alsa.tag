<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>asoundef.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>asoundef_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PROFESSIONAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga97c58195ef5fb340df3e72835ee9e5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_NONAUDIO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga402d9cb929f4b34b15ee68bf58c3090b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf1a8cbeb6c854e3ad22c780d2fe6d223</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8026c5c8da4329ede09678cec3ea9e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_NONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf662b1163cd3909990c0feb942f05826</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_5015</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabf51b5af88e18019261c53a9746f78e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_CCITT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac5d5d6443d27427950a2ae23c24a32e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FREQ_UNLOCKED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5c74dda29181e1479d00a972cb26bea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3b181eebbb9fdf22f732e6de663db463</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3200c4b6210dccc94b229697f7b19326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga66740e89c8a4cd1b07f6a1d7e13a673e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9562a343db9ceaaccb6cbc271cb01cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac12894a52ea07dad7e72f82494bc8006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_NOT_COPYRIGHT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae11f8d6b05ccecc8c4d1b6ed87926e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga56437af18b56ae9d3726ec4794f9f972</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS_NONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaceb4a50b57361207a9f6b74079113b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS_5015</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga82e03cee892fd9f9b7ba34bace351693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_MODE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad9feb0c82f3518c86ef5972da33bccbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga540c428bf5e00276772cef111b239230</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga641543783d5fa4e66ae6044b8b5d522b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_STEREOPHONIC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae946f14befaf6847a0994db2b5ed090a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_SINGLE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6c68916803b33a32cad746568a44bac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_TWO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gacba2d2f55e48b6ae039d9bf88b504e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_PRIMARY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac679691c061b7640e9237aea2f1f30d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_BYTE3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaee8adbb79b7c60c00c9ffe1e08197c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3ce0307fe1a8beea424ca307dafae8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabd629bd8c560239cf6e8de3eb87e3bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_192</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab0df701227e3c8e34be4d2ddfa4a8df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_UDEF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga81dbae23918f429b02c9033e16b8e378</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_CATEGORY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae842ac365899b386e01bf6942b1cb7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_GENERAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae182fcf7f8a1733f2c5e4b5587527283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASEROPT_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf90ddee8292f65124e2fffa30a5a9d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASEROPT_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac82edcac4d1ce308a081274475de4dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_IEC908_CD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0c9c45847a8455691605b38f3585853a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_NON_IEC908_CD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae4c8e119b97cd7eb0de2a0decc09b366</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MINI_DISC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaac27175ed581307d5757ffd350ba7661</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DVD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaabf34744bbe8ea896f0b39d61fa3be7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASTEROPT_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3a515ec23e25656a7d982150881caecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga02af600c964452ba2548aa10bc39264d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0a26b9dc738e0f46f2b8913b10adcf4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_PCM_CODER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf9c2970ac74fe81cb12d83e67b2018fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MIXER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaea7af8b4644f58a5d4c1105359f85988</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_RATE_CONVERTER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga21278dabaf0648061929ca4fdda258af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SAMPLER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0fe7eba08e30f91adfcb8b2375053521</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DSP</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0862a58090e7233db6bcfdd892e3aa98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabfd2f1a82a79b644a8a93ce34184923a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8537f28c815187771ea66108dae94f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga692a8af33eb60c4fe104be7dd7e426a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga32099784b78ae39e4587af8694d69e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_VCR</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3a79d0e9622e975fa54de9310f30af19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DCC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga16af02aef1db016caecec4f1066836b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_DISC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf123dc5db88df762b11a9185424b1420</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac21e25d4a6813f8fdfe0082560884fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4ca6b18366f7fde2205edce2999f47ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga47a74bdfbe9d1e6959d349e8ab80d7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_JAPAN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaacd5b408613d9f71f0c280b5701e2440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_EUROPE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4dcf52d3ac3d49910065c354aa414705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_USA</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2d629fc804ed4919c033c05300099f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOFTWARE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9639133b1ddd2134bd528a7ab4fcb9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_IEC62105</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga75e5d3da5be611cc78a58daab238b21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf6a21ac22b5f53b76afa8a44d63c0dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST2_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga72aaceaf66179a76bb5d9099c63728e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST2_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga64892ac2ecdd6a1996c45e32da8e24bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5a734cc7948c359e625f834ca17d5fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab96cdba31d93e8bc32bc334f2d2b0178</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SYNTHESIZER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3b66b47f2d1ef5130326ba66f1232bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MICROPHONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga811f9cfc2f3d08837287d0cdc2808aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8722821c881d9bcda9f5ce707feaa9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gafeb779781b4c579421e7cf147202c262</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae96ddec88024369ffb208ac37896056a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6c2ca2e9d69e5e098bf1d6b2bacd25d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9ef0514a51833b9776b9a996100866f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga59bbb9a68d11eaebcbf10c5440cfac62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1e0b7c10f92767978a62e92c1061c90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5dc282789fd6b0459263700ae666e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4f2c8ea8075b6b3da55b68329932632d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaabb2e0b9b0f5156a96e1d5be698755cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga74c49715f4f185922f257a92ef438a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga48d338b34e97374d85a22a78713504a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga035190360ade18728cc20922af991adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_EXPERIMENTAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac4bf15bc084373a97e239e66fd3ba6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ORIGINAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaa263d6ec3b5a616d7a0940f85e4c8501</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga955515228f306d77b9fbbba0dcb6af2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga61a44c8284e22339a93fe89a11f902e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_24</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2f796cb061365ce054f5f95a617bfd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_UDEF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaeaa0821017495062cc52254e07353e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e698ad6e0567020186df2815a0e667a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga82f26d84cdc05454003479cacab6cc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_22_18</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0cbf7583c33befe07f1e30e1d0c51049</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_23_19</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gadb22493f9fcca99d94680ce0f3e67173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_24_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf9ac8295f1b2217d752139d914a219a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_20_16</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac0c6d1ecf87c38e0ed2bce5c295b2542</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_SOURCE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7348f373085c32e12e1b3662111745d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_SOURCE_UNSPEC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga38e56580f61fb843890b54b1029a2636</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_CHANNEL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1ea33bab0780d90aa9402590952f32de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_CHANNEL_UNSPEC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaed3a633e36b0dd83e5c0ab096a5f0110</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3ad13472b50029f0272689a8bce8e607</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8a3d3c0b08298ecc43e011a936c482d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5221dc78ca1f55a042e167ce1c91cb8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaadb13bb8818fab6d1328138ba8d1d00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabcf093b8225ad76e08af8af003bfe166</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_22050</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga60669b8dadf595dc14a3ae0f5e7788b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_24000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4eb4272aa2f3544a8a77b960c1e27177</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2053e6a6430ff3156008b22b10b6cebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_768000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaa593dda0427d63f95d0db2b0d4b9a256</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga992a47bbf0888233d5128c0ed85acf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf800b239d7f6e86b6826c16f372bfebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9901bc1e5e90f2f7cc328d18634cac69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga01bb79669e104ba331435ac6bdd5adfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_1000PPM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaca2f253562c14ece6e5c26f257439cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_50PPM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac82cc51c466ecd46a86aec627fcb95d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_VARIABLE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6191857e900ff5ce0884607224c5e4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_MAX_WORDLEN_24</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga56bb9b04a55bd0e3956e97dbd82f017a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad28bf206daee452c44d769e9665455c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga987aff90a3a7d1d834b96b2b10d9e242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_20_16</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga587b7055ad6e5c5eaecb30f1c12c0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_22_18</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac11e04b988aca011aae2e93cfcdc61df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_23_19</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4c67a2e8aa2b0b60b1ac89750262120c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_24_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab105e55680449b82d8156fdc17f30753</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_21_17</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf3cb2ff0ccbf443402201f6dd349b18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad89c6a706e18b6f425504a78915f7352</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga06fc6b7080d5953720585e5d158c5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga519d879e28f534704c16238f0ce2d9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_12000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3beca329332ce84cb5f8b60a6779db6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7476b49b1d4617ced4c984ea28ceb381</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga54ad73cd0ea70b03a5552b459487b55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_8000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga04ffd70501149edf567f7f5772b32056</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7f295758be11ee5614b862d92347050e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_16000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga87d68b79da8b13c222eef8c12363f19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_24000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaab4f8c9584593003e49a3eb0b0a5433a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_11025</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad7d7f4f62bc1b9a7f1243025c134cfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_22050</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf8b2783371b072694d9ae071983e7c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae6d0be1fcf49859d857a3c73c8016e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga44e44b55346acd1404ab9672678b535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga972fefc77f659ba6990182906f916df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7d47fef6131eb61b127f755533f2483d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYFREELY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2ad44dadd10dba1f0990cd7b80778261</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYONCE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab8fdbac028c693f87d8d720608ee14ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYNOMORE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga13caf34dd818cc7e450dc7c54b365b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYNEVER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2ad26c32c5a392cef3c66fa6ed1e6af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga45c64614e861149f9299a6a1321d1e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6fceafba38680f014805858c2af5ca62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga993c2caeaf46c6b9cab87b0e4bf251c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_IEC60958</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad76f265a55d91d115645be651964cf32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_AC3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga41fe4e683e171406cd47946402e385ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MPEG1</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga014612f4d4dae9860a22e1a5df622831</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MP3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaecfec4ce55ceeb6286886849f07d92ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MPEG2_MULTICH</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad62aa7f1c9cc11d6d60fbd7cad125762</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_AAC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga58a401207154e5e77d68fa9350a90486</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DTS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6b5f146df336ec846754b71b61fc9fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_ATRAC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf432c0b35c71744a5032c9b400fc48fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_ONEBIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac43d7833f2c011fe293adda349bc7edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DOLBY_DIG_PLUS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab5c9ad651feb9c74dcdee87655ad09cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DTS_HD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab189bbc6a61403483f05aead2c97b6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MAT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e28bd68dd6b36b35a3f949ef3053393</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DST</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8a321715e7c870ef20f14e33656faa6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_WMA_PRO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gadfb4ca00a7e85cdd6d34208709fc1f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gacf8e432eb4fe55d966586640bd92978c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab3ecc4e2bf136e590f14f6b60f8f7241</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga33679f1883c96a31f419d5af66af8183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gafd7b919aaf615dc3c5805434d12b5d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1c9a4b7c50c4f3b8c62a25bfa400304e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae1f95540d9d0c2c7b86ae4ebece7f9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0af799ff15bcb723384a3b226b0a4cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga99bf81e57a25c751e57d24aa9217e973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga156520e6b8425fb44e927aa978465030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1144fbf8f1139a4007f8df69431b4fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e9188c5617dc3884382287ffd232540</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_16BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga09d479eafd6b86f36f1da42cd4861ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_20BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabc15645324b2db6ce5d5bebb04a0526b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_24BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae995e3c17fd3a49b300bf114fb416194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaded9605e39999103c8fc5fbbb4fefc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH_PERMITTED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4adef6e38757164bb6223b440a6b7878</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH_PROHIBITED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga27c514dff93f90c60d841216ac93c151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_LSV</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac020dc308426ed5a73dfdb4ee393a4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CHANNELS</name>
      <anchorfile>group___m_i_d_i___interface.html</anchorfile>
      <anchor>ga853f116aedf96740852e0729dfff46dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_GM_DRUM_CHANNEL</name>
      <anchorfile>group___m_i_d_i___interface.html</anchorfile>
      <anchor>gabb2734ff657b26036f4c232818f1921c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_OFF</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gafb4313c1ed19a4e91ebf7baa2b64b4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_ON</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga837edb2383446176b3cc7894653ffaff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_PRESSURE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga0c11a776c4031db664b3f95dea6fac26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_CONTROL</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gabdc476e199b757e06d94cac18734e423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_PGM_CHANGE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaaea4cbac7d447bba2b4d8fdb9d7c7c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_CHANNEL_PRESSURE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaf74bf6a4f7d689e0cea7f4c9d733fa8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_BENDER</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga9c7761339374918c7aee48d8a4d9bb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SYSEX</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaa638aafe78574c77acfeed7cef777dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_MTC_QUARTER</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga9f99648472bf5144fe98c21e7102b229</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SONG_POS</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gae5eadd56cbd44b03d56abf0b34b1f3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SONG_SELECT</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga7548ca8555174ae0bd7146af9118c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_TUNE_REQUEST</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gad0c86118dcadf84393dc063a02c28feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SYSEX_END</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga1ebfef94aaefeb67343e8ba03d714db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_CLOCK</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga30fe06aa54e1d2706350227a7bf89d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_START</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gac31229378c6f7622ef52464d2c755cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_CONTINUE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga0d5702548b66077ffe89cda211ce8032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_STOP</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga24f8716f924930edb61521e334a8d9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SENSING</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaa0e4e48484ea0ad2a96be8e5bfd436dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_RESET</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gab723772ef26d943f583897803d9e4838</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BANK</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga400bb0acabfc671553315a2e481cd73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_MODWHEEL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabd7dc0a357a298183546380c2616ae20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BREATH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2eedb2828f216795a53980f585326ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_FOOT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga87018deff0362e3f0c983fb171224d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_PORTAMENTO_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2750f10696dcc8f4e7b2cee97a0568b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_DATA_ENTRY</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae877503bd7e696ef065be7b50e6f9bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_MAIN_VOLUME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga44c99a6da1d1e8ac1a842283f081c530</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BALANCE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaff20d0ff956eab3bb6057caf16757059</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_PAN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gacf3587c5a1297acbe3be9bf8fa6863bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EXPRESSION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaca32fa7d9b65e7dedf52a826eb348abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EFFECT1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga0538d196af1bfad5d53baccf2ad88008</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EFFECT2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga7d71d4505c3e3a2832a4e324591746d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga037dca38fd660866630669309c2f6e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga782d5a57791a7cb822f2c806e9a386ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE3</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gac26f70d8fd39a132355abe2f9782fbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE4</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab2be5312a07276e19f343a5dff6ef63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BANK</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga950baddcbeb06eb5a7aeb32421ddddb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_MODWHEEL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadb2907bb40bd51d2d10575278e87d4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BREATH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaccb65fb1c7c2eed062dc29222ba3294a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_FOOT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae64ae19be43985ecebcff56ba342028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_PORTAMENTO_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga13b30a34853b14d2b5ae6b2812261200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_DATA_ENTRY</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4c4520fe70087fe5362fb997f6944bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_MAIN_VOLUME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2268d5b7a8c55e19da862a02181d12a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BALANCE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga324facba0ed095532cfcb9d5c5c8b8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_PAN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa37a796d5de51bc1991449a0e4ac7b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EXPRESSION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaacf10541517b4190670a51d0a790304d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EFFECT1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga81bb32b94f06396ab7b8ae4eb527398e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EFFECT2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga72de57abbcfaba1f44661938977620df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab6e92effa93bf92d65f0719d1814c8e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga11850784d58515870a4f6b759497ac7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE3</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga997a1291a8b77f721259170493012b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE4</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabcd1808f4511293ee6f18bfacec083e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SUSTAIN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gafe6cec069df7dc4fac5dfe2e2f72c1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_PORTAMENTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga9ffc2cf5ee42ef664675d21b4d4da4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SOSTENUTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabf81a9dfc98f01368e68f441607ee345</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SUSTENUTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1f474cac456cd3842df188d389f7d7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SOFT_PEDAL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga83f2a22850c2afdf51d58970762751fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LEGATO_FOOTSWITCH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadcfb9780249ce4be4232ca24eb332a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_HOLD2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaccbcf812ed213a81945c5b111dc7968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC1_SOUND_VARIATION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga7ebc926a176d5e78853d6e05a51cefbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC2_TIMBRE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga55805bb1d899cce61a3db60934e2eca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC3_RELEASE_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga19b65e3983473227b272be82ef9df447</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC4_ATTACK_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae5788e18205a6bd861f05e241035e06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC5_BRIGHTNESS</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4b92f34f5f4d97953086fad1bac52998</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC6</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa118fa77cdeacf4230f14a8f5f49634f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC7</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga82f10092ea135e74586bb970fbaf3176</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC8</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga8781fce1a79c134bf8c41bb73505d551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC9</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga09779ad81ceda34040afda81decdcbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC10</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga977a4356b53235b1abce324d10c086af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE5</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga34cb95b6e734f85b53d431b851f968ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE6</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaebec579f20f016bf00f6f26ae49a94e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE7</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga525bc92d4872a61463de275560517214</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE8</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabdad6c045138c8be35ebb30f39bce6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_PORTAMENTO_CONTROL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gafa6ca4aa4767eca95b82cca711ac0168</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E1_REVERB_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga6edb7c38930622917c9d7766b635586b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E2_TREMOLO_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga85dc5d768eea982af8524057a16f4cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E3_CHORUS_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4d5816aa31ddc4eedcfef887adc0dd5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E4_DETUNE_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga21221aeb674302b8b48ba501d58bff36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E5_PHASER_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga0036583bf655c8581a856821bf470c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_DATA_INCREMENT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaabd8b650e9dde388d45c5fd340760426</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_DATA_DECREMENT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab348887903ff8d56b0e4ae38aba8c344</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_NONREG_PARM_NUM_LSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1a07fa2ae318897f2d95f65bfdaa5677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_NONREG_PARM_NUM_MSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gada9a33bd765b94ce284ab63299521b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_REGIST_PARM_NUM_LSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gad5995b27c8552e8bb7f8301d617daa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_REGIST_PARM_NUM_MSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga19357e16a700d5859167f17c23510ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_ALL_SOUNDS_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaf2682a48d9360382eabd9428ea12b5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_RESET_CONTROLLERS</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2dfa1eb44ebbd441cc0f10f972a77578</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LOCAL_CONTROL_SWITCH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gac9043790ce09c428e13a7aa391b69750</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_ALL_NOTES_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1187405eaf1c2321494503670afc5b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_OMNI_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga739706673188dcfc5818f45e141fc328</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_OMNI_ON</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab818d1d0cf1892596ea0c89723fd2e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MONO1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa193f9a81e9cb798f62e9e3b9850d092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MONO2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadef1b23fdeb9712a669c7a52e7bfd490</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>asoundlib.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>asoundlib_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>conf.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>conf_8h.html</filename>
    <class kind="struct">snd_devname</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONFIG_DLSYM_VERSION_EVALUATE</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga96fd234b2ce9c03a9e82f4e854cc65ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONFIG_DLSYM_VERSION_HOOK</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga948b35b3df554e2e06ba5bb9f5452704</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_config_for_each</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac3f21333e1f9b602cad9b06cb418fa80</anchor>
      <arglist>(pos, next, node)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config</type>
      <name>snd_config_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga1c20905af775ae77d04d1a5696f67985</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config_iterator *</type>
      <name>snd_config_iterator_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6c621ab8875a222e1fcb56e9feed6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config_update</type>
      <name>snd_config_update_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gab10b229189a94e3fcbac7f6ca5794cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_config_type_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa41083e55d19c7755c5d624030e06887</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_INTEGER</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887aaa9d6e02cd0eb42db96122c925c023e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_INTEGER64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a710f962ebb93e3824ddee2d833f735a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_REAL</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a0a938daae4006e204150082ab9c73508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_STRING</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a99eed49f50d4f62a7fc0c95301918f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_POINTER</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887ab0b5d34e2f16e81d4eb5f933c30158fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_COMPOUND</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a82b5c1a9dbadaa4e36815fc1f01fc2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_top</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf563d57ea9d576a94578368a3d2382c3</anchor>
      <arglist>(snd_config_t **config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51f79d1f24a519e126415c72210525b0</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load_override</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga27334922bab8391aa2ef1813f48f4d70</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_save</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafac08a29a1e04b03a22028a8c70f78bd</anchor>
      <arglist>(snd_config_t *config, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga41a3d2202cfb9016e33aa85ea70a4c9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_r</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga06e80976c3c00fdc786f9b213e5c40f7</anchor>
      <arglist>(snd_config_t **top, snd_config_update_t **update, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f781ac635a0233fb2f58766a83d65cd</anchor>
      <arglist>(snd_config_update_t *update)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free_global</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51dbc0ff1d9b34d753706d09d768116b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga568fcf6f45808319725ac066714b25a8</anchor>
      <arglist>(snd_config_t **top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae8baa15082818d721607932bb99f318d</anchor>
      <arglist>(snd_config_t *top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_unref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac87538403cb6f8125468a1af56f42e33</anchor>
      <arglist>(snd_config_t *top)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabafb8cac2181c4c1e34b99f54421d1c6</anchor>
      <arglist>(snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searchv</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7b2f5723e44a1b69f2a8555d469803d1</anchor>
      <arglist>(snd_config_t *config, snd_config_t **result,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_definition</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad7c23084ee4052ad33d77db6278db46f</anchor>
      <arglist>(snd_config_t *config, const char *base, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_expand</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7759f41c3757ce72ee9bd118976071c2</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, const char *args, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_evaluate</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga1a51645a07e204d4e814d890452da558</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6f011f2a8063dafd80bd8af506dd621e</anchor>
      <arglist>(snd_config_t *config, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_before</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga3bd36661e3aa30c51e836fa7b44ca2d5</anchor>
      <arglist>(snd_config_t *before, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_after</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad8cc6279c458110f47d7759e308c4ea4</anchor>
      <arglist>(snd_config_t *after, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_remove</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d69b003662e09e8206a7892e849d27</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2a006b942faa3335a958a7df7bcea17e</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete_compound_members</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaec120883e56ecb510e064151e0b11d51</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_copy</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga30f30bd27d13fbb3527270b3fc9e1676</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac570ecbaba611ccc12bc235a1f4d0181</anchor>
      <arglist>(snd_config_t **config, const char *key, snd_config_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga838fac581e115574acc3711cad9f5877</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2c27175c162fe5027e3f1b3d5420afbb</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f175813bfc2556bd08fd580f05d36e6</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6764115f489629be027b434c4e323cff</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gadbcce71d8d3a78709fc2a78d6f543584</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_compound</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2ce24133c1d6828e2afe366284c61e01</anchor>
      <arglist>(snd_config_t **config, const char *key, int join)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafeb0552cbed09a3badbb5e74c7a7973d</anchor>
      <arglist>(snd_config_t **config, const char *key, const long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga04cfbfda89dc17c19a5a4076271a4d07</anchor>
      <arglist>(snd_config_t **config, const char *key, const long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga968e5bb773dfea922b5272636b26e9c2</anchor>
      <arglist>(snd_config_t **config, const char *key, const double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa83035f79027a464bf9d5d31e0a20547</anchor>
      <arglist>(snd_config_t **config, const char *key, const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac7c6ce28a676169fff594aa4222705b2</anchor>
      <arglist>(snd_config_t **config, const char *key, const void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_type_t</type>
      <name>snd_config_get_type</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6def4c43ce325abaa3ddfba5a4f4d138</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_is_array</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae369d6f289748726617834b5d02047ff</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga550948931d44695b6d8e8f148f87cb54</anchor>
      <arglist>(snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6fd3be48221cae9cee9c7245a0804d73</anchor>
      <arglist>(snd_config_t *config, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafdb63c78c07e11194a28d591b0fbffc4</anchor>
      <arglist>(snd_config_t *config, long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga46c71d5d36c64f0a06ceae956a39fedc</anchor>
      <arglist>(snd_config_t *config, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga0f76f8ad47dce7f90580c8d59c6e44f8</anchor>
      <arglist>(snd_config_t *config, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac1810a11f576fe339074502f4fed4a91</anchor>
      <arglist>(snd_config_t *config, const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga037c3bf96326bb6f5dfd340475b34fbf</anchor>
      <arglist>(snd_config_t *config, const void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae366751e8ea98aeb69f9ef876f7b949c</anchor>
      <arglist>(const snd_config_t *config, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabfbc36060fd4f5d1d929938443f95559</anchor>
      <arglist>(const snd_config_t *config, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf4d9e68918f7d49d7b4b14ffbe94afc1</anchor>
      <arglist>(const snd_config_t *config, long long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d23c0bf941527d80aeb6f991bf88c9</anchor>
      <arglist>(const snd_config_t *config, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ireal</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga79738baffa6fa7722b1027ab84ac61bb</anchor>
      <arglist>(const snd_config_t *config, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5ab99983d1d93ddbcde9bb69a1e4f9fb</anchor>
      <arglist>(const snd_config_t *config, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa26f97e098a0dd2cd5e28299b6b6c132</anchor>
      <arglist>(const snd_config_t *config, char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga54868e0fa30458ef1c259772a8e7c6d7</anchor>
      <arglist>(const snd_config_t *config, const void **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_test_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaeec157fd161a138e402c9bd243bbd408</anchor>
      <arglist>(const snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_first</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac8965466674c10b9a119d591ed484cef</anchor>
      <arglist>(const snd_config_t *node)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_next</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga10c27ddc83c78680d91a167dd2f0a3cb</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_end</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac08a30bc630481f69feb2170fed4afda</anchor>
      <arglist>(const snd_config_t *node)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_t *</type>
      <name>snd_config_iterator_entry</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa91fe1d926d88041ed516a6a7293f606</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga11dfab861b537b564f0c76d9b1eb2935</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae5d80ee31e779992fd14672fd850a3d1</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5759c972706da4bd3be35c9336568bfd</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaaf1c1ea4801961e3107ca23ba89bd429</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_names_list</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf35b51ab61fd7ea628ab088a1b444aa4</anchor>
      <arglist>(const char *iface, snd_devname_t **list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_names_list_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga665741321b3c1c3f07a6eeb969406cb8</anchor>
      <arglist>(snd_devname_t *list)</arglist>
    </member>
    <member kind="variable">
      <type>snd_config_t *</type>
      <name>snd_config</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6cf7955d3a072d354dab4d7b536c7831</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>control.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>control_8h.html</filename>
    <class kind="struct">snd_aes_iec958_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONTROL_DLSYM_VERSION</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2dc20c3f1d96252ba1f5563cfede392d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_REMOVE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2648d4242f8d5be01ecc6e36bc2cf335</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_VALUE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf271a6ca621f746c45161f7106752e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_INFO</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3ece7e72b3f4260f9ddd97aca2e1647a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_ADD</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga10e8cc806d014989e7b162f24714e19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_TLV</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga68f2f8b90cf059427f9ee9864983e68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga172526f45150a21251b3421925641ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_PLAYBACK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7c81ecb5b075437d0612bc33e5ac3131</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_CAPTURE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7cfec74a12a6730bb37cd567ab66452e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga72c88b2e8c9a136e34635dcc5fc65fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_SWITCH</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa8afe0cd1e7e65507a3f19e3a3f3d293</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_VOLUME</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga530cf8baa305078c23ff8fe1cc2f612e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_DEFAULT</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga671b467ee6f577d9408dbbadfc90a404</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9665d8a918307b0b2387d253c7580abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_CON_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabf837ecf1bc3539b6beb1b58ecc1e5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_PRO_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga662f187cdfe6e85da2a5d820fac40d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_PCM_STREAM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae49d00de709820b4a6d8b9b343e2a407</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88837fca9c81a2ede579c78bd1354475</anchor>
      <arglist>(expl, direction, what)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad11798fdf0ca20181d793660a50938a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D0</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae4dc79ea76d20b9e84ca0564972db99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D1</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga137b1c440315c12a17f938ba4c0bf38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D2</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga01abf56e8703ef464bb271e8958962f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac8cc37202adfe9a740580ac1036c482e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3hot</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac6bf5540f88d153cb2b4d96cfa2e65bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3cold</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga029a112452f29d70c25391ea4e6723b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CONTAINER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf5319578d0088b10c67339c8b1f644e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_SCALE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga59b987c8f3cd26be848cec7171b7fb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_LINEAR</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3e80cc7e80dd6c56e2d9267d6a6ff9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_RANGE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9eff63d56cfb81df6d25d297270d6b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_MINMAX</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga779ef3d3fd0b658cef588fdbf6fa52be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_MINMAX_MUTE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7a2bb21790739c2cfdf499d5c9748104</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLV_DB_GAIN_MUTE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5c4958da9d46cc400b24a6c47a413cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_FIXED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga59ee428ba00f0595d867a74fb304913e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_VAR</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4a7450784b51c2d5ab51edd65279d1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_PAIRED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga63c3b7754a51433fbe10d7ad15c7c264</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NONBLOCK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae8a46558414be5b5b3b7bed127ad4574</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_ASYNC</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gadcbc5a476ffaf2b8d4dfd29a2cfaab3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_READONLY</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabd6e339ba7222d43f280abef3d3d47aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SCTL_NOFREE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab1b68b9d8582822395782038025cb0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_id_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88b300eb8aa146d1eef29fbb6d8cb83a</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_card_info_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gafcb7ab1577c3963e0751365dc983a4cb</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_event_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad7f958811a01272454badce1cf5bcbe7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_list_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7ec1d6cea34670d5e43a841af212962f</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_info_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4003d15d8c84d2405e922ba834d234f7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_value_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga262a26fa78978597c0baa7eecc5cb5fd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_card_info</type>
      <name>snd_ctl_card_info_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga61aa15d40e16100bbb980bd062f5f220</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_id</type>
      <name>snd_ctl_elem_id_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad6c3746f1925bfec6a4fd0e913430e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_list</type>
      <name>snd_ctl_elem_list_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga952c52ef86124847f9bf12ee3dbfa5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_info</type>
      <name>snd_ctl_elem_info_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2cae0bb76df919368e4ff9a7021dd3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_value</type>
      <name>snd_ctl_elem_value_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga266b478eb64f1cdd75e337df4b4b995e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_event</type>
      <name>snd_ctl_event_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga95f16cb694185b2ee106afc53d1e3a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl</type>
      <name>snd_ctl_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga06628f38def84a0fe3da74041db9d51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_sctl</type>
      <name>snd_sctl_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga89e065287b9deb65125cc5f1cfb48e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hctl_elem</type>
      <name>snd_hctl_elem_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaddfb152863e87857d463c7008d72ad74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hctl</type>
      <name>snd_hctl_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga13c9ad52c57ab7db06065a7f806b2369</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_compare_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga612e7c59d360ecc9334f7fe71377f9cc</anchor>
      <arglist>)(const snd_hctl_elem_t *e1, const snd_hctl_elem_t *e2)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_callback_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga5e2b26a2cc8d696e2a9eacb6bbb2f417</anchor>
      <arglist>)(snd_hctl_t *hctl, unsigned int mask, snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_elem_callback_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga64ce2446d79c992547d3db8c7faa6143</anchor>
      <arglist>)(snd_hctl_elem_t *elem, unsigned int mask)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_elem_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac42e0ed6713b62711af5e80b4b3bcfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca4721b8bec7a22580ce81b91c6b7a0ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_BOOLEAN</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecaa4ff1a96936c11b81e12ecd5a9dfa307</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_INTEGER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca4248a1a1ea07ebfaf61f3b6675868519</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_ENUMERATED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecabfb38dcb8ca021f3f3a09261b3b8cb43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_BYTES</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecade553acbddf022bcdd9123e71c942be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_IEC958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca7fb78bfbbfb14c7653e1dcc3c5706454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_INTEGER64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca49b30ff41d10d784a98b9bb8636dce81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_elem_iface_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga14baa0febb91cc4c5d72dcc825acf518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_CARD</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a13ed37a91e6ea81175f9bf61411eccca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_HWDEP</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aebbef1ae0db15ec3c2f4f2afd63c4a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_MIXER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518af7d7a7f5af771a7cdbec7424b2510060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_PCM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a701d786e4a50e0931c27660a877ee7ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_RAWMIDI</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aeb930ace203532c3a8ca399a3f3b03a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_TIMER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aed953d644672e4e2d36e5d77607cea28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_SEQUENCER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a86942df032bda20d3b14d8d32d95ca6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_event_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga76f2458eb5cde785a8fcdb555ed7fd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_EVENT_ELEM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga76f2458eb5cde785a8fcdb555ed7fd57a184c89f6a16a9b9e9a5ffd94b0aa9c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9d0e18b3c1b8cb729d4561b968296a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_HW</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a94bec3f8cfcb14bd7dd5b0f243e039f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_SHM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76ab304ede71aad4a331d3532bc9dc39668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_INET</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a7697d758fab4cb3c23aa87ce4149a621</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_EXT</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a7c74ac3b8c063b460a5e1f74ae8a377c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_load</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabb7a76fa905fbae6481f78d1eea4feb1</anchor>
      <arglist>(int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_next</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6fccc8a2d7d5ebd072a552a05855c145</anchor>
      <arglist>(int *card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1881c5c04a532f5b9397745731ce7730</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad48d44da8e3bfe150e928267008b8ff5</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga547dcead4a72f24db4a0f9f530f75228</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_device_name_free_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad4cacf29df4616c2458fc84c1fde708c</anchor>
      <arglist>(void **hints)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_device_name_get_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8546500ca828392f03f5bba2e7813874</anchor>
      <arglist>(const void *hint, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga58537f5b74c9c1f51699f9908a0d7f56</anchor>
      <arglist>(snd_ctl_t **ctl, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_lconf</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4a49cc71db1a7021be6ad880fcdbe4c9</anchor>
      <arglist>(snd_ctl_t **ctl, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_fallback</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga016fcf47dc9c17c06d6e0846ac0bba17</anchor>
      <arglist>(snd_ctl_t **ctl, snd_config_t *root, const char *name, const char *orig_name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_close</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8510057afd178d7206221d85440ba5f</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_nonblock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0898e6fe7a63a1c301794357a160587b</anchor>
      <arglist>(snd_ctl_t *ctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_ctl_handler</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga23813430fb81fecb0e95d1dfd688337d</anchor>
      <arglist>(snd_async_handler_t **handler, snd_ctl_t *ctl, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_async_handler_get_ctl</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa693260ccd944d874229257e54dee404</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad7761be890b679d7e7bb3a3e4453818b</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaae9e775c251024e253a4314b76c3c1f8</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_revents</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab4f2ac44c01f4ec3c02dca1945bf9155</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_subscribe_events</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab56450393817e8ee1959fc4bcf5d2d15</anchor>
      <arglist>(snd_ctl_t *ctl, int subscribe)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa78539d04df0f1642d00c07a86d0fe8</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_card_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab631f366b743f5afa0bb0344b42aad4b</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa41caec9e14ea618fecfacfe68f1f7d7</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6577ee280d090136288fc5dd734867b9</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac98376a37556e0d878b6aa43e7e64e27</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_lock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1fba1f7e08ab11505a617af5d54f4580</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_unlock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8b3191516b8b7debeb57192b71abf66</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f9ce14ec4227de4f3a6b573f069481</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa2c2da0a41904db5809dd4eade24c9c</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_command</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34d5e31c5ff25ab780893ab7534ab2d2</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_set_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11ec9933829235513853f89bffdfd4e1</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae554fc52f0371161471520aa60e970c6</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int *state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga392a8f4afa2ba60e0ce6817f2a4f5e74</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_event_t *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_wait</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7df5807d1853b39781078793afa7b895</anchor>
      <arglist>(snd_ctl_t *ctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga202bfd5f82126770a2a7f79fe75501b9</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_type_t</type>
      <name>snd_ctl_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gafc6b41bf8de224f7b961cff768e41cc5</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaca10189720995695e836e7bf39cce570</anchor>
      <arglist>(snd_ctl_elem_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_iface_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6e85042ad0ecb60292c3d06cfe7b2a5e</anchor>
      <arglist>(snd_ctl_elem_iface_t iface)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab06ee7470afa8d6ae55296d19bff1455</anchor>
      <arglist>(snd_ctl_event_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_mask</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1a71c2546aef7d240185fd203240d890</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae1ecf3bdec2397722eaebbb2730de9d4</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_elem_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga84bad7e515406d566484e4faaa41962b</anchor>
      <arglist>(const snd_ctl_event_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_event_elem_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaed43a3e150a98463b99993c8a4646595</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf96e6732e7d7d7d95e868518b7c47316</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa0de2acc99d1aa07aff9e0542134a9c</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_elem_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga79ef06a1957ccd0b784e1153e23ce25f</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae69f9ba6fd89ac22af2421b801e69bbd</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_alloc_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga504ad392b797b7f5277cd184aee96e66</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int entries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e8106e3e2f64d84d1c03ffe36bed388</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_ctl_ascii_elem_id_get</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4e4f251147f558bc2ad044e836e449d9</anchor>
      <arglist>(snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ascii_elem_id_parse</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2f530217bd896e3c0498b3e46624977a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ascii_value_parse</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga05d994f242e8a524a94ea482689fa2c0</anchor>
      <arglist>(snd_ctl_t *handle, snd_ctl_elem_value_t *dst, snd_ctl_elem_info_t *info, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_id_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7047bf3d0336f2ed1bc876e512bfef7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_id_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa261f3721050a0ad4a43f28bcd6b082d</anchor>
      <arglist>(snd_ctl_elem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0bb98b09bc352074219a7866d20f5816</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad21c1d92e9f82b41330dba1146c88734</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga411575334b5f4d6602206df72c6ac01a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const snd_ctl_elem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga543f3de35c42f53f2ec2d24217fd4a43</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_id_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6932a5e3485140cd120dd8a9be8e6770</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54c863a0cdc7c501b3e1d520137cfc69</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5f3bb5a80842261a07c4ed99b05921b8</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_id_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa6cfea3ac963bfdaeb8189e03e927a76</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaebca4d84c661a50504b01b847f89289e</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga212d5ffe15e223dee2ebc58e3d57a7cd</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga33855eaf0261c321cbf0a88baf290418</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2c893cc444dbc0e4293e3a6fec7b27a8</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8eb060cb64d7cce2c82d04560bf675eb</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga813d02a44a9d01a4a2fe81eda7a8670a</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga65af30a51becd092f6da1e357fc46094</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_card_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5cfad24c04eb3576a1945757ff420944</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga518166f64f41361629ee7bfe0caca9fc</anchor>
      <arglist>(snd_ctl_card_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga62360e5fdd3c5644ca7e260099fba67e</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3a4851500ca8a98927b16b772cda8787</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac2afd00836fb59d31cf759a8e48a622e</anchor>
      <arglist>(snd_ctl_card_info_t *dst, const snd_ctl_card_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_get_card</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga14863e13659cd0a02d3716923512dd85</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaadadbd2d4aef000a30ec4c1c949326cc</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_driver</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4abf685f77a8fa8dd14232397cab6f71</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae71617c9deadee635b0ad38ca9aaf746</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54a54f4b1cc3740eafba54b1cc1b8111</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_mixername</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae2a4719572de955480043dd34840579b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_components</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2181aa6bf919fd1342b259d2f3af755b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_event_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f526a146d913e36802b6c4a0daf86b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_event_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b38df9f5233dd8290a80682011f7907</anchor>
      <arglist>(snd_ctl_event_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga63ff10dda4a7e6b4055a0f3438c7781f</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga784c560c92df4179019bb3a29e1a4791</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d8375f54af11001b829f1e3054eccef</anchor>
      <arglist>(snd_ctl_event_t *dst, const snd_ctl_event_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_event_type_t</type>
      <name>snd_ctl_event_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2a7d413bb515e07dc4f933aa187324d9</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_list_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6a2a5b5258da9959ddbcacf94a0619f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab57f2acf2e5abdc9c46c19fe2bad9397</anchor>
      <arglist>(snd_ctl_elem_list_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9141e579ac00e56fa01af4cd710acef5</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0aac385223908ae12a8d2f68d6105990</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab945b6a9107a41d5cca414098711511e</anchor>
      <arglist>(snd_ctl_elem_list_t *dst, const snd_ctl_elem_list_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_set_offset</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gadc7b2d590c27c684ad2a076f11a8b31f</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_used</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2462c05a56bab424686f3d442ba8820f</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a1206d8f19aa67a32577f523ee92c12</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga73fe33f4f45b80d36137dd1371e34ea1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ee1e4b5b790f08bdcc78f3a2685aa5e</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_list_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga72a7235ee8e366a4b8e7c63b0189f512</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae906aa0c657dd15300ab451436a318b1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga809aec8df62a6cc5a289829e4171f5b3</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_list_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga819a69351b60fd868a09ae41323deb22</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d2c5fea3dcdc132d40dce39e9ca9f00</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0758621321c3b86a5bcb542b8b931236</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54387df99f25dc01635568fbc6bf6ad0</anchor>
      <arglist>(snd_ctl_elem_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c55080b76401a03eede7d92e4e1cc4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4b7173cf1df342a66dbc44dc9ebd07ec</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga763d0832ab8b9096e96f5a15021f73d8</anchor>
      <arglist>(snd_ctl_elem_info_t *dst, const snd_ctl_elem_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_type_t</type>
      <name>snd_ctl_elem_info_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0fec5d22ee58d04f14b59f405adc595e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe355f33a84b3c3d18b3c72f5981dc6e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3289cc7acb4fc4de184cd67c295f1866</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_volatile</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d191b706824318c943a6b172a7531fd</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_inactive</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga387a4cb6a4d80b3ca2b4d734368eb219</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_locked</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d37f2ff9ff7b1b367b7d804f7b2b7ad</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaac6bb412e5a9fffb5509e98a10de45b5</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacfbaae80d710b6feac682f8ba10a0341</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_commandable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7625ff65bed60802f15bf143de4860a6</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d40439e43a49e1ac6c694b7b617329c</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_user</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34dc2e7013fe367a5acac79a1a13a814</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>snd_ctl_elem_info_get_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga934e489d5d48a24575a425d64e0f2db0</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa75a20d4190d324bcda5fd6659a4b377</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_min</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac8bcc954ddaae99174f97adc6116a6a1</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_max</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d9da5653ce5d149e1b9ed0b26eaae22</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_step</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga871c7c81aae5c41c2368a85c1ca1f407</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_min64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5e6bb136caa4d8c9a43e8d8f8e310893</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_max64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e74e6ecf31560bd4c4b85464f7ba54b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_step64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga35177e37f86eeb8c9fe31c3a8438c9ce</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_items</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe5a218f256ac95ec295a175ec544453</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_item</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3cc2ead5a5628661976507fed4c38182</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_item_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf54afbedeb76d572bd6c6d064ce4b51b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimensions</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga163546600efa29d822a4567706a8443a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga221900fb2b2c68e8cefda697874b83ba</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_set_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf2af53f06728255d07a1456fe51303c7</anchor>
      <arglist>(snd_ctl_elem_info_t *info, const int dimension[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4bf366ee3700fdc6073dae01724c2119</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0875375abf0477b84b6022faaa683f4</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_info_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0de27f217d38543ce1b2d5902766a46</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344f683cf6fac46e0ce8fbdf45ada99a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae53373c67b013e3473caad0258c3bdc3</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3af223c6ba6185a7326f852390697914</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d0d01aca3e2c61ca7cd7baa295d0ee</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8aa6f699266b217b21c75b04dbdbe2b3</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga13dcca5b02535c50c3f5efa2bc03c736</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d7a2129b74609a8865e835e154d454</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga87d5d9c4fe092f02267e0b36397fac88</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab22e8223972fb7aa8a6e6abe49306b4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga40fffad33e859d27314dde76d9dffebb</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc80a95a945e31f3125a3ab4d908a464</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc94fec73b3b56f87872e8fec0c3e9f1</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long min, long max, long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer64_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ab4992e6c9506bc8b8c0581808c2324</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long long min, long long max, long long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_boolean_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaff7e95b329528fac338d13f428bec02c</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_enumerated_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9e9bf31020e6c2e7185612785eca6098</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, unsigned int items, const char *const labels[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_bytes_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf725d3e3411b236e5434150268c80294</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9f6228c0d0bc751596cc04c6dcd00083</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, long imin, long imax, long istep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa9ff49156010b3931cd3d163e62cc43f</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, long long imin, long long imax, long long istep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5f640f1d836b532b1c18d7604a90bad</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga273d2d5c44e97d045c48dbaa734ae23e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, unsigned int items, const char *const names[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5511e7e65b773abf8eb8413ddb701f3e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_remove</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga715d20513768cf33f10a0f9340b7baab</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_value_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0514e7dde0594c4bd909e2306acb4bc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34126639664d2c2d91a4b4bc6494a536</anchor>
      <arglist>(snd_ctl_elem_value_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaab6bfeb2206c9de88778890fe527cd53</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5dc3556ecf7f1b6b90a751f68e298aa8</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5631893dd087d73c223b7787222b7f9b</anchor>
      <arglist>(snd_ctl_elem_value_t *dst, const snd_ctl_elem_value_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_compare</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5ee4dee86e48095a8eb74379c933350</anchor>
      <arglist>(snd_ctl_elem_value_t *left, const snd_ctl_elem_value_t *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5c2ecc35d664aff974a244478496239</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4506b9e0ca143a5e78e755ee4e285fa9</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_value_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa3c2abb83ed61f20350d056615bda48d</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac1ec603a65de11b4661c04e6327f7647</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga81ad9e08fdd64b99dd6562b698ab7f85</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_value_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c39c251d773d70ee8da07af4f5bdf0c</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7bae3a71028550515183e945040069df</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab009ec5ba8cd90b434beb4294bff5d62</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8ade8618025754cd6b0baebd54bd5773</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga052fb24927d60936cabfb29303595790</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ff78ac05ab5efbe82f3eafe799e050d</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa49c82aaf7052043c69594e3c81204c5</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7cb4db71bdc890579aa8bddbc88be7df</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3b95f6d57955c7648e12023d53ce3faa</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_get_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa4409f368b375cb2ceb6d4108dcd2fc8</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_value_get_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88debd91f21f40b237d22d7255b4a5fe</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_value_get_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3f1d6202c02a34e973b87a2c580abcef</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7a9a86cb477166bc3922bd722afb296</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>snd_ctl_elem_value_get_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga594a9762366355ec131e9fda92243305</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa246c604f97c7a05d125314f0fa72946</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac022b948fe93bc744eb8b24839091b5b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaef406a6ab97925a9df646022800e815b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga89a5b646d118cd73e7ca7d861bb6de26</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a0d53d2dd752fb1aa39c97376d02547</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_set_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b78601c4c56ecb4a6e3556137d61af6</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, void *data, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_ctl_elem_value_get_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11729138fcecfb37f9b7c744c4743fba</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8970ed4dd76ece274e27f0b0429895c1</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_aes_iec958_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaefa891d2ff7ceb075aecfa8bd89fb340</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_aes_iec958_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_parse_dB_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4fa0bc99458acc08a2c59e6ed84bc94e</anchor>
      <arglist>(unsigned int *tlv, unsigned int tlv_size, unsigned int **db_tlvp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad1feefed923fc08f309c4fec2b0973e2</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga625c16724bddbb21b18ae3b2cbaefcda</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0ef60f47c8c82dd84816ae66346359a6</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long db_gain, long *value, int xdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ebf9a5917cdc2fee40245cdbc83a0c1</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab44202cf8247874df15212d684a2b6ee</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344c48d48be3f61d08ce911c462a3bf4</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long db_gain, long *value, int xdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_compare_fast</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa17b28ebe0f1e0e4443182312af7408</anchor>
      <arglist>(const snd_hctl_elem_t *c1, const snd_hctl_elem_t *c2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2a86455eaad4f2730a936d06c62cca29</anchor>
      <arglist>(snd_hctl_t **hctl, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga48b556b219e99c36d65efc6b8a97029c</anchor>
      <arglist>(snd_hctl_t **hctlp, snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_close</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae9537f6a56d663aa9714ccc82689ff1e</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_nonblock</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga3c3e66e230fc93c15f18568342725a43</anchor>
      <arglist>(snd_hctl_t *hctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga32238dba8935b2cb91fbad73aae9e3d4</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga7dd3894b55740cbdb8b2a0bef15af295</anchor>
      <arglist>(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_revents</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga704fd06286869e793e223956b186bfdf</anchor>
      <arglist>(snd_hctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_get_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga098944f4f2d7722550901bf6f80ee91c</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_set_compare</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga5917b8cbcdf5d44d8730027b18ff6172</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_compare_t hsort)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_first_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa68ce403d30e4d152fe4ce82b6c02db</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_last_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga8b7270503d275040a391e05c991ec569</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_find_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaeee7f3f76cb71fd4b3456a9566529bd5</anchor>
      <arglist>(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga9c0abde0c53cafb640bbd6e3b1c3d6c6</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_callback_t callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae678856658731969c884a4c9c810d799</anchor>
      <arglist>(snd_hctl_t *hctl, void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga60c1606f4d423301355344e5373d5ccc</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_load</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga700017b7d9b8decb775702d5dc6fef85</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_free</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga1b3e936bba7a6127459af1244c7da454</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_handle_events</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga02d9dc1cdbdfe11880e3fe774f2034bd</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabd1208fbbe2061021494ea21ab382088</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_wait</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2f0d0548f5d848b6557b2967d0e73494</anchor>
      <arglist>(snd_hctl_t *hctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_hctl_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga93f19c0fb16337f72b6c413512b79f1a</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_next</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaf7c6b19c5feb2392f2d447bc3f54fd15</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_prev</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga89a720775cb955ee4069a45074e4b32f</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_info</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae08b50b118461e6fcc55975e5530885c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga86728d69cc5de843ed46ffb4f3b98e2c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gafaf6b88337fdc827c847e21a6fd0cd79</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga45fc0e8b3dfaeb2dfebce4f613b21297</anchor>
      <arglist>(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab5611090cee93ace74db2e744718ae25</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_command</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaedec51e102fbf6161322553355439121</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_t *</type>
      <name>snd_hctl_elem_get_hctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga98660b650e7c060be8a574402e2f2257</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_get_id</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac1c0ce6f627f2f1560c5db03a93caf5b</anchor>
      <arglist>(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_numid</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae5e86d487c6c964be8a59dfeddb2f36e</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_hctl_elem_get_interface</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabe8c46cbe8b6a2612fa0eaeb1fa8fefb</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_device</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae933e61025507ee572408138e935c63f</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_subdevice</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga894c09354156fd12f8a089726449f6ac</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_elem_get_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab89b9d62f8575795fc52b86415373a49</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_index</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa2bad4d08aa1c8ea98f2a92435583e01</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gacc10c18b636db3388e9b6383058fc757</anchor>
      <arglist>(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_elem_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac0aad0000d7eccde5d107b1b95f429e6</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa9d511449fc220d09e69a05ae65f1ead</anchor>
      <arglist>(snd_hctl_elem_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_build</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga4bb43af9b662b97c70322fb2d9d8ff9d</anchor>
      <arglist>(snd_sctl_t **ctl, snd_ctl_t *handle, snd_config_t *config, snd_config_t *private_data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_free</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>gad8e6a8c5d08fd8a7ddfcd55144dbd9ce</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_install</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga869e7add884017e9b18cebb9b9eb897a</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_remove</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga11ed2053b547dc1f86bbd4f526e4ba30</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>control_external.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>control__external_8h.html</filename>
    <includes id="control_8h" name="control.h" local="yes" imported="no">control.h</includes>
    <class kind="struct">snd_ctl_ext</class>
    <class kind="struct">snd_ctl_ext_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_ENTRY</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac015d294d7ae50614f6991da93893c3b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_SYMBOL</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gaa94fc65e8951f16e4b273b0f81e90f7e</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_DEFINE_FUNC</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga13e494fe5c6068d6608a974f5a62a430</anchor>
      <arglist>(plugin)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_MAJOR</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga110bc1818d56d22b89e2773d7c54a115</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_MINOR</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga9ace8ce6f67297cba3bb365b600c8bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_TINY</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gae99e1c9ee4d5c9e9afaa0376a2af96eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga65ea29f84b09ee3e640f88b06d05a1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_KEY_NOT_FOUND</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac1f0737189a30bbb1e4dcbf681df39fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>snd_ctl_ext_key_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac73a66a3973afb51c4e585177647c693</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_ctl_ext</type>
      <name>snd_ctl_ext_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga6e8d1fd87ddef00af5a9e2dd6c77b1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_ctl_ext_callback</type>
      <name>snd_ctl_ext_callback_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga8185c9a0e27e9562511a82dda1d20ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int()</type>
      <name>snd_ctl_ext_tlv_rw_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga51b74c20889bc3b81f5abc434a2267d0</anchor>
      <arglist>(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int op_flag, unsigned int numid, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_ext_access_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gaeedd1d7413b3025e9cede1b27e509de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_create</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga317775f9c5e239781e71735ca5ba1ca6</anchor>
      <arglist>(snd_ctl_ext_t *ext, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_delete</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga33fadf68f6414722876f21201214f76e</anchor>
      <arglist>(snd_ctl_ext_t *ext)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>error_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_BEGIN</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga4e74ed65daac8e1737b7ec7b38d11ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_INCOMPATIBLE_VERSION</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gae24d4fe06c0a7478ebdaeeeca55d34c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_ALISP_NIL</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga07b06f3c54db1c1d382e02b59b4fb652</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>snd_lib_error_handler_t</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gae71d39953bf482ba487d811a69a9175c</anchor>
      <arglist>)(const char *file, int line, const char *function, int err, const char *fmt,...)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>snd_local_error_handler_t</name>
      <anchorfile>error_8h.html</anchorfile>
      <anchor>a431fec30429b0e9cf1a5fe35734ff98a</anchor>
      <arglist>)(const char *file, int line, const char *func, int err, const char *fmt, va_list arg)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_strerror</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga182bbadf2349e11602bc531e8cf22f7e</anchor>
      <arglist>(int errnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_lib_error_set_handler</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga6ba1f0aa6c6bc5d335ab297d6019cb03</anchor>
      <arglist>(snd_lib_error_handler_t handler)</arglist>
    </member>
    <member kind="function">
      <type>snd_local_error_handler_t</type>
      <name>snd_lib_error_set_local</name>
      <anchorfile>error_8h.html</anchorfile>
      <anchor>a88c091aae3b291d5097078dd39f42408</anchor>
      <arglist>(snd_local_error_handler_t func)</arglist>
    </member>
    <member kind="variable">
      <type>snd_lib_error_handler_t</type>
      <name>snd_lib_error</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gad6a605072dcc056de5f86d67687d90a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>global.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>global_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__SND_DLSYM_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gafefcb2bb4a877727b16de5c56e09055b</anchor>
      <arglist>(name, version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_DLSYM_BUILD_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga355c462c8c5dee0aeadae17d096ba531</anchor>
      <arglist>(name, version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__STRING</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga375c4dc9f0fb338999de81aab826f9d6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_DLSYM_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga7bba39703a3275de48b3e919a2849c4b</anchor>
      <arglist>(version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__snd_alloca</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga0d723ca68908f9c4eb7c6e9eb03cff3f</anchor>
      <arglist>(ptr, type)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_async_handler</type>
      <name>snd_async_handler_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga8cd9a1d441e9219ca5f2ff04094c7c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>snd_async_callback_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gaf8937eadd968df14b64e54f49c29821c</anchor>
      <arglist>)(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="typedef">
      <type>struct timeval</type>
      <name>snd_timestamp_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gadd377862d568809fb0e32c9faddf99a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct timespec</type>
      <name>snd_htimestamp_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga3a3f5b65c40f498cdbc26944bd9855cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_asoundlib_version</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1b8d6e2acb0a62de5c23bd8aef3ec225</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlopen</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga8d048fb538f1487e030396866c0374dd</anchor>
      <arglist>(const char *file, int mode, char *errbuf, size_t errbuflen)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlsym</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gae865f293c8771998b2b6a9f25a135408</anchor>
      <arglist>(void *handle, const char *name, const char *version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_dlclose</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga7cc0866a9d1fbce4e34a8b342674836e</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gafd936c40505997bb659b74bd368636b8</anchor>
      <arglist>(snd_async_handler_t **handler, int fd, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_del_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1c0bd4d123e9581a749b80e2df48b4e1</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_fd</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad601f70e0405a8522860edb15db6350c</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_signo</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gab32c9afe265784634c78e7a6b5d27abe</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_async_handler_get_callback_private</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad9c76588a87918901c6273e6bc98a1bc</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_user_file</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gaade4b91c735abcec70101b9d83b11126</anchor>
      <arglist>(const char *file, char **result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hwdep.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>hwdep_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_DLSYM_VERSION</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gadbdb136d096a033b5a37da051334c311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_READ</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga0c719693523de2875822c7c488aa46af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_WRITE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga256f488476a56156609160ce2a8ff4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_DUPLEX</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga65dd0ca8c1810b8e9c7f9d95a09d444f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_NONBLOCK</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf29d78d2741d1b7dc2647cd2e6525a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_info_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga209969eb18c5461a5cf2ce331c8d0898</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_dsp_status_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaa8ff5094038689503524a6c38e7064cd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_dsp_image_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga228ee5cb7404cabc425d8aa135287475</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_info</type>
      <name>snd_hwdep_info_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga12be97323a913a065524c01fb163cb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_dsp_status</type>
      <name>snd_hwdep_dsp_status_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga904ac34d4d2af6c080aa01d9d70f6ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_dsp_image</type>
      <name>snd_hwdep_dsp_image_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga041c777902d3888a5b000ccd305f32ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep</type>
      <name>snd_hwdep_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga1f13b151f43d06b257c71570010b2ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_hwdep_iface_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga288eb9342aaea8317a7bfa03b22feaca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL2</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa06892f4442380329139dfd755454b3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL3</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa952e48f4f4fc5fb7f2472c5d0c679b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL4</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa122462f3f79578ac7408b476313ffa72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SB16CSP</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa1043d86e7c1b34d3b844892674406aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_EMU10K1</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa805de2b442f7da96cea9d3864df67f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_YSS225</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa469940712513383aeb94e239e3388efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_ICS2115</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaafcd56e8aff83d4be3a9708f7d9f74204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SSCAPE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaad85f235cbfcb8ba4300d3ef6252ea62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_VX</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa4a96dcd5734fe382cbfe8545522fa7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_MIXART</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa47cfeee8ec9532f213b2151c9f411990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USX2Y</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaae7f996ad6c0601e558353404e32c4366</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_EMUX_WAVETABLE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa01f290961f48f4981d91b158f517000f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_BLUETOOTH</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaaa644270f5423d396c973f32c82d489bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USX2Y_PCM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa72513cceee36da63f12514742d491a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_PCXHR</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa1871ee51a3434c7cf0e1afdff93c5775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SB_RC</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa517dcdf103a96fab2aad10e8df123afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_HDA</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaaf386ce97ea4a4bc1ae73be55da7e1b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USB_STREAM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa9dc5977a60b6d155fc6f6689f5208cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_DICE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaad82269a7bf2ea4c8ea69511292071ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_FIREWORKS</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa98638b800a2d27eca5e70a63571e8c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_BEBOB</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa6fdaff4ff3d98b2d74815ee058fd574e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_OXFW</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaab405c3453e2ec2c437945b2aeac92d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_LAST</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa08d49aeea9f376daf523a8f7b2825744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_hwdep_type_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga839de1d3a2bf9495cc631c08099bca79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_HW</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79a177e7de0de2e799ff985de775ebee841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_SHM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79a59cee94d2b24ab7d23be97cb88705e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_INET</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79ae9843ef92e5b944c9b0623389a38fe29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_open</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaade8a9030fadb398fdb6d139f360f07e</anchor>
      <arglist>(snd_hwdep_t **hwdep, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_close</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga35ba1e894c069b37012604abf1432314</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga179b89384deb4c5a76b7017e6ba6af88</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_count</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc4e48e9d9fa90fb5e35b3502cfe6f7f</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_revents</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga654b2c89f1e6bc16e590161340f1e3d9</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_nonblock</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6eaa5f13367625587fdd955fb4cb4c51</anchor>
      <arglist>(snd_hwdep_t *hwdep, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga97f208875f4ec6a253f088e3c2c084c1</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf071b6171019a11a72367cc7f9613f5d</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_load</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7316c8ce8d4ba06b58e6536e3cf96223</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_ioctl</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga74f5260b0f5f779932bfe7afcf68ecb1</anchor>
      <arglist>(snd_hwdep_t *hwdep, unsigned int request, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_write</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4c158ce0db68b8bfac1a00abe5e2ffcd</anchor>
      <arglist>(snd_hwdep_t *hwdep, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_read</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7ef0c6e7ae7b838d509dd09b800b321f</anchor>
      <arglist>(snd_hwdep_t *hwdep, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_info_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gad39906514d5d04b7ebcc190382b8bd27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6831cd666bea427ab3779710e90a857</anchor>
      <arglist>(snd_hwdep_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga9e19ef5118f808962689c3d947af1a00</anchor>
      <arglist>(snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3132936fc99968e59df02711d2927018</anchor>
      <arglist>(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_info_get_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga23deebecc5e88b0124222ebf73999c24</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_get_card</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga04193d4395908c0e31ac826ac05d3824</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga80bb1ca217fa051086e7f2ab5821ee34</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf7f6251acc0f26d6fefc2c28fcf90c6a</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_hwdep_iface_t</type>
      <name>snd_hwdep_info_get_iface</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7d846bea699c0917f54d75fe5d76a58e</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_set_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga5f497ef1c3a675af203923d93eda4202</anchor>
      <arglist>(snd_hwdep_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_status_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga54205faff69bdd35b996863094bafada</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga444c5bd71b0a3756084450dfb7528c6d</anchor>
      <arglist>(snd_hwdep_dsp_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaa7d3a0f8f01805b10342581893e9671e</anchor>
      <arglist>(snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc06c08ac09beec6b50fddf5496ce25b</anchor>
      <arglist>(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_version</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga52f6b403c2a4947c647043fdd7c5dbf7</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_status_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3f62477a689ef9e84048f7ba8e33a792</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_num_dsps</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gac49bce861455b700ba79c3eb9f73aae9</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_dsp_loaded</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6c5e57aaf95a248814897bd80e12edf4</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_chip_ready</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf49d8044583b6f0c890bbb6a493734e8</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga8a5e773b145d973ea5c75057974a371d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_image_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacf44ffc69400d7d195809c18cb71f89d</anchor>
      <arglist>(snd_hwdep_dsp_image_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga95c9c00e3b9b20ba6a92ac9d14c5cfdd</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4178c718645804dffde98bf210e447b5</anchor>
      <arglist>(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_image_get_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gada5fa0eaa5a4a941dc5b79ae1897db76</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_image_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga025e4656f44f73d8c372b8b10285f202</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_hwdep_dsp_image_get_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga330539511a4fe2936351b34a26cf96ff</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_get_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf6087e4530245055c8cceaa74df629aa</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6e93c88a4595ac0915211dca5f46ab72</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, unsigned int _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6529c1bf1aba5bf2abdbbf157a4e9e0</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3da9921e2aab7ab9ed91a39c4f3f6a0f</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6de5750e29632c68af2648dcb11a1429</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, size_t length)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>input.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>input_8h.html</filename>
    <member kind="typedef">
      <type>struct _snd_input</type>
      <name>snd_input_t</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga39165553a2907c5a27f325e3ce4e8301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_input_type_t</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga95856616f8604ef37e7f5e6738ffad8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_INPUT_STDIO</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga95856616f8604ef37e7f5e6738ffad8aa2d48649c7cb19e419a82b2c4bab68515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_INPUT_BUFFER</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga95856616f8604ef37e7f5e6738ffad8aa0d269e19ac019b61ec5e3afa4a1d9b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga68ff91aaa391b39f5a3082e202fdd2ff</anchor>
      <arglist>(snd_input_t **inputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_attach</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga70e6704164f80072bfa118160ff81d54</anchor>
      <arglist>(snd_input_t **inputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_buffer_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga3c7947884b1caf50117bcecd23a3cc22</anchor>
      <arglist>(snd_input_t **inputp, const char *buffer, ssize_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_close</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga4c86d6c288e2b1be3fe2efca6859cdd6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_scanf</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga079ba3d8ad9cfba4003c28520c2f8121</anchor>
      <arglist>(snd_input_t *input, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_input_gets</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabc17742247f4733f1891c2caec453988</anchor>
      <arglist>(snd_input_t *input, char *str, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_getc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gafb9476884661a2d685e59e58740cc9e6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_ungetc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gad665d319d2d0a4127110c141ef99a02b</anchor>
      <arglist>(snd_input_t *input, int c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixer.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>mixer_8h.html</filename>
    <class kind="struct">snd_mixer_selem_regopt</class>
    <member kind="define">
      <type>#define</type>
      <name>snd_mixer_class_alloca</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga040501051e4e4f8667caf0e89328702b</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_mixer_selem_id_alloca</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae97a5b8fbc068632409e1459a9476222</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer</type>
      <name>snd_mixer_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga34161447bc01a64f578456ed13d57e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_class</type>
      <name>snd_mixer_class_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga51c7b205d5afc62342d9dec3ce54d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_elem</type>
      <name>snd_mixer_elem_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9bb5eb24e4feea6c1a04c79b77938ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_callback_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga8dc213e4c7156e1a0dad485700dcdce8</anchor>
      <arglist>)(snd_mixer_t *ctl, unsigned int mask, snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_elem_callback_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga667c25f9cbf052f9eaa867a5af271007</anchor>
      <arglist>)(snd_mixer_elem_t *elem, unsigned int mask)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_compare_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaf4cc71d58faf35cb8f62006e467b21e8</anchor>
      <arglist>)(const snd_mixer_elem_t *e1, const snd_mixer_elem_t *e2)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_event_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaa121b4c6c77665a9482b7a8d2128dd8c</anchor>
      <arglist>)(snd_mixer_class_t *class_, unsigned int mask, snd_hctl_elem_t *helem, snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_selem_id</type>
      <name>snd_mixer_selem_id_t</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac0bfc2b9efcbc308df2daad92983e2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_elem_type_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga18a15493e66cc90ab851e49161d28b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_selem_channel_id_t</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf01a92f33cc46d0b3878d65afcc41b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_UNKNOWN</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a91369fd97c7cb996647c1993136b70ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97afabaaa694a14ab17e1c03ed0a4ff6f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ab9310897c48a0aa06c822d92970b77a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ad72538d298df9240b9b776f7019e9c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97afa66c007bd5deda0b6acb7516c483c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_CENTER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a796f68400623ee579ce3d0a913d7ffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_WOOFER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ae8b2cde33cdb6ba8b7a2f58a69d37e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_SIDE_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97aa50f3dbd34b82d2634c0dba82a85080d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_SIDE_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ae95813ea4f45d4fb8c3827adc7d36e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_CENTER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a709e466b14161e3aba70717b2fc528bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_MONO</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a6f894eb8b9532977e29e99122e995833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_selem_regopt_abstract</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab7031d53c3876396c9880631813979c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SABSTRACT_NONE</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggab7031d53c3876396c9880631813979c2a807967c1a34b191d53eb65fe4a6f656c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SABSTRACT_BASIC</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggab7031d53c3876396c9880631813979c2a71c3a86bbb0514b4c5c488741dec000a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_open</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga240cfebce7d68f22875d76e99cf19394</anchor>
      <arglist>(snd_mixer_t **mixer, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_close</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9deea3f628bf737001d968620cfd3b1a</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_first_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaffccf51ddf8ecdc357b216cb979a2318</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_last_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga51121b263ea3d3ee9367aabfd338ef11</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_handle_events</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0cfb6b50ec2493281107b0649f87cb8</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga8c36e99e3d2ab0cb76a5acd203face45</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e5feeb925addfc245ce81c037b1397</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga99ca1c15d46d5f194a216d5e0a8e9229</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga63b6f8183e08a2b3e6bb83638828e8df</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_get_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafbbaedd662ea57e573e09f39ca8b247c</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab3ee14782a19e6d62acbdcdb5f9f7786</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07f7bc33587907988aaffc03ce72367e</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_revents</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab26686311756ee3c66e05766227df818</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_load</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga24b6077528d04cb9fca072b3ae109aef</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga93a71c28e82c04e4c732703e309910fd</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_wait</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga072846849f4bc2058336fd6601f18a15</anchor>
      <arglist>(snd_mixer_t *mixer, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gac7e1bbe5d5b69a6ee67d5bced6325a67</anchor>
      <arglist>(snd_mixer_t *mixer, snd_mixer_compare_t msort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga691a593ea0a32f9535fff83b00a0a574</anchor>
      <arglist>(snd_mixer_t *obj, snd_mixer_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9cfc303fa34eb234efeb52151838f88b</anchor>
      <arglist>(const snd_mixer_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab91fc99ac65c866e660d4d8be0cb3e17</anchor>
      <arglist>(snd_mixer_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_get_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3447c190c69cfce4c52df4ad3300e319</anchor>
      <arglist>(const snd_mixer_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_unregister</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga6a7bf3805fbbfc3f6f8243e91fbce5f6</anchor>
      <arglist>(snd_mixer_class_t *clss)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_next</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga68254228ef108122b8178087ea0fcc16</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_prev</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaaf9a9dfe1d52f40df2be517621f9474a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e1fd766a313ce513f561bd03c98317</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga78c51ad2e60617137e47ad1d58b45916</anchor>
      <arglist>(const snd_mixer_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4fb4ea11326c1cb1fdbf5dac0444507e</anchor>
      <arglist>(snd_mixer_elem_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_type_t</type>
      <name>snd_mixer_elem_get_type</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga1083ba441bb93da13f79bc0cda226ea3</anchor>
      <arglist>(const snd_mixer_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_register</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga595cbd9394f85f9af4a6b30e748e3930</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_new</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga226cf962e72b6132fd61cbd434b28941</anchor>
      <arglist>(snd_mixer_elem_t **elem, snd_mixer_elem_type_t type, int compare_weight, void *private_data, void(*private_free)(snd_mixer_elem_t *elem))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_add</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3b0e73914256f2125d2b7bb48d602457</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_remove</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gacad36ead935e96f75fe44cf8dd4afa2a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga40d8bf56621085d5ed5a7e92ad067e03</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_info</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae4a32f9d571201a2bf33a65340dc9afd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_value</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga0d23278769e37532f810cecf2ffffacb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabe7f0255c9a981a6c73a8edf359781cc</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga7413e8f80e2e556c75c6b9fc7d0598f9</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_empty</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0541b86ecfc094a172b4cd29bb70fd0</anchor>
      <arglist>(snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4cfddf235c06ae83765ecfd45c5a95d0</anchor>
      <arglist>(const snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_class_sizeof</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaa61b83017a92b67ea27a18777dcd141d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_malloc</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gadc36fd49fdeccc37c41fc700d29adf39</anchor>
      <arglist>(snd_mixer_class_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafef7028555b5c50b9bb072ba6d441ddb</anchor>
      <arglist>(snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_copy</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabaaa35c5538fec113fffdaff4cbed2fc</anchor>
      <arglist>(snd_mixer_class_t *dst, const snd_mixer_class_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_t *</type>
      <name>snd_mixer_class_get_mixer</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07e5edf36e361b3c1293ed14d2ef5b76</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_event_t</type>
      <name>snd_mixer_class_get_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga5744823b495ae331e7dd60f2abdf3589</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_class_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga95b50447f32262756143cd7d9e76997c</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_compare_t</type>
      <name>snd_mixer_class_get_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad7182d1d18653709bf26fc53a8b1a94f</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad0162769035880347ea9af0dbc518e79</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_event_t event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaf3b845bb0637fc59cacfe59ef29398d2</anchor>
      <arglist>(snd_mixer_class_t *class_, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafe066ab71d568f7a616a587da7e3c1a5</anchor>
      <arglist>(snd_mixer_class_t *class_, void(*private_free)(snd_mixer_class_t *))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab389fb10998a950207001e3f8abead26</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_compare_t compare)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_channel_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga37ae8c6874d975efa83a9074a28113b9</anchor>
      <arglist>(snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_register</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadd686db0b7d2bba9a88112b732b147d0</anchor>
      <arglist>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_get_id</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02aba43d5ae75392b6344c7f8f92fe72</anchor>
      <arglist>(snd_mixer_elem_t *element, snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga51329fb3fea12d50209fcf8ebf542492</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga11a14cd0d589033d49647d27e12b9cc1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_find_selem</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad9b0c9a6d7956f95132aa42857d962cb</anchor>
      <arglist>(snd_mixer_t *mixer, const snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_active</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga41eb6c6d7a237dc617115ba4ba91ffbd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_playback_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacdc9e474bb45ca6759a2f9ea878bc1a4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga621b34fc2c4f47a28fb9b34a3dd820e7</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_capture_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadc4c2179abd18d7c587cc199bb8e9273</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac05de257374bae60c03ba033344f811e</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_group</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae75b0133e7beba016589259b30cf8e7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga08c4099ef62508d5ae7f13bd6affd5a5</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga17468934f36929ae2f7af4850f40f851</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf39321d4b7bb2efac3a3af357e42c6eb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga095d73eab22ef19cabed8732ffc44a7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1646edce83681e786da2f1a6befaf113</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga468e0188282093c377776683bcea20d4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga4efd34d5ccb384e8db4291bd3aad0760</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga162fa35b3cc76e67c14482a2f6b734c1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6761e23f215d3d048c729a22cfdd952a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga14a6a278ef91593d3c6fc53007627d25</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_exclusive</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1ad2e8afe6f5ad7857b0bdc70048d44d</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac8e2c7d0555f58ec790443da87ecbae3</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga87dcbf4b28ba67c8a07cdd79231b9942</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3bf17ce7cb933fa69973cb69ca079f13</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga40141aa00e0839bdfa8398b5aac1a0a6</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga12f6f4124bf45db95f965298c2f318bb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3b15557f590f136735a4abee96cf28fd</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6b5799e7971688e1f2e9ccf977c8a887</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga27bf2c4bd591bcf61b3fe20353bac8da</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga55a4f32e711efe4ef09cf041d9fc27f0</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga49f4c3b98ef2353cdaa582e5bf3417a1</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1e4556740beefc8bed40677a316e60ac</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8aa6b212e1e092e5d67ff11070a433ad</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8bfb52575e4bb06deb30799bc39c0768</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac1af2ccb94c19e7f616338791707c2eb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2567351a2a7a70e6dda81f5ccc38d04b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga0e6e40f799c9a4042444a4e26194d451</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga555df8c54f170ebe7f389eb7a8d04cc9</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga395321949ec6444ca4590f0ca3eac6b0</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1a9b7c48b94d8cbeffc6847f3b884dcc</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3de8f16807b23cdf9399f86a5eb3a353</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaa3e28640247b4eef389269b92f5b4a9d</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad43024c7d21c38cde7b440cdc6a85c07</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga09557e90c11fbd37aeed30938338698b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad874cffabe541956b610858bcb38ba59</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf4b095372a07bcdf769d74fa73c803d5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga95e2624e7aaa7624e89121ce3f63b9dd</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga332241fcda7a9364b4d7830b592ba6a5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga608663233daecd6b373aba808f5fc427</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enumerated</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab367abc11dae3681978c2f831afd1e37</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_playback</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaed68ad405d2c2e9447e2fa1d4f5d1107</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_capture</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga90c5c5c0428fd0d6722c5a84348a39b0</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_items</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab803bca4a9c322e1efe87950b62431b3</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacbae7ca76dc02dd172c80f8f704dd8c9</anchor>
      <arglist>(snd_mixer_elem_t *elem, unsigned int idx, size_t maxlen, char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6679dc52033e29b88da32f5bbd45f205</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int *idxp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadcba6291c0382676ee442311c0ff1a8f</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_selem_id_sizeof</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga29705a6b18fe910d2b7aeb98531d5056</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_malloc</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac48d80bc60d03959c43a3ec6caca8498</anchor>
      <arglist>(snd_mixer_selem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_free</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2a6f790706e3ed64e1fb0f61177d13c5</anchor>
      <arglist>(snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_copy</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga089d6e51b1b92fb51ff2cb771071a169</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_id_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae54797dd9e4382d67718899047fa1087</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_id_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gabe5105469fa31b85a52253e709733638</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad127341c44087525e1c715044d7a3919</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02bf0b9758ed4146eec38cd964b7621d</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_parse</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga863202350cc4cb16661e7a5804b83298</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>output.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>output_8h.html</filename>
    <member kind="typedef">
      <type>struct _snd_output</type>
      <name>snd_output_t</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga49729cc6454539495c1f5b6e95cd474a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_output_type_t</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga7217dd8d10e2491388e866d3354a4b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_OUTPUT_STDIO</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gga7217dd8d10e2491388e866d3354a4b29ad8291a0da96f6bf0cc0352e256fe8c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_OUTPUT_BUFFER</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gga7217dd8d10e2491388e866d3354a4b29a5630f21823bbe05e6547b8cc27af4e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae7b87e8cfcc2d46b124b2ad221ed6435</anchor>
      <arglist>(snd_output_t **outputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_attach</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaca78d01bf6d081274650794861373c7d</anchor>
      <arglist>(snd_output_t **outputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_buffer_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gafb4d1ae52ed7148b0abab0de3257fae1</anchor>
      <arglist>(snd_output_t **outputp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_output_buffer_string</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaae66e163bd719593b6787d922546a055</anchor>
      <arglist>(snd_output_t *output, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_close</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gab4be4e572d2a0d0f2f46faf8d45aa35d</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_printf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga5dd8e7d3089a82d8449a9dff221caf1c</anchor>
      <arglist>(snd_output_t *output, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_vprintf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae01572ae47fd3ead25ffd6856118780f</anchor>
      <arglist>(snd_output_t *output, const char *format, va_list args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_puts</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaa370cff392c8fdaf03e08c667561d4ec</anchor>
      <arglist>(snd_output_t *output, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_putc</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga7b2b8c27042964a5b57acabe0af6e30b</anchor>
      <arglist>(snd_output_t *output, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_flush</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga9d188a05400c944bc1f70d757c179226</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>pcm_8h.html</filename>
    <class kind="struct">snd_pcm_audio_tstamp_config_t</class>
    <class kind="struct">snd_pcm_audio_tstamp_report_t</class>
    <class kind="struct">snd_pcm_channel_area_t</class>
    <class kind="union">snd_pcm_sync_id_t</class>
    <class kind="struct">snd_pcm_chmap_t</class>
    <class kind="struct">snd_pcm_chmap_query_t</class>
    <class kind="struct">snd_pcm_scope_ops_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_DLSYM_VERSION</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga32ccf47736036e86b0d787dc43e64d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NONBLOCK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6bd90de1d1527b5804090dcce51079ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_ASYNC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga9b22351abf6c85ced128e2088f6f6a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_ABORT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga06aa6da1ebeff70c83d9f6e18a91a3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_RESAMPLE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaba352dfac44ef1681f91d476ed781005</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_CHANNELS</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga64fa40b556374dabe40d4874242fee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_FORMAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gacb997a23fbba62232101f730e9ae1e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_SOFTVOL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1f67b4e05749f0d3dafe7c17e448518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_API_VERSION</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf79d447b5f5c0936cfbc769eee03078b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_POSITION_MASK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad6713109477a592274f92f85670fcc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_PHASE_INVERSE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad98b225c79dd92fc387b2e7884ef97da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_DRIVER_SPEC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf3d1c438269afa0206fb9f2151c4fc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_info_alloca</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gac60fd444f9e73bd12bde83b783f9b4f8</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_hw_params_alloca</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga06b83cb9a788f99b7b09b570b4355cee</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_sw_params_alloca</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8e564553bdc89948c918729e3cc7beb0</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_access_mask_alloca</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga8097b3ae42fa4a2e5bece2ca95b515b7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_format_mask_alloca</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gadee8697e8c4f7fc018603fbcbd0a4b31</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_subformat_mask_alloca</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gaf450592f4db1a03f975a3c41011613a5</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_status_alloca</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga046c09e5d14b684d9fefd70a12cdde1a</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_info</type>
      <name>snd_pcm_info_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7dae86a468480ce8eb1c485446c51664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_hw_params</type>
      <name>snd_pcm_hw_params_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga65c737127994f0a980edad744e36dc40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_sw_params</type>
      <name>snd_pcm_sw_params_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7e082d9ea701709270b0674a0be23b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_status</type>
      <name>snd_pcm_status_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga902b87281c46910b469d5f7aaafc1890</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_access_mask</type>
      <name>snd_pcm_access_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7f9575bcc94c7c2cf5d688a45c16ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_format_mask</type>
      <name>snd_pcm_format_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0936aa9ac0051a3611583a2740915545</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_subformat_mask</type>
      <name>snd_pcm_subformat_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga891b054202089747199bc3348b9d9630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>snd_pcm_uframes_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gab01fcfe9b97382a8d3f2027c664b8b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long</type>
      <name>snd_pcm_sframes_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga71cdfa37e258d2210b8bd0216bf0c36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm</type>
      <name>snd_pcm_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga919e634deecd855b6e2e15174e70d3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum _snd_pcm_type</type>
      <name>snd_pcm_type_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaca6314f46f54a0b62536c403bbb62601</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_scope</type>
      <name>snd_pcm_scope_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3cd150b8aa57e634e1e1dd914940c765</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_hook</type>
      <name>snd_pcm_hook_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>gae6b33860eeaf4eca00bdbef9383c1911</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_pcm_hook_func_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga1f6104443e129a88c5ac82bf398464a5</anchor>
      <arglist>)(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_class_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad0e95dc8a590d8f9915fec237d7a28a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_GENERIC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a3899ef7b0fa4a9717abe5587e9110514</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_MULTI</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a223f6ffeb72c72144f4f680998fbedb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_MODEM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a79cdb236d774a3a5e17cf4929a16936b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_DIGITIZER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a69f4d2c8aa3195c6fc140b6d4c2f25ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_subclass_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6a164917c35e2216f6e76beff4e4d0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBCLASS_GENERIC_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6a164917c35e2216f6e76beff4e4d0cba79a61939325a37b0fdfcf6e9ac0ce572</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBCLASS_MULTI_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6a164917c35e2216f6e76beff4e4d0cbaafd17e33fac6f3c2b7e9bb48473b8c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_stream_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac23b43ff55add78638e503b9cc892c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STREAM_PLAYBACK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggac23b43ff55add78638e503b9cc892c24a57a2b920dbc34173479fc9036cfc78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STREAM_CAPTURE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggac23b43ff55add78638e503b9cc892c24af07834f756b4f95cb61987f4811073c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_access_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga661221ba5e8f1d6eaf4ab8e2da57cc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_INTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa90a5dea527c5ae9a53f1448beb2dee6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_NONINTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa7de225785e05dd1d538203c5ece9036e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_COMPLEX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa26a4f161364cb539df4de5eeb9949121</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_RW_INTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa72a970ed6e676ab0fd9f3c3d36737e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_RW_NONINTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aae7ab128d10c32667f396933190435071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_format_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa14b7f26877a812acbb39811364177f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_UNKNOWN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab1e118ecdccf628639b5c85bc3a48999</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S8</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a5b78bf93eaed5f52cf16c582f04aa7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U8</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad5856f97113926836a7c6651cb8864a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8b66a29293c62df9d1678c609fab76c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9f6783e14d7cbb5023c86427263b0d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab2f9619da5d5062e612b2ee0929e8164</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aecc04aa997503c030a47fe5798514180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a04b3c3b9ad0106c9619a28b753d8fd18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a226d2f6a6bc53a6f75786ca8fad3fc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a33b2fb89235eebda4e6820d4a80a4c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a2c2effcf940fdee8eddf43a62360f7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aa99dcea38d9cd8ea3b8a6e9ea85bcc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad30a0d4bc893eba11d08d72b3916ca2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a4c9ee7d82e322009e85f7cd739bbb692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ac4d69a20b22df53a63ad8589bbdf6f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a083f32474a84d344e0da496470085c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab24eac408b0d2ae6b5f68ed3a7cd2d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8e6d82461abbb8be043f8addd23f76c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9215cd0ab46e6db8668d8bfbb3cd76a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a4a51dcbdb981d0357447115d7ccf3b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a347bac4a7d9ac64e3019a2f3238e09fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_MU_LAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a1f71fdf666f5dea8b84d627ba84a9ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_A_LAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9d1017ad6b2f73e97f20cf933a5d8a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IMA_ADPCM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a984ec5c790504560bfc7564cfeaddc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_MPEG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3705d4bd3266f3a68c276da9e7a65660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_GSM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a32ec1ed1e6bc5eafff1547e1401f679c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abeb8a83f4a3f685cf8051842ad40d25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a17cbdeeafef56a2e93719a1866c9681a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aed034cada192ddc4814c6ebf19f37bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abc818f93cee1a1602d808549ba5adfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_SPECIAL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a770a94546bff2f0d07e32dd22c5f9a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a1fd8c22f3dd45fc1b8e41b0b5e6107ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a531ede921f12bd96e02499f962fdb7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a76ef58eb516389000bdc678ca69515c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a26318cc44ae67775ccedc1f5ba07d925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8f23da6a6564831a09f079f4d0e7fd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a178dd8e9b92a0dbe80ae837979720fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a15eb6dc96e7940b06b2b40fd483073a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8d4e75049c83e0b26493d4d149de5b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S18_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a89ba6879c39fec5ee33f2b760ebd7053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S18_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad49193efd29a9f7085ddcd08e3b33eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U18_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3ab354cc702a7b9d651aec726bb8a68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U18_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a0bab067dee022bd684b1015762a44663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aac4470b6be81c22af0cfe528bee4a474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a032b33ad0fe643a3177be26148f026f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad2eb0073f6d7ba800695c088b32956a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a036c86abc5151b9a1f19476d34120994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abccf973f2b6eba3481949a7b5b04f4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abbdd76fc846d3a68c19727a44bd38336</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a7d9fd83c6ff5be7a9cde4b0673b64bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a0ecea6572fd04ef25ae24cde617eaa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a7ecefcb13f1fbb3ffb24f9b6582d53cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3a80019ca0ede6cc2278ed13f03ce3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ace45a12e077ffb0be4df727cc23ea099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_subformat_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1e5fe73a6bdf881e2f91921d5e5327c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBFORMAT_STD</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga1e5fe73a6bdf881e2f91921d5e5327c7a09a538c9147dae5bb19df88198f0ebb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_state_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga61ac499cb3701ce536d4d83725908860</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_OPEN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a56cf8033b50561b57437232e243f3007</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_SETUP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a58d9a0501aa1b2bd2607e1084c335672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PREPARED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_RUNNING</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_XRUN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860ab63b5b90201110cd586b686355fd5d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_DRAINING</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a86f88c2a4c8eedb5c91f3b6cb4879cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PAUSED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a9fa0c5b43e5c924f87b50e22878a8952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_SUSPENDED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a79a05b6b619f88e153d50d9daf2e84bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_DISCONNECTED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860aa0cbad634a40383eed6059d1b49c215a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PRIVATE1</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a5003a732bf308c84259933c64ab02f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_start_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0eae9150f4f207ed05cb629cc3a3673f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_START_DATA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga0eae9150f4f207ed05cb629cc3a3673fa1784d28a1a0b6d0dc9726e8093fef095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_START_EXPLICIT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga0eae9150f4f207ed05cb629cc3a3673fa3f7514d50731fbec3bf3963f8f50e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_xrun_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga67c10983b5cadd8b3eb3163489655784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_XRUN_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga67c10983b5cadd8b3eb3163489655784a2041251f57b2d807a87dbb33de4a0299</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_XRUN_STOP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga67c10983b5cadd8b3eb3163489655784a79be5aacb29e5eb3cea538eb7a24c57c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_tstamp_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga695a9755880cf886c13d07938f92ea77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77af49a1c378583854b22ed6f6490f3b1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_ENABLE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77ac62f4ba2b203d59b8f11074fb12788ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_MMAP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77ab09196ab367636c4d365b5b6bcd391d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_tstamp_type_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6e7869809e23ed1a3595e94fbd9a275c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275ca363906e727cdee56da82cab964ac3ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_MONOTONIC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275ca649eaa23a8ba59ef31b7cb1582a9d2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275caaf1a88d034848bf2154be94ace1f8cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>_snd_pcm_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga060d5b81f2fc8efcc35ff3e1de6e9fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_HW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a09891cdb0b9282c37c41941b922b12c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_HOOKS</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a2e332e4a85ab27030c8504a2becc02ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MULTI</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a568ddf1cfbafe64782e3073b235ff5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_FILE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a583a91928c037820337cd8915cd85e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_NULL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a1fd5236858488b6bb1c565ae83ba451d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SHM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a7af39420542c41f72a62551b2ae8db6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_INET</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3b07a18a1c2cadfc4e2eec2d62aef57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_COPY</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af09844304be19ee3a81ba5e2165e00bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LINEAR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3a89f56e7151dba7ba93e392fe709222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ALAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aaefed6aee6ad9570fa3fdd5943702e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MULAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a225a22f28b83348c81b9962b53f68419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ADPCM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a8b358976321af44871bfd4f5743eb7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_RATE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ac551ab5a7b8c32d4a79a9f605287c4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ROUTE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a25b8c982e260c67fdf3da22a7d68bbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_PLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af03892219cb4ca4f07025b7a67d3890e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SHARE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a5f90c13d40f32cdbaa24304f1f4aa260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_METER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a415afb5482d35b38837035a6dd82b39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a9d46de594d5885faa0fc4c3075eade76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DROUTE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ac48d9a315b2094989b303b62939f4d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LBSERVER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a819e90fe76ad9b1f8615cdaa76d47606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LINEAR_FLOAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af99ee7d59e1195c15440b7688e36b4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LADSPA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af3096430cd38726e8dd3751c611af13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DMIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a1345bfdf8c4052ec4eaea99ddca5b25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_JACK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3c059ea48c0ecb784421997aa302ff44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DSNOOP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a4fd7bc5c326b81d47841dc3133c6a154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DSHARE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a02bca0b5efdbdfedb0983dacac599977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_IEC958</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aa94a5d305b7803cf7ccda2ca0099a954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SOFTVOL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a80dcbde2dd52a423f8c5b055aacaa17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_IOPLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ad4b0a23cef67fe330cce313c4f9e242a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_EXTPLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a876553cf6a0650a8adcb17c3e768a8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MMAP_EMUL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aa426bf738261ee3cd1ca3a25d8cbed12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_chmap_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad77f16d07431203bacc8694d28814506</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a0d5c1dab935398488b798934515f1fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_FIXED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a223cda2f0c432fc4706089304b550e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_VAR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a4c6c131c3ec7eabf1073244c9765a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_PAIRED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a7f52f1c242f67d876d2bc920aba932b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_LAST</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a19c6886e5e3b457e1a6f055f124f0fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_chmap_position</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga07f09c302588b9758946fedf97772975</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_UNKNOWN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a5013bd25392cde7881a00bdb4ab030ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_NA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a757ea8c2af5fcce95adc50d1faf12956</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_MONO</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a57f7b8aa28a96384e75d6a75c7f2728c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a583e5b3018a572266dff31ceb647173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1199db6603bfa8756b109720d6f47b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975af55c7cf1772be450187b9c733e5a4601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a2de6b761ffe69645bdc84dcc154ca704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1b986f167d0af5a2993688f0dc4f7ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_LFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a2e02fc34fc3156b9b651ddafe9430e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_SL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975abef51a1484c1b62ba57abdbf4c319018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_SR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a99a126ad5674edde88e274247cdc77b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ab826e0b6dc51913bed17b9c9cd501b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a899724c4ba10d58f489aa95b1be85707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a715eee05d56adb21c32f04a2dff32f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a792ec89e7ed77e517fca9a042030cf91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a01bb8ab068f1ad7ea82201fda13e7351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a0aba5e9499f8c439d7af5aba4eea7013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a866fd0a5bdacb87f672c06b19c95e3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a0ebb60cbf70f6bdf44f23ca53f27a48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FCH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aa6fc16c41ed3c77d03d5338b71767dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aedc57856e5d15e089ca997bb2517e558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975af92f549344923b13b3f988a8bd411248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ab408982aed624e7895a88a70d3cad9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aac94c3e49e00cf6ddc8277be9211af8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a8afc5e5e7278cd11e275c353f7debb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a9801a726d1ef900db691fb3ee766c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a8f2b99c9f99b964305e7b20a24205845</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aa38f97720df84f0d0a729a2977a7e96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a056a6a819e4f86531c2f72f2cca30a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1901ba205094fa4d78ae1b6ccba2a0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TSL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a37e4efa8f78e28245172e609b3e2edb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TSR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a002352cd72d1a7bb12a371c0a700368e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_LLFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a98412e4b242d63dd0f6543d7979f65d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RLFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a5a90ba518606bd795133b7464e297037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a6bdb9ff785f20a01942c51f5306f1b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a64d185c840a6c5a85b373c7b4c24a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ae8657844c743e6303622c8a5db01f9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_hook_type_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga57b6ba407d293017e116fa1b462a2411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_latency_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga0c8bcbf9cc83e8b0edaa501b15ff8ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_STANDARD</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9a51386f1133cba0e74aad6fbd8f6cf714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_MEDIUM</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9ad392df38379992a4474f24fa2d0a7146</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_REALTIME</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9aa29ff6c1b58c9b050df6ae575229cd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_xrun_type_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gaf89aba8106b8cc46e9f18d91268ec5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_XRUN_IGNORE</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ggaf89aba8106b8cc46e9f18d91268ec5baa7ef0dcc10a5e328bc78aa472d882f1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_XRUN_STOP</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ggaf89aba8106b8cc46e9f18d91268ec5baa716f9883b17fe11b35d162a6ff14a96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_duplex_type_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga6ed7a5a0762c198cb90ee48fb477b092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_DUPLEX_LIBERAL</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga6ed7a5a0762c198cb90ee48fb477b092a1baaaad19888ceeaf728364362274e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_DUPLEX_PEDANTIC</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga6ed7a5a0762c198cb90ee48fb477b092a3efcb3f575fd6b86c0198dc87484f7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8340c7dc0ac37f37afe5e7c21d6c528b</anchor>
      <arglist>(snd_pcm_t **pcm, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_lconf</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga88164d313d8ff9dc33c94815869cb677</anchor>
      <arglist>(snd_pcm_t **pcm, const char *name, snd_pcm_stream_t stream, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_fallback</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga189a69e31cec0aefa8c124764e99e0bf</anchor>
      <arglist>(snd_pcm_t **pcm, snd_config_t *root, const char *name, const char *orig_name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_close</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga042aba7262a4cbb4d444b6fc08cb7124</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5031edc0422df8db1f70af056a12dd77</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_type_t</type>
      <name>snd_pcm_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa7cf89c3f83d83aaa0248055a783b632</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_stream</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8eea4a021a114ecc3e8f6d80901faf46</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_count</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac7f4cdb1c930b8d343714f60afa02fc4</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga742e8705f6992fd0e36efc868e574f01</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_revents</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7e561f305702c6f52dab49b6c84f7df7</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_nonblock</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8d9ed4a62c17402de0389fd31fc7dc1f</anchor>
      <arglist>(snd_pcm_t *pcm, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_pcm_handler</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5a0c0da6d0d35a3ac9f6a97567ac3b63</anchor>
      <arglist>(snd_async_handler_t **handler, snd_pcm_t *pcm, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_async_handler_get_pcm</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gace4920d5943820c395dab8d9cd4fed0a</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gadd9467ca75884292234e4986b329a17f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf8cd01c4c6b79c4a45a2c816fb8fbc5f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1ca0dc120a484965e26cabf966502330</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_free</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga242ad0a269c272830d30666220edbc2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga61c5495ffb44c75aaa595e85512d28de</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga891ccaeea2c685a533b61b5fa0493974</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_prepare</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga788d05de75f2d536f8443cb0306754d0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_reset</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga390e084f13d24244196aca64262ce3fc</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga32891eaac37741728a9b23027012c892</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_start</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6bdb88b68a9d9e66015d770f600c6aea</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drop</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7000ca6010a1a2739daddff8e2fbb440</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drain</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga49afc5b8527f30c33fafa476533c9f86</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_pause</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad711b582c7066bd4fffa1d08a04316b5</anchor>
      <arglist>(snd_pcm_t *pcm, int enable)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_state</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga87896f6f17020fc19835790369e7ce75</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hwsync</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3b71a41f6b300bf63ad374013f19d8d7</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga012e8b999070e72ab23514f25e7d6482</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_resume</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga13083ce2209aab9ea73831610bc61ab1</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_htimestamp</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3946abd34178b3de60fd5329b71c189b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga577b4d51e08d94930a05bbe73291ed2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail_update</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8bb836bd0c414b59789d51a5f5379c08</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_avail_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga170bc44da2607b5583cff5ab5a985d98</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *availp, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewindable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0ea7a8aade4e6e76f2cdfd8c85f37bd0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewind</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6c66040dbe01797379436fdf36268fec</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forwardable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa2f506e03630a074130443d7b9c1a27e</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forward</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad0774fa8991248c6f1c264aaeb0b4207</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writei</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gabc748a500743713eafa960c7d104ca6f</anchor>
      <arglist>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readi</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga4c2c7bd26cf221268d59dc3bbeb9c048</anchor>
      <arglist>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writen</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae599772ce3d0aa6a70de143abcf145e7</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readn</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gafea175455f1a405f633a43484ded3d8a</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_wait</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad4d53d58b996a7cd9a5cbf1710b90375</anchor>
      <arglist>(snd_pcm_t *pcm, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_link</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac6c33091b049985baa6466e8fe93917e</anchor>
      <arglist>(snd_pcm_t *pcm1, snd_pcm_t *pcm2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_unlink</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0d3af5e30593dae857b4308aab5035cd</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga675cb6a0fd5470345105574216a652c2</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps_from_hw</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae766a086ec64ec1189a87da3e54b8441</anchor>
      <arglist>(int card, int dev, int subdev, snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_free_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0a131c274594f6266b9a3f980e479e49</anchor>
      <arglist>(snd_pcm_chmap_query_t **maps)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_get_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac3150e89164f6cb1276abda84b399c72</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga60ee7d2c2555e21dbc844a1b73839085</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_chmap_t *map)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_type_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2c559ecbc8f79457c1d7be5d08365739</anchor>
      <arglist>(enum snd_pcm_chmap_type val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac13f471d76d025798a25f3b422a07b91</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_long_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5dc94582c2356ad6f214761de888bf43</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_chmap_print</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1e10b4d6db07a3ef3a1105e703a38629</anchor>
      <arglist>(const snd_pcm_chmap_t *map, size_t maxlen, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_chmap_from_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad3e0c4157e5f491ba448bfd4d4dc0177</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_chmap_parse_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga77973afbe7ab02bfde38d574d4879355</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_recover</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2157aaeb6fc14da3f040d76591f9d3b1</anchor>
      <arglist>(snd_pcm_t *pcm, int err, int silent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga45d50841b307f2156fce1857bfac228c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_format_t format, snd_pcm_access_t access, unsigned int channels, unsigned int rate, int soft_resample, unsigned int latency)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_get_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2827b8fa77ca05717df9b0447b99d1cd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_info_sizeof</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga782831adf8ee2ee52892479ea0222e67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_malloc</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2386bb8f334424c1ff2b8854ff29ac0f</anchor>
      <arglist>(snd_pcm_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_free</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaa919792762d0bf606f9fe45872231f28</anchor>
      <arglist>(snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_copy</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga139884ae6fb3cb5621591f2d6e044a42</anchor>
      <arglist>(snd_pcm_info_t *dst, const snd_pcm_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga137b0bb60ad14009b9da04fe53849553</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaf0e6c1ec0443820d5c14c48ecd1b698e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_info_get_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gacf9b5a69f2b0ed9aef5b9b0d2ed61aae</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_get_card</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga3a632a14559c1ea0d07b27b0596c4e41</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_id</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4ce080eae74ed95baa79ffb80a91df81</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad48dd79e45631811c297ee7080681bc6</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_subdevice_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gae2ce3c55d4439ae423b854358ff08aa1</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_class_t</type>
      <name>snd_pcm_info_get_class</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gada845e969b0b9c959134f42b98d73c5c</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_subclass_t</type>
      <name>snd_pcm_info_get_subclass</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga30670ad0d94f4358c3f16cc80ff3ba85</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_count</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaeccf5d684a23455aa9fc31f8756eb222</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_avail</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad78bccdeadd378461073b4e6bfa5272a</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sync_id_t</type>
      <name>snd_pcm_info_get_sync</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4a46693c8a81912de84f814c3eecd06e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gab9fe6f542c830c516f78ee9124606430</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2a1aea3ed02b14de6535f59d2cc80148</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga6bd83454c365f212e47f42ee84db06ed</anchor>
      <arglist>(snd_pcm_info_t *obj, snd_pcm_stream_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_any</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e2dd8efbb7a4084bd05e6cc458d84f7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_mmap_sample_resolution</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga53b3b351bc5db48da18d5f36b98f79a9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_double</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bfe71142e72dffb274f8ba9ef7edeee</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_batch</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga366395c87f811d8ab8df83dc8a8a8124</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_block_transfer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac511eb0d4db6f1e8303161486061fe14</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_monotonic</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7a129f7671fee8c0ced42d64a6c2379d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_overrange</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacb214bcb2af7462195da73b060206800</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_pause</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad4ba98b2f66baa5360b9a85f064a3e9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_resume</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6b79539a34e6f51972f4c32b3296585a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_half_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabaf7b36cfb700973fe8d89971f0f967b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_joint_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae8768da025e34e3c3c6b5a5dfdcd2ad4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_sync_start</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafcea258e7d9b6094350699367f2ef9b5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_disable_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0f8922537619c70e41bf07eb740e54f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_wallclock_ts</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafd935dde74ea0da6824b204eb78eb620</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_ts_type</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2071d14dbb09232ecddf2e236bdfdf7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_numden</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga556ddf9731e184cb635994f739a6efe3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *rate_num, unsigned int *rate_den)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_sbits</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8bb1180b62a4225f0e094b95ac5d3674</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_fifo_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12fe3e1ca110fd61cff685890366c743</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_hw_params_sizeof</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga092e6c110ad7b4e52855b9522e437ed9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_malloc</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e53d09a9c7cc3f2a692c0af99886237</anchor>
      <arglist>(snd_pcm_hw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_free</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8c094063e7a13be0b9a043be8616a181</anchor>
      <arglist>(snd_pcm_hw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_copy</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9bcedf4bb4b21527a584846a5986a1f4</anchor>
      <arglist>(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga752e62bb419c7ebe151f8023f5eed1f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab56553ff541e6e9ddae397f6faba840f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4c8f1c632931923531ca68ee048a8de8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fd545bdf469d54cff6a038e31ce56ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga172b949e37f28da5a102e56b04f69be3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad54808a277db646cbc21be07efc31000</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga20079e218c9307e4e683f0743f3af38c</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga66b28dd4f26d603e923a3577d1a2e98f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_format_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga64e1a5143bbd72c8f5cffca828d506ef</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6014e0e1ec7934f8c745290e83e59199</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga762ee356cc687c81c206df3c18245e4a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4a643db96742a3da0287eda6cc3eafa2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33261bd41636eb28fd42493e4ea4efba</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga43bdf7596f8722fb6b8edbeaf1aebd90</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga77a934515c24e17cfb0af21a8b2e0690</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf5062e723956551092db201f34c99495</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga08dfde7d1fc6a0a56609f3ec40ed26e2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12b745bdf119127f2216d61a2bd28688</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab1a02fff3ef394da274d2b2652df856d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ebc4625b258df82164dc9220a9f9117</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaafee81722f5bcba41e16e4c7a77059c2</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae27e04757272070197e00c0dfec5dc97</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga93326349bbb91840a3e0bafef0390cb1</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac6c37a5da7dc8cb19fdd8e9cf1bd673d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8fabc38d770ad922e5b4e0338e7fb242</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3a5b2a05c5d9869cc743dac71c0d270a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga155b8ac646b90560cd00f195086ff464</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga739d51d0822f182a6583a5436f410b34</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga24e507c965aff4984aa4969cc896e830</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga59aa9e1a02f4ce616fe92c605a833f8f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae08e3371d3d2e8e512537630a59f9a55</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga54846380c1dc99ee9124d45232931ebd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4279c4b45a15f7e282e436e75d6ba13a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf7801fdf88fa51ca96fe97d3211db3f7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6770c2b988c8dc91eb51893cc145aa2c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5f09b37dd6f4c213029f8f39e00137a3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga29cd2571738847813af1489043d1af5a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga89374ae29dd924915ada6f26cd9a3292</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8701776750b18b2dad19a4115791c2f0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga03795a2ee03be25a30185b26a1bc3e21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga39124280d06ce63092a77e3f25ddd6ee</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac0ded856c76459608fdd5ea0f254349e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5d90a5204061482be45ac4e0d2b10e49</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga82eecc0e27a94ce0caa195cc3765536c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacaa53b05cd5e4f55eeb4d5ea64129c21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c0b6b22bbeed5da06293608f3be844d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafec078cf053a87339ba91c0f605dca54</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac2761ded0a51cabc953beac44f65972b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga426a657640410a4c6a652ab15eb57acc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga71f5d43bf63dc7292b8b58f17acccf89</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae68d4b168ef5d40f644a1a4ed854689f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga74b510f4958e90a83a631a1eeedf13e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf1f6452ad189be5c4e1ab3bd86f2f6d2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2bc2a32d3971521064741a30e10c92f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2dc9fcdb1b30126a20d96a65c7826d9b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad53e3af1f1fe522c3d902f5403954d1</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga993e05e43a31a6151427ba1f793c0b3a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa22d4f917c300b0c1f47b348c23705a4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga478e50e1fa7395af70100b906c31cb67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2d48b4bee369912b0fc9b245d6c7a52d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaba48ea189171536f9793e0d99e6db5e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3f6fe37605b54d0a25e8bf1d10f71ae4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab5c16621ae697e5ee6f442ec7b7062c5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabc8712dab6cb135176de77f374d7ee17</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga874c977dd9aac275c87a7b1c33a0dec0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga58e0468994d935f08080d9654f1b48b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga909f442c3d8c20b79de2edf6cc5ded41</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33c901f8364cb2533d6cdeba732e0e4e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9162045265f283c532634506456cab09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf74bbb66a71ece8260be20502822335b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0bce0ad23b3b708858bb20df81e09a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga13bc85ca5fe34b19112579a7e27cf41a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7242d7045ae23a9ae736c191030c25e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga17f3826360b0fe1f47c696388d25ac93</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga60417687267cd6ddc56a9c15179fe275</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga0de7350f433935a995d439fe38f55088</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga472aa3f2d8ce4040caa874fe60aba961</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2642b54ed1c2e26e595ecf3d5b29edc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga636d1d9a6333fb2acc8a6e84391ea0a6</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf638d94e53872415d3bb6d9169104891</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fadb73803f58b900ac34846c14894ca</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa8fbd81ce54fac30f60768fb36210a6f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga1366dd00b920ef459d2dbf8a64408725</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab7356d30758dfcf11ff5874fd033913b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabdea994550dbf7ab176e3c90baa3a30b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa18c9999c27632f6c47e163b6af17fa9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga67a33176f4f05231863b37b09527c0e3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9b6bf73e2a0b7f887f3d7d85a988eb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacad42b93e31bca4c9b4074d6ec236d99</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2a7cb8c29b2fb75b615366dd40a7dc13</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab80680ff70b72435addde58e88fc1d7b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga84964e55717a7db70b55f320b56f343f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bc1b188576d6d2daae9c56024813d10</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6a29e5f80671ca89d0c185416b5a6c2c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec8788f14a0c5452dada23a49cdd4b71</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab6556fcaaf926360d2064044a6f6cfb4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga182adecca0ad204a34b27cdaa9d4f672</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3caf61ab086028067b602d48182df708</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ce81a7fe9f677849881f1cfd3b5cb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga828cf9e11fe84137c2c8d4938a6fca7f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacc0d26a23389470eae502a3c9f4a2980</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac36099175c6a85db4a1e51053d5708af</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec830be678524b0a6a173896bc9d2c67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c00cb635d374030595dbc27b7a983a7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaca09ba489988fe957fde43cb9dca56a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gade5604a3fe1de55c76942ee4f4e41219</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_min_align</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga254712953cb8abe8b1d8478233863217</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_sw_params_sizeof</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga7886ee5b3a48fb58ef8f70886472029a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_malloc</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga23382b62e7fc0de94b279c9f5dd08e5e</anchor>
      <arglist>(snd_pcm_sw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_free</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga35af2df23ec46619a82cb52e3733d47a</anchor>
      <arglist>(snd_pcm_sw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_copy</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gafe9ebe9ea669012af58b728d55fc295b</anchor>
      <arglist>(snd_pcm_sw_params_t *dst, const snd_pcm_sw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_boundary</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8bdb67600cf3c0705518b6c0a79c56fe</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gac2fba23ba6ac1636785e27f0f5381a15</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga4caef7435210cd7f4878d55dadeed0f8</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga912bad749f6317000eede607bb0bc935</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1cd956ea3dc0e32e32abc99af50f0819</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga79b12cbbd309750156261e7f5a39167b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga587ccbb0b025dc97d2af5db9516163d4</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaf62ce50d6242b4f4dc9d6534a97e5c09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga0458a8fe480a7887726748052bd77211</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1d338f1f7e33b7a6d0f9a8f61f87f057</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1ee7116c68bdea12606aab57db86a1d1</anchor>
      <arglist>(const snd_pcm_sw_params_t *paramsm, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a41bf533207d56fdb1ff10aeeac28e4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8a55577d7f3d8e4ce63a710921199c66</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga5a0158bf962f20bd9fd5ed2c52dd682b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga896ece8b418f6d6e92d2df5a4b59c3a2</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaeb4a335a16981b5ea3fa671946fbdca3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a197020c09c8a20e697d12e9fac3e11</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_access_mask_sizeof</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga963ead3f1169f4b5e03a2968adc9cb0a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_malloc</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gafedd1f9c96aa8a93ab7f2c0135de3780</anchor>
      <arglist>(snd_pcm_access_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_free</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga965129493161fae3ab534209b7e6b2bc</anchor>
      <arglist>(snd_pcm_access_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_copy</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga4fc7338c7c0cd715ea384d4e308d5925</anchor>
      <arglist>(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_none</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gaa8202ce90275d6dfe2623cbacbc93708</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_any</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga76b2575826977951a862c5e78e81993c</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_test</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga381ade7f78d8614b38dde36ba0393f74</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_empty</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga224e84b7b1362aea503b0595512bac77</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_set</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gadc0a0f989a9faca8b25b2c35d4b14e14</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_reset</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga35c6aaf5b55ef8dd1c4939467869db86</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_format_mask_sizeof</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaf260158e21491d2dfff62aa2b2ff06d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_malloc</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gace20f58f4a93c39b006fd13bfd642da5</anchor>
      <arglist>(snd_pcm_format_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_free</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga3a8b2f75bcf9e2b33602297123a6f3b9</anchor>
      <arglist>(snd_pcm_format_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_copy</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga5fa45349fe88454faac051f476629174</anchor>
      <arglist>(snd_pcm_format_mask_t *dst, const snd_pcm_format_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_none</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga42342f7e5dd7c1c8401482d8db9c1013</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_any</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga56f394e000ea4aadf73d1fb97fd994cd</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_test</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaecb1d19be63a1b18456300eb4d07a8a0</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_empty</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaa942122189c757a1178749cebeb73d48</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_set</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga03fa8dcc8da3dbecc164143b43d40056</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_reset</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga60cdd13f69735c11cfaa0856b0f25a3e</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_subformat_mask_sizeof</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gaab4db5767975e4c4e7a54fe11450085e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_malloc</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga4a9eb9095b23b4e338aa390e515d5eb4</anchor>
      <arglist>(snd_pcm_subformat_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_free</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga1e0e09005efe4c7b34819defdb4d1308</anchor>
      <arglist>(snd_pcm_subformat_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_copy</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad5f8e09819ff0d6d4175d794670703af</anchor>
      <arglist>(snd_pcm_subformat_mask_t *dst, const snd_pcm_subformat_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_none</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga3b87315e56fed79bbf265790ff5f6e72</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_any</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad065ae392b7bdeb4b32708cc9909dac1</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_test</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga2070ce06de13f676eb925c28db92c8aa</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_empty</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga642323afb10ecd348ebf4eacb1cc0ec0</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_set</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gab5a57e4ba0d3747ebc5b959460c0037f</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_reset</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad1033cc4c9d843e516833c222f2a570a</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_status_sizeof</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6a8ae2a4786419af7853687a99436d8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_malloc</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaa97cf9bdc31e686fe491985486194a64</anchor>
      <arglist>(snd_pcm_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_free</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaeb0a7ff880647e7255cb58904270106b</anchor>
      <arglist>(snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_copy</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga307827ec2057b969520c7508fe41dd63</anchor>
      <arglist>(snd_pcm_status_t *dst, const snd_pcm_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_status_get_state</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gabaae998f0d374c50195b3206d1e43659</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga5eaeff98814e96c2ffd5f04c95b22c8d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gab1c832aedb25670d010c53d9081a4b31</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaea54e0a110afa01dd42071a1ca43902e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gafa66bda27a6b914e66e053bb76571013</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga15d17e74f3352e189df5ccd4cc4c116d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_driver_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6ee47c7a98005629ec691eae4b7f1b0e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp_report</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga79a7e633c36d79aab76c3b4ee39e1588</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_pcm_audio_tstamp_report_t *audio_tstamp_report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_set_audio_htstamp_config</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gad0dba60f0f312167755500cb49e24eb3</anchor>
      <arglist>(snd_pcm_status_t *obj, snd_pcm_audio_tstamp_config_t *audio_tstamp_config)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_status_get_delay</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga1fdce3985e64f66385a5805da1110f18</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga91c110525060b925ad4f0c21c205b757</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail_max</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gac58d13e4d03c9420c57428ddffd94964</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_overrange</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga3f4bfd0a0327529abaa621b248b6b1aa</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_type_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1089d73f52de6e7b724f7453d6f48f36</anchor>
      <arglist>(snd_pcm_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_stream_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gafea7e7c65133faec1da1ef8b2d079578</anchor>
      <arglist>(const snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_access_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1406fe8388a612b8e44e5f3682d00e91</anchor>
      <arglist>(const snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga2ca258b8ac569ca35f283e48d2181e45</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gae201c92e3053c778bd7f2a4f5cc4d0e1</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga81beb8c430d897208269bd67bb3309b5</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gaf4e162f7a059cbbf8c388cb9ed5e23fc</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_format_t</type>
      <name>snd_pcm_format_value</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga59f99dd9647315a7312d1f2b6204b7bc</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_tstamp_mode_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga9a27f18595344de572cce51c4e52ec4e</anchor>
      <arglist>(const snd_pcm_tstamp_t mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_state_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga16ea2b82b7ea8f8c7b21e81aa6d28f1f</anchor>
      <arglist>(const snd_pcm_state_t state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga9c5c879409c504e155e234905d031d8d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_hw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga46dca88304617a198814f6cfc6ceafae</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_sw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga97b72a21c2bb1ae553fa909c3d42c294</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga3ac87790f8cb642e7afe4430e510572b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga10c221dcb86bcecd0d6fce4b1231cb49</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gad6f510a9b1be8d88115a1192f9a52693</anchor>
      <arglist>(snd_pcm_sw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gaf2427b186609ad502666273342467a51</anchor>
      <arglist>(snd_pcm_status_t *status, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_mmap_begin</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga6d4acf42de554d4d1177fb035d484ea4</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_channel_area_t **areas, snd_pcm_uframes_t *offset, snd_pcm_uframes_t *frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_commit</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>gac306bd13c305825aa39dd9180a3ad520</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_writei</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga5a9ee8e1e764b12da6d54dfa195f7c52</anchor>
      <arglist>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_readi</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga24b6c538c8d7ddd0776ee65f8fb909eb</anchor>
      <arglist>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_writen</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga092b1a7f387e9fc2977649bfd43b0958</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_readn</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga29ce9af60eafb67f0303418a176bf3ea</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_signed</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8b88181b11a026da55897a926d56034a</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_unsigned</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8cd4e3ecc963942457e3b1b6f7661a90</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_linear</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5a52bb63323f463198dea3f3c6aca571</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_float</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga36ae70bef5bfd5e7ecc743f6a4d46cb5</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_little_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga89537d0a972fa124051f6ba1a78c4bfa</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_big_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga3c0c224b8f67e73cf2447bee0110f760</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_cpu_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaf950358cdbb26bab53f63f28443bd2ef</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_width</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8d4e07f2d68cc16f607857ed8a222a29</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_physical_width</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaa3e0ff7560342e5af2b5c7bd2d63a307</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_format_t</type>
      <name>snd_pcm_build_linear_format</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5f5ab1ac13de9598cf05877e4894e0d8</anchor>
      <arglist>(int width, int pwidth, int unsignd, int big_endian)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_format_size</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5953a58f024f8cf762a9e4dae6b09502</anchor>
      <arglist>(snd_pcm_format_t format, size_t samples)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>snd_pcm_format_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaba8e5060f74a9d91df8ea550bf8907fc</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>snd_pcm_format_silence_16</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gad5c4439da2367885c2a237ddf5aa1254</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>snd_pcm_format_silence_32</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga78c61e7eef7a20b24cf03fd2a664503e</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>snd_pcm_format_silence_64</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga2006cffa80cc83b99f6f33547be18f35</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_set_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga82631361cf1c1d13af207beb59cf97ac</anchor>
      <arglist>(snd_pcm_format_t format, void *buf, unsigned int samples)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_bytes_to_frames</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaf42fb6af35d3d85006c1dea2e11b3e54</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_frames_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gac05ac2b7c6e25986a71792392ff90b83</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_pcm_bytes_to_samples</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaeed610ddb01120b01b5a2e5cc59aa35b</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_samples_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gae3669a4326ce185f4261d7bf96900f3f</anchor>
      <arglist>(snd_pcm_t *pcm, long samples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga23e03a8b127764fff669240986b96b39</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channel, snd_pcm_uframes_t dst_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga1c0aab2a2bb341f1b1d154dae2b7e482</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga93d2f045575afb161abff126c3750049</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channel, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_channel, snd_pcm_uframes_t src_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gad57f8921f52ea2ffd870cafb2d076f2c</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_channels, snd_pcm_uframes_t src_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy_wrap</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga38797de781a0e4041408c58d49463062</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, const snd_pcm_uframes_t dst_size, const snd_pcm_channel_area_t *src_channels, snd_pcm_uframes_t src_offset, const snd_pcm_uframes_t src_size, const unsigned int channels, snd_pcm_uframes_t frames, const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_pcm_hook_get_pcm</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>gacaec88e4b6cc2a45e7a805487acd64ed</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_hook_get_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga1eb467cd5ab11817edc2ed7df3608019</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hook_set_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga6930df3b750b3f62dee6846fb3f6a576</anchor>
      <arglist>(snd_pcm_hook_t *hook, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_add</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga89eed2fdcda68c1efae9180a3794d5ef</anchor>
      <arglist>(snd_pcm_hook_t **hookp, snd_pcm_t *pcm, snd_pcm_hook_type_t type, snd_pcm_hook_func_t func, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_remove</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga4c59ad440d2479f957b477b26b90e4b1</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_bufsize</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga39a4a1f88cd8b5e474d3d1d6f8e3a8ce</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_channels</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaeb0f82c12f8a1e57f4b6b09ad324f3ed</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_rate</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga8c95279cba00918b29671205e38f3e78</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_now</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaa4929399573ca0e24b71a22b51d7f108</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_boundary</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga543fd7565c138f1a408ec55186725908</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_meter_add_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gae37aa1c3ce01063b9047e0bd437ef749</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_scope_t *</type>
      <name>snd_pcm_meter_search_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabb6cacf50cf10cb6e95853dadd19234f</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_malloc</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga360da60e074bffc146ffee93f8e79aa7</anchor>
      <arglist>(snd_pcm_scope_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_ops</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabaf2af40ecc689cee2e81b9250823fcd</anchor>
      <arglist>(snd_pcm_scope_t *scope, const snd_pcm_scope_ops_t *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaae1d6cce40b244180c54b72aee0e00d2</anchor>
      <arglist>(snd_pcm_scope_t *scope, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_scope_get_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaff680f85a1f30c83b4b544ead5ff5a2a</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_scope_get_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gada4e9d2bfe2f7dc2b638c6406b9a4b26</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga683ced3c9344b8f6f8aab4997f74f72d</anchor>
      <arglist>(snd_pcm_scope_t *scope, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_s16_open</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga3c1e3e9c3a5a99915de23bbd2635ae26</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name, snd_pcm_scope_t **scopep)</arglist>
    </member>
    <member kind="function">
      <type>int16_t *</type>
      <name>snd_pcm_scope_s16_get_channel_buffer</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gac4297c74f130a89992459cbbc5ab029b</anchor>
      <arglist>(snd_pcm_scope_t *scope, unsigned int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga5c55688bfe990821798936c20cd11ca5</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_duplex</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga148a05b14b083d9c6ded79dd6bfd7fdd</anchor>
      <arglist>(snd_pcm_t *playback_pcm, snd_pcm_t *capture_pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type, snd_spcm_duplex_type_t duplex_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_get_params</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gab6ee6daf2b83bdebf6cf6355c0365885</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int *rate, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_start_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92ee6cf89b3ed71d47b7051f92699045</anchor>
      <arglist>(snd_pcm_start_t mode) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_xrun_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gafd15306572f02e67354d65008e41dc8f</anchor>
      <arglist>(snd_pcm_xrun_t mode) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga77967d8bdd8f4baf08661443523065c4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_start_t</type>
      <name>snd_pcm_sw_params_get_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gadd38871f4c64d9ecf8421b739228b19d</anchor>
      <arglist>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7f0da15ce674e09167688d3e98ec20ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_xrun_t</type>
      <name>snd_pcm_sw_params_get_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92a1742ca544aaa41de93d3d3661cb5b</anchor>
      <arglist>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e16b325ad44596db299468ccc4531b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gabb62c5df350f6ceb266f9ff02a3a6ac7</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e098517809fd447df0ea1a4df371e08</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, unsigned int val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga82e216007e0093240ae9a96560434f84</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, unsigned int *val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga55342da81dd6611ab2239c650dc73b7c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gab74b4c9b873754e189b1f96468fa38f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gada829ffd7b5b93a8d5e47a35322599e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gae8f2e422b5e6ec5328d003c75cd978ea</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga4e968294e94f56d3ffcb20945d8a8543</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga458ef7a2e8aa9445446e4e5ddba9c654</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga44f6dcae8ee774254d964ba41f2f8ddc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_minmax</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7b30d734fd89678f77563e655f7c06ab</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_near</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga9e871038328399ad5112747457256c53</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_first</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga257cc818f91ac4b4ae39710256a245dd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_last</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga1daa74f876820685cb4e3e384728f004</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_external.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>pcm__external_8h.html</filename>
    <includes id="pcm_8h" name="pcm.h" local="yes" imported="no">pcm.h</includes>
    <includes id="pcm__ioplug_8h" name="pcm_ioplug.h" local="yes" imported="no">pcm_ioplug.h</includes>
    <includes id="pcm__extplug_8h" name="pcm_extplug.h" local="yes" imported="no">pcm_extplug.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_ENTRY</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>gaf1fae79f689774a0bdb72a5e15f5978c</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_SYMBOL</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga73a613cc5b7b3642f53bbd5a1d78004b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_DEFINE_FUNC</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga3fd72ea47a7a921943b26c580b9d6c41</anchor>
      <arglist>(plugin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_parse_control_id</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga6cc0e84dc2822458b4ed163071a51ecd</anchor>
      <arglist>(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp, int *cchannelsp, int *hwctlp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_extplug.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>pcm__extplug_8h.html</filename>
    <class kind="struct">snd_pcm_extplug</class>
    <class kind="struct">snd_pcm_extplug_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_MAJOR</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga82e7bf8a5b451792195a70cb74e31fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_MINOR</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga40f40d20f8683751fdbb25b1f9ed013c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_TINY</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga685e379757c606a4d2a7fcc969cc5dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga24d0ae71d106f08685d9ba8c6cf5fe78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_extplug</type>
      <name>snd_pcm_extplug_t</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gaeddcbb8005ccafb008a75283d5d9e551</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_extplug_callback</type>
      <name>snd_pcm_extplug_callback_t</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga0c554fce3192586b7a5ff51d45272f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_FORMAT</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9ea627234d455a7d4652aacead45cf650ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_CHANNELS</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9ea24eab971805f640763f6ffd9f60875dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_PARAMS</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9eae359079bba1fec51841cd82179961801</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_create</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gab0b27889f74c83cd033062981320fd62</anchor>
      <arglist>(snd_pcm_extplug_t *ext, const char *name, snd_config_t *root, snd_config_t *slave_conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_delete</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga7259292a6f64a2432f4c2a44bb5f8508</anchor>
      <arglist>(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_extplug_params_reset</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gacef181565eb697397ce41c1aab381777</anchor>
      <arglist>(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadbf27adba1a7cd0195b6ac750bb11bf7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gabef139bbe5db265433fd5310d0faad4d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad14f6746e36d556c7a7937633b965ca7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad3cac0ee15293f349220a75cce69a51e</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_link</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadfb6033cad31a9d4fb5f76c2a0edd20d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, int keep_link)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_ioplug.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>pcm__ioplug_8h.html</filename>
    <class kind="struct">snd_pcm_ioplug</class>
    <class kind="struct">snd_pcm_ioplug_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_LISTED</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga435c57838f97c24b7274a9596ccbe3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_MONOTONIC</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gad5c0b67e4d9b7be96f1083179e95f38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_BOUNDARY_WA</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gaf7f7da416f798efac868aa5a88f1e47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_MAJOR</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga46f4111ec394e6c4209a4e1b5f99a9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_MINOR</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga49ea8946ea0c9b2655b70afb03ed79bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_TINY</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gabe46103216aa58afc3c4bc314dd1bbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga81a2273c4df9be29d91e6e2a0860d991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_ioplug</type>
      <name>snd_pcm_ioplug_t</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga1038655a4ca74f3aef060282d6df739b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_ioplug_callback</type>
      <name>snd_pcm_ioplug_callback_t</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga9bbf2927f689c96faa7b6c5c89286355</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_ACCESS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635adf64bb9d9a7f95f878e8bb22e003c357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_FORMAT</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635aa7186fa6ab3791611363c83f725f1a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_CHANNELS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a5cb59832a513d2b87166000d3f4035e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_RATE</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a43827c9773bc5c40a1643bd8f930c8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PERIOD_BYTES</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635aafe12ebbe6f618aa75cc7c5d64d45eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_BUFFER_BYTES</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a004f7b7af23b37d30d520777158e8277</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PERIODS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a1f68c89ac11ae9fe28710cee044a0b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PARAMS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635ab024a119736127e7a606c75e57d34585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_create</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7fb5213a5e776246e2b4dc53ec8d7604</anchor>
      <arglist>(snd_pcm_ioplug_t *io, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_delete</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga286ec116983166de889f0268a2c666ef</anchor>
      <arglist>(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_reinit_status</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab223893226ecf78f675c89959a8c421a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>const snd_pcm_channel_area_t *</type>
      <name>snd_pcm_ioplug_mmap_areas</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gac3b666ff286745c9eb24de3e3930970a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_ioplug_params_reset</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gad74355dfaa56fae80d49181c83eeecc4</anchor>
      <arglist>(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab62d470b02661214319196394b55fb37</anchor>
      <arglist>(snd_pcm_ioplug_t *io, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_list</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7d713552fb846ccdf4b7ec6a9fc1b562</anchor>
      <arglist>(snd_pcm_ioplug_t *io, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_state</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga65feed7caf26f07aad0c722fc61fe751</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, snd_pcm_state_t state)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga23584e8e132330fd00850ead1ac1aec2</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_hw_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga3b211c9fd355e60822a1015ee29206e8</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rawmidi.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>rawmidi_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_DLSYM_VERSION</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga2b1694b5b3e98514d6b2bc5b824e9adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_APPEND</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7060640f32abcd337239bde2c8749d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_NONBLOCK</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga31ee35659c82272382ccc3014c8a73f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_SYNC</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab1a659b38e5174d790d5671739995894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_info_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaaa4c7257d03c396293cffaef02818c35</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_params_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0a7ab61af3880409ccd9adee0e756210</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_status_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa83c6963d341b0c067764dd1ba2c3d76</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_info</type>
      <name>snd_rawmidi_info_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab0f0f325ab812941e9b81addf0b941d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_params</type>
      <name>snd_rawmidi_params_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga98ad06bccfabc646530241d3a0eef5a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_status</type>
      <name>snd_rawmidi_status_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga10a44a41000ef7dfe61f712466237aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi</type>
      <name>snd_rawmidi_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa21972df6ca3ebde0f7225b2472d0095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_rawmidi_stream_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac3d11365c928cdfd3176ffede3e6f8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_STREAM_OUTPUT</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ggac3d11365c928cdfd3176ffede3e6f8c5a6a57199496cb5a0fa2c635c94fbd2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_STREAM_INPUT</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ggac3d11365c928cdfd3176ffede3e6f8c5a3707a884c8eec9b11bc2c30127d1c4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_rawmidi_type_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga271ccd508f221ec7c99a27b150c657ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_HW</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baa77f1b4650305a5d52e686c9ee2768c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_SHM</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baa3f2311c1769989c17c5949ef01d4e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_INET</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baab2e654ca9c1a7bc4253bc5a2d97211bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_VIRTUAL</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baae1144b9e6ffe7729d853705687bb3324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga2ab783051deeb7eb37eb568b76448889</anchor>
      <arglist>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open_lconf</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa7e3daf5cf4dd36b2534d2f1d6309477</anchor>
      <arglist>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_close</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabc6bd5922151fb50196f62b9a4ab9f56</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga39ac11df7e520e753b26ab4eceabe6de</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga22fcc3fc5c62c9db88d79a0b91e3a75f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_revents</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga38f15766f77c0bb50fec6cdcd87254b0</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_nonblock</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafe714a54fdb6083eb003bcc21da89553</anchor>
      <arglist>(snd_rawmidi_t *rmidi, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_info_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga383592eddf099559822357678fbe7d8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga11f8d3832ec7ea7fd6e8445338704528</anchor>
      <arglist>(snd_rawmidi_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa84495bee993f34fb9bac33b5a9cf65f</anchor>
      <arglist>(snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfb769e2aaf0a6b8274b5e0c3e9141d8</anchor>
      <arglist>(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gacfb2e65475c314f5f1dde0c5d7a05a7b</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3fea97d5bff26c54831e95b2200f857c</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_info_get_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga760552af30a089ddacc3af79985e24f6</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_get_card</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga463916bd78a0ab5a96a053edca05a8d3</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_flags</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaf9ede5bbc9abc9124910c2612363de30</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_id</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac7ac90e99759ee7b2dddd3613219c798</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafd809c976c1dab23957e338b5af2a353</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_subdevice_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga428398f23118575aa4f62eed860132cf</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac0b33eb2f54cd6fc9b34002fe28ca9fe</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga71717ea1f35bf2a59548d3d106278336</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga98fcdcb94c12baf65dd0ec8f9d52ef59</anchor>
      <arglist>(snd_rawmidi_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga49eff1cd1b62e0399826740863cdcce3</anchor>
      <arglist>(snd_rawmidi_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad704ac98c8313235c73c23d374bf6831</anchor>
      <arglist>(snd_rawmidi_info_t *obj, snd_rawmidi_stream_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3c3595d2907ee30754f6a1d5ceb2d97f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb5767a318d349a4d2a100191c3cf8d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaedc01312384764d02b6bc946cb1e79a9</anchor>
      <arglist>(snd_rawmidi_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad8c735ed6a8533655dabd7318f25a6fc</anchor>
      <arglist>(snd_rawmidi_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga533710a31f6b6b4f6791baa27e69089f</anchor>
      <arglist>(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga612c96757e2f81fda5b6cd6dec826de1</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0bd9629686062562b88bfd2a3eadc1bd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga89782681ce86b3d5cbebb5136d25439f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae629f2ef814eda39dc081dff65bf7d20</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab717719be70fe4396dc84f3f895d6e12</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_get_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga6a057d467faa2b65ddace364fde985fd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga458d8ad22277645d9b65fa47c011465c</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_current</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga86eabf81acd7c43fc100c67fbda5085d</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7933bdb7eea04815be0bba98261865e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac1035208bbdf81852dbcf2e14ce4a8dc</anchor>
      <arglist>(snd_rawmidi_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac9852f68911bbb8aef21d2e20c3ff2c0</anchor>
      <arglist>(snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab62e8a4ca0033166f906a969048d935c</anchor>
      <arglist>(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_get_tstamp</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb867dbf1d4d5fb3bdcad36a86565837</anchor>
      <arglist>(const snd_rawmidi_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7ff63a2376b2df549698296d37b532ed</anchor>
      <arglist>(const snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_xruns</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae4f69ac10574cfc2cd5c848628e75f9b</anchor>
      <arglist>(const snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab888bce923769882931f77603327231d</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drain</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfff7417ec957b7ee07882f91d73d7be</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drop</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga01076c87d169cf77334d35bd094abd0a</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_write</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0a30e482efec57f4ea74c533a0f9b134</anchor>
      <arglist>(snd_rawmidi_t *rmidi, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_read</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga9b0952fc04facda83cdf1521325ca475</anchor>
      <arglist>(snd_rawmidi_t *rmidi, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa4bf6540f3f36c5878d31abd34a341d3</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_type_t</type>
      <name>snd_rawmidi_type</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga5984e0c61995c8184a0e6e0a68a6faaf</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga295d2f3ce9e992919f205b929fcb83ee</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>seq_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_DLSYM_VERSION</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gad6233417c4c820a4c0aef4c379cf65a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_OUTPUT</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1edd6d976f3dae5d921568f2107bd121</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_INPUT</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaaf1cded61cf90f4d37caf910192ef513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_DUPLEX</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga61c3481e1d357bb38cc399f6b9884ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_NONBLOCK</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gafb3bf2f7109d85d9226c64578e73d614</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_UNKNOWN</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga79353f7f2482e98b5181f03df7c807ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_SUBSCRIBERS</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga383b235d2afbe48704952edfd3a33eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_BROADCAST</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gafc9dd136f59487d09d2124cef09b8c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_CLIENT_SYSTEM</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga5437f98c59679c92ee4d940ac643169e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_system_info_alloca</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf6343bc1e96ab067152b35b8ff6904ea</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_client_info_alloca</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga894207ef8acec9da5fffe597749deca4</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_client_pool_alloca</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga662f3c4e0f6d83fbaa6737c028a67ddb</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_SYSTEM_TIMER</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga02870ceddec24d3cc5609ec728b0cb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_SYSTEM_ANNOUNCE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaf12ff6ca6077edc7c6027a3fb1d0664b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga81a7a5385af746364b757eb7911ec2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae8afb5ac8f546461b4bab25454972aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SYNC_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaebcc3dd1ad3b42d2305290feab04005a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SYNC_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gabd27d66e2de0ff9556cc81cbec9ba7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_DUPLEX</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga97da74dc7f0f295f000fadd1c50c1130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SUBS_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga4b8aa6cbeb3c99c3ad033f4ce69c06e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SUBS_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga52ff1c51578166e67936cfb826c966c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_NO_EXPORT</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaa0a63e34744ed9faedf64fe0b364bfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SPECIFIC</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaeb05a94bbdf256b857fcad28aeb2bb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GENERIC</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga0f89faac8be715b9e2d9d885c7f644a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GM</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7202cc7b9acc0d78f59c502d7be4d2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GS</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gadf72cb865e33a0ce1462f68303165537</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_XG</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga8b51348b38a543151dda96c73fbfb5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_MT32</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga12743fc5f31ab3718d5f86d88eef05fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GM2</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gabba1c9b09748d446bb6b20b0ae717984</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SYNTH</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga25b090c0416b501001ae05350480acfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_DIRECT_SAMPLE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga745828e8de9962c7c8c42ad5039e595d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SAMPLE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae4096b5c650fc3db614d8dead99ef404</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_HARDWARE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7c7c4e97a41a4056c759f5398643a37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SOFTWARE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga6b1a73e34cedbf61f039db614a50b27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SYNTHESIZER</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab873e7e613eee3af725f4a286c9c1cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_PORT</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga3c9413dbab5e6c6a18235e8b05c8fb3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_APPLICATION</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga703a0651b941c583d5f8928f8f3b1b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_port_info_alloca</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac39e99230c62a36daa985273faac0de7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_port_subscribe_alloca</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga1ce0255bad553e69da93b929279e6e88</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_query_subscribe_alloca</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga1afada580792099ea0fd90624b20bd0d</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_QUEUE_DIRECT</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2a5be7ea9ad68adc9a7288ba25850245</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_info_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5f28c5167a09d62b6d4ef0338561ab82</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_status_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga38ba4506ad5f5d63387d3d1fb3d630e7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_tempo_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8b8349b2bce37cde49359bbbcd47f765</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_timer_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab9d04097fd82162e5511564248c55114</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_INPUT</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gac6a1b26c4551664f1647bc71001b5f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_OUTPUT</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga21236ad0af7c1f3d549c1b3e008b0c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_DEST</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2662f8f42259f5d61be4bfb66fc6f248</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_DEST_CHANNEL</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga639b7c33bf27b65ca14857bf5f1cee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_BEFORE</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga69279405cabd0127222b936dd6e45e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_AFTER</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga8213dbaeb33df14ec7a1e7fd501f8c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_TICK</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gac4169f30c9c8c5dc462245f3a2dc5d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_EVENT_TYPE</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gada13f98960143c3d24e6965c954d0fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_IGNORE_OFF</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga43008e518e356084dbcea01b3e7d1909</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TAG_MATCH</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga19bc5ec1e09ad34af5cf5ae3b28ee434</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_remove_events_alloca</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaa961c5d6e931bb50c75d828c8470ab02</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_SND_SEQ_TYPE</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga4751ac8b4272b1439408afc963a49636</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_SND_SEQ_TYPE_OPT</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gadc21b59998d0cf1473c0fe1b6b863b71</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_type_check</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf2830d00d1641fd9311364f2a3521485</anchor>
      <arglist>(ev, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_result_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga8f90579f79cee4d8b29b1d10114373ea</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_note_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9a27965148074e206c3143dbb0c8de3e</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_control_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gac72e058f43ff25cea0043c460c109cae</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_channel_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga1ba891f98c9c4b54384e7c24fa9a7dd5</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_queue_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gacb4bf5684b67c3763a5088df71ca0159</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_message_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga325c894a9eef04a510d79765581556c3</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_subscribe_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gab33330bcf7cfe7e93abe51c603ec6974</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_sample_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaef277335d27c8bee394b5f6d068497a1</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_user_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga6b390a71b71b7be48a6470db7042038f</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_instr_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga12d36511a518535dacad6d011e7994ea</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_fixed_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gacbee889f777ba57ffaefe5e170b4cdbd</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_variable_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gabae52c0158f02aa84c17f92c68683caa</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_varusr_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9985549f097ac2752dd12bf2809f8b24</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_reserved</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga93e24ae77718810bdd763c27d935f501</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_prior</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf87a88bb452f8e324ec0ed8fd0387c22</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_length_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga5ecf609b322e5b89c9c34c3bb2d79582</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_fixed</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga761af7115668606b5ec52772ed6e4c39</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_variable</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf49ed93e227adb6c182a66f06afacce0</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_varusr</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga989761929e93fd3b3aa061f8dccd426a</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_timestamp_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gabd5fe99634508a917e1a3abc445fe449</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_tick</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga7ac61bc05ceffc89ab63ecf33b402e43</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_real</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gac9e547978dfa08480d25b5708c19df22</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_timemode_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gad2d8ae9a2f5fedd0834d215af7e8073b</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_abstime</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9e04371f9b8fff628a823a7f5c1e4908</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_reltime</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga7504ce2159e886ecae2cf959bb99e9a7</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_direct</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga02ec1f914e66b2c6f7ecf53d15b75335</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq</type>
      <name>snd_seq_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae141149958a7458806152ed5942a1acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_system_info</type>
      <name>snd_seq_system_info_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga2bcf0bf155f961b6294d556c654023e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_client_info</type>
      <name>snd_seq_client_info_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaab203ba82e80c859c8d577fb733e3ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_client_pool</type>
      <name>snd_seq_client_pool_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadc7ce8adaec84d42695492f0ba2515af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_port_info</type>
      <name>snd_seq_port_info_t</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga122b704fdab734223ef90b5e26f358e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_port_subscribe</type>
      <name>snd_seq_port_subscribe_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gafdf1b5614ce0d591c86bfcd3f369fa38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_query_subscribe</type>
      <name>snd_seq_query_subscribe_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga67932dfbdaa8fc71a08d058fa7121870</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_info</type>
      <name>snd_seq_queue_info_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad6fa414eb8273839c2e8ab4418ce1cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_status</type>
      <name>snd_seq_queue_status_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6f72d6b360291ad44ebe45cd64ca38d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_tempo</type>
      <name>snd_seq_queue_tempo_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8cef04796cda140f86f8e6298f26b4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_timer</type>
      <name>snd_seq_queue_timer_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaff3d3167d37b04dfeb5cf834e35b0729</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_remove_events</type>
      <name>snd_seq_remove_events_t</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaff65b0e9c173d96af7f21bfceeca249c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_type_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga95ee23dbfb14769db6a470875ed94807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_HW</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a9f702d2b9053cbb77f5bebc74b727415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_SHM</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a6df472343a3602be359406452222f1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_INET</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a1b09154678b8e506abac5c84d88aa195</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_client_type_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gab56446870a0d358e3c4d9b0640fbaeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_USER_CLIENT</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ggab56446870a0d358e3c4d9b0640fbaeedad496718243f7aac36d8e7f0ff4bd5cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_KERNEL_CLIENT</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ggab56446870a0d358e3c4d9b0640fbaeeda72126c32d00cabdf8e6c6d555791e4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_query_subs_type_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gafd3bd807eb95e26760bced605f7b4b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_QUERY_SUBS_READ</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ggafd3bd807eb95e26760bced605f7b4b9fa0dbe48892b30a0412c19a304d05dd6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_QUERY_SUBS_WRITE</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ggafd3bd807eb95e26760bced605f7b4b9fa62a1002a52629b24aba14f592e8e0689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_queue_timer_type_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaaa4b5ef5120e6c49b799d8a7aa08427b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga95462dc59c0319e186cda713ecfb4ed3</anchor>
      <arglist>(snd_seq_t **handle, const char *name, int streams, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open_lconf</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga03b68a24d0d2de303ee9ec04ed68c8b7</anchor>
      <arglist>(snd_seq_t **handle, const char *name, int streams, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_name</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8736d847fb7b3b6627f29f0eba907e30</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_type_t</type>
      <name>snd_seq_type</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1ff33a2d698836d879ac05f5176c58b3</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_close</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gab209cdcf6e1e1907f8c49d3148a4e0f6</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_count</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf281c1dddfc626124b9e61d2cad94f2d</anchor>
      <arglist>(snd_seq_t *handle, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga99851fa9ff4ec5be7414cd9defbcda89</anchor>
      <arglist>(snd_seq_t *handle, struct pollfd *pfds, unsigned int space, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_revents</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaae23b17b3c34639b7a2a8ed74880d364</anchor>
      <arglist>(snd_seq_t *seq, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_nonblock</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaa41faa2ad471677d1060f9e9a226ac52</anchor>
      <arglist>(snd_seq_t *handle, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_id</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga2cdaded101f041b9a0930b665ac44b93</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga02442682a361bc6f9faeff468cdebbad</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gacd207de4c08ffff3020b078de8e64cc5</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae9a0931460444f130c5c1df9de57707a</anchor>
      <arglist>(snd_seq_t *handle, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga62cd9f5ea1d75db676d43da44596750e</anchor>
      <arglist>(snd_seq_t *handle, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_system_info_sizeof</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1a036e739dd2daaa9952875528c2f763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_malloc</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gad49e5da1a851505e43dcfbf5fd00b0d9</anchor>
      <arglist>(snd_seq_system_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_free</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf3876a29ae1e648d9fd8e6d067a56b6b</anchor>
      <arglist>(snd_seq_system_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_copy</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8cbf6ad4d47837d0a5a1100ef0808ab7</anchor>
      <arglist>(snd_seq_system_info_t *dst, const snd_seq_system_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga63c9cfcc634c722350b55a6820461e9e</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga7fbb56a82dfef9224b411a659ba7d8f0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_ports</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae446559ff05dc0ed1967eab253921aa0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_channels</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga58fa1ff3d4ffafac092e5cffb7092ad1</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaeb16d361d1fc92de95cc1986619eac8a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga5af096ec5db751e0d10ec0d998482c6a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga548a7ebe6c90e90f689cf8d862b81f9e</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_info_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga307d71507e4bd63602cd9686840e68ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga632a84797c8b3a96cd188dae681a4c97</anchor>
      <arglist>(snd_seq_client_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac6da8138f5ab2966ac7cde41a2218965</anchor>
      <arglist>(snd_seq_client_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gae45c6df3ba2bfccd72bab8bf0fad4791</anchor>
      <arglist>(snd_seq_client_info_t *dst, const snd_seq_client_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga5eccc990c80935a7cc7dc8f9fecc44eb</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_client_type_t</type>
      <name>snd_seq_client_info_get_type</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf8d7a9e3884ccaccc0fa8f3008a1922</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_client_info_get_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga72c935b373607fea06a2c3ad996d1722</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga68795cb06ceb82f8b02cfcb272024936</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa5788a36d5d5e3ad710114b355957323</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_card</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaf6f134c1ca63142a5d61ea7e44a24eda</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_pid</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gab1cc1f3bf148d0510facf7ba194285d2</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>snd_seq_client_info_get_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac9298146a03d2680fa9bd00bb912fdb9</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_num_ports</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gacc60e8ca52278c2ab78bcf317591309b</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_event_lost</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga10db9e262a007b34010a1112afca2f73</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga202a4ed9a8dcb521b1b7468fd2ea9560</anchor>
      <arglist>(snd_seq_client_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga17a196d1cba06f3d96f79882884b5cc3</anchor>
      <arglist>(snd_seq_client_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga69acaad376ff2645afe6dbd46fd74b15</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga11ffeb226dc9f79a18069d8c3c26d12b</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad130c3a85ea614450905149339419794</anchor>
      <arglist>(snd_seq_client_info_t *info, unsigned char *filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_clear</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga70d31a588c75cc7e8407974942f8f974</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_add</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga90f86c0c27e8f279c887728ed59d2ec5</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_del</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga379ef80c5c54ad11188ed0256068f83a</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_event_filter_check</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga252e1390151d892c190f4e1744046bff</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad4e3dd20d087a3ac4b709b4fbb525ad7</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa6c062d0423dbd735c0f97f3e0aad6ee</anchor>
      <arglist>(snd_seq_t *handle, int client, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga109f62fb356c322533ddde4a6ce2c587</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga71ed00b1bf9265563a5377e720511cae</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga64dd385218ec42e3b29a3fbbea4f16ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga9e7694a46464eef735baa6fe707772e5</anchor>
      <arglist>(snd_seq_client_pool_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf2b20b02752e3986a04191e8f978114</anchor>
      <arglist>(snd_seq_client_pool_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2800f799c3d2f91dad38ac4507fbf5a2</anchor>
      <arglist>(snd_seq_client_pool_t *dst, const snd_seq_client_pool_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga0fe8815acdcea59b64f6c8309fd3976f</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga97029b162c526b18a06b989b0ceb0ba0</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2a30c5144b83b16742dc58a43c3285d8</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga08f0213028e27cc005d2ae9deab054ff</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2ed48ca260bbeae082d7ff9e92d29e03</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaee2a604809f284e9de22cf36aaa4326b</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac32365b27518a67e72231f835f3eb054</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga197e31b28dedbe68946704c38e6805d0</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga1bedc9459e1ec6e4dfa34904105dc215</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga896dd0d346d66cc7deac06eaf7ce056a</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga076635492cecbf740302c97a4a84ea07</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_info_sizeof</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaaf7342df4e6dcdd4b40bffab2d9383bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_malloc</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga86ff334491c0d8c5b007e5b78d457334</anchor>
      <arglist>(snd_seq_port_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_free</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac6254a78c36c8244782e18225647a06a</anchor>
      <arglist>(snd_seq_port_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_copy</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac1a2571b37277ca7845a078fbbd07e30</anchor>
      <arglist>(snd_seq_port_info_t *dst, const snd_seq_port_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5a9f99c028e47a549836581b3cc01705</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga90475c2db0acf804d8959058782493ed</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_info_get_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga58c1e63db50536dbe517c4eb56884a99</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_port_info_get_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2ce813765619784f7b6f773730bb00a3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga52d3744aa8a9ef122b350247c206ca1f</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67089430166da86830b2e8d24ffcb82e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga98f449484e99680ec24dd8a635e5c46e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gace0fa9154b4c7f48e582d2c6fca4d343</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga3a7cc5d4eecf7fff98f6f8118176b352</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_read_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67ae52056047784f451f46dc0e81ca67</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_write_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga8278d1e6aa256e8f26191ae16202c114</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaf4a8c5c64c489321994ace0247921a87</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2b452e4c849fc860db7879f82d4b3323</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga56146d9a0b992ed1fddabd787ecdd755</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga25bed7f48ec3e75764c3c49b510b23b3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7ea54e7b23774e0670174cc8698cb375</anchor>
      <arglist>(snd_seq_port_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae3d9b091002c86bc31644da0a9b48bb7</anchor>
      <arglist>(snd_seq_port_info_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2cb8af4a438139a3733212ef8d9fda81</anchor>
      <arglist>(snd_seq_port_info_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae36f8b99f4e5a374dd69760a2d23b1a5</anchor>
      <arglist>(snd_seq_port_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5e66f8964ac8686437936958c50d2e08</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int capability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae67a71150ca0bf04f265f6df14120c8a</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga95fd5b48eae29be7186013a3aded24c4</anchor>
      <arglist>(snd_seq_port_info_t *info, int channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9efdb4781a133315240b4da0a336935f</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gad52fdf46df934c1c3ab369ee4bcb7a66</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gafd4325db9167baf3e994a942577c2d5c</anchor>
      <arglist>(snd_seq_port_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gacf6441ee4622b87b450381e1cea7d7d1</anchor>
      <arglist>(snd_seq_port_info_t *info, int enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2faba31e8c97874e4be7ca95e76bdbd1</anchor>
      <arglist>(snd_seq_port_info_t *info, int realtime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5c4463ccb1c7f599a1b34bcac2c01ff5</anchor>
      <arglist>(snd_seq_port_info_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab40867ed02d9d6e40a75f929b5adf24d</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_delete_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaa79a02d8fc3d6668b0a68d5d8b172603</anchor>
      <arglist>(snd_seq_t *handle, int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9de3dbd9960f6108257f38e7945ae327</anchor>
      <arglist>(snd_seq_t *handle, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaca72792a7a96c18809768a905cefbfa4</anchor>
      <arglist>(snd_seq_t *handle, int client, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab979b7ece475bba1d75e9d7279b912b1</anchor>
      <arglist>(snd_seq_t *handle, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9f3ba4f4a959798bd0b25b417b9ca4cd</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadbb7289e585bbc1562ef3b9a0faf17b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga5b9d64f3edd2e5ee90087c447e52d0ef</anchor>
      <arglist>(snd_seq_port_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga8a88b6f7986cdfef79c95fc868ac8b2b</anchor>
      <arglist>(snd_seq_port_subscribe_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga736cf588e66b79fbc575beac47d8f608</anchor>
      <arglist>(snd_seq_port_subscribe_t *dst, const snd_seq_port_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaf25cc0762f6ee1be48762e1804d732fe</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab8f9a467cc4cc4587fc3d96efa62b86c</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga236296f6da31744a13d26c970a80fcb1</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac80f53bfaecc9dc6f57a99a859549771</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0c0f2ec04a4496d98cfb75535c8ef047</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gace8d1d45a7a94a1eb2dcf19056d345a0</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabda2bb1e51927155ad1df1701a337f50</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0ab685bdf4e1f0dd8be756cb5f089765</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga79a030e6155c66afe94b81f77b8575cf</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga10b7e0184afa49bed2b871bcd1c310c0</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ae181ecaea97317fa724a80e8ce4f21</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga14bac64ec25eb4acbfc828657ad8d25d</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_subscription</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga29d9011ec93bc997f7de9f3cc99fd755</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_subscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga2b216ec66cd724af31d376398e7b4863</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_unsubscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga962385329f27f4024276756019e8a615</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_query_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga4110de85e3c685870cfcb4279f7278d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga85589d7d7a1dd6b5dee2ce0359657c46</anchor>
      <arglist>(snd_seq_query_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadf3d6ab12f6153688aa9fcebcc0c23a0</anchor>
      <arglist>(snd_seq_query_subscribe_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaca069489ed3e50c239ad50873ebe19b3</anchor>
      <arglist>(snd_seq_query_subscribe_t *dst, const snd_seq_query_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga293315700db5b8bf4e56f5ec14fd8c96</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga905bbf39942d96ee653dd239bcd9d761</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0e194f0caff016949b2b4cd591f0536d</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_query_subs_type_t</type>
      <name>snd_seq_query_subscribe_get_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac2e74d5d75c258d8d7c770ecf42ccf84</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga36147269fd15907a52f74c9879b8ad8b</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_num_subs</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabced00f0d6b51d5cd6461035a5d38bbc</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_addr</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab43ae1fb1211b7762adc31723344de77</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga639c72ea9a0b84d2eab5bf5c70b8e316</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga08702e693e3a1508755232730f5addc3</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga543ec2a6286e294363ee13f5294c38fd</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga97717919a2d96232cbe21d6a9a51b7f7</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0048b9508d64d897ae90e6155fc66fad</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaa79fcd963a66539f92c3ec4dd3d77a9d</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ce815dd0d8d50c4806399449292402b</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gad78be14f613420a840ef0fc3ebdf3740</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, snd_seq_query_subs_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga3c65dcdc45ec727cb76f9ad15c2364a6</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int _index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_port_subscribers</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac9c05af9bb647d1aa9b4408f571c809d</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_query_subscribe_t *subs)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_info_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55ef5e5a6defb4644756cd74c2979e31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad78dec2ee096469359b25935d7097870</anchor>
      <arglist>(snd_seq_queue_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga505d9b6f484307d65699c06ce8f441c5</anchor>
      <arglist>(snd_seq_queue_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga29a887460bfe9267cb52762c92fb223f</anchor>
      <arglist>(snd_seq_queue_info_t *dst, const snd_seq_queue_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga457f2e8325b450d2438f51dfffc0f1ac</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_queue_info_get_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcfc3ffd825a8815cbf4eb33e475de02</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga96157a2ca9d489b44643e45ff2f59dbe</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1030896da01cf5db2d1f4f0708f70df4</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_info_get_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5f0bec17e5659f97e4e1120bdce17f89</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaa62c379286b52d3ca60b28a895cce88e</anchor>
      <arglist>(snd_seq_queue_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga034321c7457283655d905b628ddf5be5</anchor>
      <arglist>(snd_seq_queue_info_t *info, int owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gadb0872c315b7aad61efb1fbe0a5c9a47</anchor>
      <arglist>(snd_seq_queue_info_t *info, int locked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad28b514ecfab5d4446ed2699d2aeed7f</anchor>
      <arglist>(snd_seq_queue_info_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga05fc43229e94aecbb4379909200aeeae</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8efa821e0fc96fd05460306808e8fb7d</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga036e62b321b56bee2e8d2e8280a6416a</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5b2cf5082861776ac9f7f986459cbccf</anchor>
      <arglist>(snd_seq_t *handle, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55c027a8a487f9c9000674a0e5ef4ab0</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1b55c8f96590fc916aa55090c4ba42f1</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaad396a0a6257df968e5ad0c7ee1222ae</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5ae5f595791c1fb83b21d8ffbf493ae6</anchor>
      <arglist>(snd_seq_t *handle, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gae9663bbdc879358019ba35b317a9278a</anchor>
      <arglist>(snd_seq_t *handle, int q, int used)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_status_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga410d7b24d89be10501ee18c1b2673a72</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga97a3fa054a6c7778bf3b098bde16c71e</anchor>
      <arglist>(snd_seq_queue_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaab4d1480fceb6773993d615fec82716b</anchor>
      <arglist>(snd_seq_queue_status_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1869ff7afa1c4369b7f55b00d3918bec</anchor>
      <arglist>(snd_seq_queue_status_t *dst, const snd_seq_queue_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab62a82ccd8e49520bdc5c6c3c74a73e7</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_events</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad132bcb774aacbf89cd43f810980cf17</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_tick_time_t</type>
      <name>snd_seq_queue_status_get_tick_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga45f380b20367b1ccce3e8f26b3ce35d4</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_real_time_t *</type>
      <name>snd_seq_queue_status_get_real_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab386a400f82a7b181e40646d2c58d786</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_status_get_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2f497177636b228f8ce75f853d380428</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga594dfc6fa6708674238275821c759661</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_tempo_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga9da76e175bbb5672d456888a1c6563ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga725a4ba4e5b9860468a8904a64dcf20c</anchor>
      <arglist>(snd_seq_queue_tempo_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcefe4a38566fbbfaea2ba72dd7d020b</anchor>
      <arglist>(snd_seq_queue_tempo_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6d6b5e1c110e1fa86f73a6dc9ae30669</anchor>
      <arglist>(snd_seq_queue_tempo_t *dst, const snd_seq_queue_tempo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabe8d63b929c886cd0a0c30ff29dde687</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0ae17b5abc2d0967eb486f09186c78a2</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga65741e506fe8b4e508948276c28369a5</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga58bd46f3157166238aedf69d0d1488e1</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab69067f2e5f84592004709c5a02dc980</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga4b0488b65a0ca46460c92d80afa53681</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int tempo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga69e4bf372ce3fb49b8fa60130472ba47</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, int ppq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1fe4c287eb922f986d70d97e8b189b2a</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int skew)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf3d139c12fa36fa8c582d966bcedde29</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf1fab24ee86f45c7eb2b0c3d1b2574b4</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga84793898d689520441a4c1164a8c0c77</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_timer_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga60d0cf3e001553f476f9e42f36fbc4c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf92d9d17a12095b2d79fda8c9a55c165</anchor>
      <arglist>(snd_seq_queue_timer_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0b0b25bcdc1ed4d77fb652af640b1a85</anchor>
      <arglist>(snd_seq_queue_timer_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad51004af9337c59da5863167dc7a79a1</anchor>
      <arglist>(snd_seq_queue_timer_t *dst, const snd_seq_queue_timer_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2255dc028c3143237de8a4440a81699b</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_queue_timer_type_t</type>
      <name>snd_seq_queue_timer_get_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga635fba8ca3b26972a318c1ee788be52a</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_timer_id_t *</type>
      <name>snd_seq_queue_timer_get_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6b83a4e6cb579c1d1ed99b24e258fdf7</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_timer_get_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga3981cf76e6447dfcccfa429a3f7cb94e</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad10886abb8001755915a29ee450fa3a5</anchor>
      <arglist>(snd_seq_queue_timer_t *info, snd_seq_queue_timer_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5525b8e9d1efbad4718e3dbbaa9e4462</anchor>
      <arglist>(snd_seq_queue_timer_t *info, const snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6e6fbe81b0fff646e046ac81b32fd44f</anchor>
      <arglist>(snd_seq_queue_timer_t *info, unsigned int resolution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga545fa858434c91dba0de7bd9585bcc08</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga607d9437a074adea11f2112e26eac6ac</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_event</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6a4edcdaec5d55e61c8db1a0fbb2daa9</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_seq_event_length</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae807a81acfbb8e7147a186a02274b34b</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0360e41b946c9948ad717beef7c5ab61</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga41be1e09173957944352c50067a686ea</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_direct</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga63986686b918abeff9902108638c5b2f</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6421feafcd6f116d34531d6b54177c17</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t **ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga08d1c09716d6c04f8164539429a8659c</anchor>
      <arglist>(snd_seq_t *seq, int fetch_sequencer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drain_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga64a0ed5488504ef91b5b6b92172bc0aa</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga9ac143d4f0f826c9715424a8ec47339a</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_extract_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga8a75dbcc2b51d0ea81d2538c0ae131f0</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t **ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae42e855dcb4745bdc78efe313d49a0ef</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga12bcd6b29f0d5f13b00f2c55a2ca4556</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6f8a93aaa55cdbff67e264fd5357de0e</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7b1182e2df033f7813a28bded948cd5e</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_remove_events_sizeof</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaa5a0541a3f5e9b0536c8bc022c64dc04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_malloc</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga280e1b40b1cb608176d9f561038afb74</anchor>
      <arglist>(snd_seq_remove_events_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_free</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga14849dfc4b6f46c58aa8567a7ee5860e</anchor>
      <arglist>(snd_seq_remove_events_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_copy</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga03bce50b05a4a7ae7236875a3e9d2949</anchor>
      <arglist>(snd_seq_remove_events_t *dst, const snd_seq_remove_events_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_remove_events_get_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga448bdde3612be594f3651d591678770e</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaf1c86405bfc4ad14bfa7d6234545e4ae</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_timestamp_t *</type>
      <name>snd_seq_remove_events_get_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga781d9bfba05346779a4d89b8720111f5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_remove_events_get_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2b26aa9977be1f96e42cc71a9075909a</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga474f7d65b54164c7b4066b2341680b69</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2bac6d50ae68c432441b6f86f8e51ec5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaefe8772759971b008123512b5294fecb</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4efc426e73bd8ed2398ee8911c1a1fea</anchor>
      <arglist>(snd_seq_remove_events_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga79e4eea77bf7639b314d0c6a2b858897</anchor>
      <arglist>(snd_seq_remove_events_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga34502d7f197063e7e404039c06cd49f6</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_timestamp_t *time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaaae3ddaad59def2395a9c3391ad3ea3c</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0611da2732cef4d8943489736e838cb5</anchor>
      <arglist>(snd_seq_remove_events_t *info, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4b3ac3780f5368118422b08a08ed8d43</anchor>
      <arglist>(snd_seq_remove_events_t *info, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4847f69287addc86dddf61a2ffca5089</anchor>
      <arglist>(snd_seq_remove_events_t *info, int tag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7ed1109642fdb8dbd9f8a20564e40362</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_set_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga8ff28fb95b62e6359d2e21c23b2a73a5</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_unset_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga74b65393d57f2e8771a801629d6b3528</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_change_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga2eb3e010834db5401a6e38c1bd2f23e1</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>gab9ee8563691ac283aaf93c6bd15ad99b</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>snd_seq_event_types</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaa40bbb018018a491bd102e6fe58a6c84</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq_event.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>seq__event_8h.html</filename>
    <class kind="struct">snd_seq_addr_t</class>
    <class kind="struct">snd_seq_connect_t</class>
    <class kind="struct">snd_seq_real_time_t</class>
    <class kind="union">snd_seq_timestamp_t</class>
    <class kind="struct">snd_seq_ev_note_t</class>
    <class kind="struct">snd_seq_ev_ctrl_t</class>
    <class kind="struct">snd_seq_ev_raw8_t</class>
    <class kind="struct">snd_seq_ev_raw32_t</class>
    <class kind="struct">snd_seq_ev_ext</class>
    <class kind="struct">snd_seq_result_t</class>
    <class kind="struct">snd_seq_queue_skew_t</class>
    <class kind="struct">snd_seq_ev_queue_control_t</class>
    <class kind="struct">snd_seq_event_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaf3c4c4900893680d95aa722ee6c16d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_REAL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga13e36bf2f3341625f6d88858d512f50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gac7da1e1965e86a68f663babec22a99ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_ABS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaa799f2aa335545bfe9dedc84105b6cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_REL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga167d462a14d80b2599470635dd0ee048</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gac7c12b40ede05529ec9a66b938d62aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_FIXED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga35b6aacb44080053e0ca0eeaefbe8dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_VARIABLE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga273f82dce70a0284a4dcabd34f1bfe7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_VARUSR</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga5e38e6cf87f023332b797c30b74223b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga69fa938ef7ebc12e3d1b8758b39b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_NORMAL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gad40a7212be7f3c8b27ad641d7e4210ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_HIGH</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga6816c4987d7dc2efe4b9949223964165</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaea7b84a517451282036dad991a45239c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>snd_seq_event_type_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga5effcf3631d53ced009e02b8a9cabf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>snd_seq_tick_time_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaa6a1e0c4394f9b26cc55e0181a5e2cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_seq_ev_ext</type>
      <name>snd_seq_ev_ext_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga4ce65ee70e6d2d346f67b2fe725abb3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_event_type</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaef39e1f267006faf7abc91c3cb32ea40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYSTEM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8b5e0c8c25353f3bc185a73c28573d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_RESULT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a201648f4d62fc9597af38376935f62f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a783ed12805a5ecc26b36b5d469332a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTEON</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af35df63c334c5388ff349550e31460c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTEOFF</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aa7359bc2f050a79c5021cfa90d0705f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_KEYPRESS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a6d7adef3e4f2ed96cd7e2def9d541510</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTROLLER</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a926c84318eb653c739e1d21fa20a0d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PGMCHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae8264fb5f3870a1e5f6c2724b916cefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CHANPRESS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a7eb97df129127eb771e9800da217f1fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PITCHBEND</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab1bb9ffa38e5247f993f9368a144336b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTROL14</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a931edc93b65db5e11be1670166a6623b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NONREGPARAM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a83eb21e2fe5bf509d0d9c4a911f0cd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_REGPARAM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae85ad451b5012c5d4f37bec4cb39516c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SONGPOS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a04f1e8a2a2201a7fbddf628b127dab39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SONGSEL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40afc621686c4f2ac288e24ff8d0aa448bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_QFRAME</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ad2bcd713ea5fc228791eb95545cdf23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TIMESIGN</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a2d96daa58863eba007a6a8ce409d25a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_KEYSIGN</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a342cdc56ed94d27d39fae09bdbfc4e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aeca878e55b4482dc3d83bbc1c1411f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTINUE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a85633da32af8af5efa596a7f68cff5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_STOP</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8bda57193eede5c6d45a34a135c8d95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SETPOS_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aeb233aee7f0548cd3b0fdc811c15d3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SETPOS_TIME</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a0ff211e23d32cbb1e3bcc4a63f61c2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TEMPO</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aafa3d0b6c0a467619b802c9e27320810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLOCK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a54f38f955c675d0e9624f67befe513b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a2df30d1017d98ea37e31f83132d89b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_QUEUE_SKEW</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac974cca728d755870c6b106fb172a49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYNC_POS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a68c456590802b80ff3e338852a2c28ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TUNE_REQUEST</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a60918a2617fd3435decbf96029994ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_RESET</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aefe6bb7adade51add7905856d70efc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SENSING</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af0cd5b4a2aa37ee9b34c6ecdde1b32b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_ECHO</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a71cd073dbeb98982d8b094ab6d841376</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_OSS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae67daafb563cbbda4a131bec897d8ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a7b77fe59af173ddfebb718da0859712e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_EXIT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a0b3cb6ea4b789281399b4fb6561aa390</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_CHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a49cf4bb402d99c25d817448b17b6e204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab21b1c620680dbc7b1f176f7b75b851a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_EXIT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8dc5dc9a22148dbacdbf69df2e8347f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_CHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae7b1d0e0dcf385baf78ddb60975d20f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_SUBSCRIBED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a1b3b924275ca8c641df3392fb661ff30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_UNSUBSCRIBED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac7419ff83a6e1c4b318c48ed38b938f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR0</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae73dbea29b624e1b8d7ec37728b22b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR1</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac1e901b952f98aee45c96627a937908e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR2</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a1828901e7b2bbc5a79a1bc88e7165841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR3</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aae35f2bb6429dc231fba55c646160e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR4</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab7201d83f92fa2fc383a560946e34c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR5</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a39cb3eb078644cf65fb1af0c6965ab30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR6</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ad92cb55b491219eea100794029cbf7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR7</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a717ccb9662771874b116bdccbac4f734</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR8</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af41fd348574a8fc8876456325d9e59cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR9</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a28b9207af50fa5fae4f13acdc029db62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYSEX</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a053842a32bef6aac4c8b21b2fc80fc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_BOUNCE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a290af1f3314dcfe9f83ee387c38417a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR0</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a3589b2a7abd184c2daeda8d1b3cff906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR1</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aac29ee4fae15e3fbc92f489a7e08e33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR2</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a03b297316c7240dc208e8490b4309e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR3</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a92108ceb0767059de1e81566d1b92b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR4</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aec2b1c443ce623770bdf5638575f97ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NONE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a78b0f3e8f6d674f01d3823481c0b90f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>len</name>
      <anchorfile>seq__event_8h.html</anchorfile>
      <anchor>a77124bd5f7e31e6fffc19f335da0c23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>seq__event_8h.html</anchorfile>
      <anchor>add9af9569af79ec26dd741fb226b38ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq_midi_event.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>seq__midi__event_8h.html</filename>
    <member kind="typedef">
      <type>struct snd_midi_event</type>
      <name>snd_midi_event_t</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gaf4d255a5c5228aa8d46a9c3e368a0e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_new</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gaa3c1797128d84a182197f5dd853c53ec</anchor>
      <arglist>(size_t bufsize, snd_midi_event_t **rdev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_resize_buffer</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga22cffc488269968de6cae6796f92ee12</anchor>
      <arglist>(snd_midi_event_t *dev, size_t bufsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_free</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga84b9fdddfc1996d0abf759773593931f</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_init</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga670f51a0ce1402b7d03c2a3f5b2801ed</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga54a3d6f03dc0f83ae32d7b12b1da7e63</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga1d6bd40b70cdd77e500b25e6eec19484</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_no_status</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga4c32d90809d0c2d44fb41be0276100df</anchor>
      <arglist>(snd_midi_event_t *dev, int on)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gae44531e8091bdd6e97a5b70e7b81ea10</anchor>
      <arglist>(snd_midi_event_t *dev, const unsigned char *buf, long count, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_encode_byte</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gab758a60cfa82dfa28e08ba2e2cbe2149</anchor>
      <arglist>(snd_midi_event_t *dev, int c, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga9ef018a85ec7f61d45d8b17083bf8cc3</anchor>
      <arglist>(snd_midi_event_t *dev, unsigned char *buf, long count, const snd_seq_event_t *ev)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seqmid.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>seqmid_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_clear</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gafa496482a21b231621b385d1f1675b58</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_tag</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga2d78011c3d4618ff47f7f60e3553ea02</anchor>
      <arglist>(ev, t)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_dest</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaff2d03c7db0d6d5cfeec429d160d9459</anchor>
      <arglist>(ev, c, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_subs</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1eb546b3a1a23044d0ba7818731ed6d7</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_broadcast</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab06bf27dd5d0c94d78d935311fec1124</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_source</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga457525dcca4a8a7e8cdb599a8ad6e8ff</anchor>
      <arglist>(ev, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_direct</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae2674210b5601e8aa3e787c1ddbdcb62</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_schedule_tick</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga589469c27715bfae205ce26d5801d8b1</anchor>
      <arglist>(ev, q, relative, ttick)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_schedule_real</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga713370bf29736477532e791b4ad92530</anchor>
      <arglist>(ev, q, relative, rtime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_priority</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga9b6fba99052fb11977559f15192581d4</anchor>
      <arglist>(ev, high_prior)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_fixed</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8c949038f36fd3e27de8b8e419978793</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_variable</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga12ac15c961d96d3122f7c2f6a0849fb1</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_varusr</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga993e1f46d8122a227fa0072a73af813e</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_control</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gacef573eba71eb2238758f1c178efd1d3</anchor>
      <arglist>(ev, typ, q, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_start</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga4fcbcb1f9e1967a1ec77b569be735d7a</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_stop</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga342554415f9536077408dc1c7331ab36</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_continue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga32b0ff4c40ffde6e08a7df624193ae40</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_tempo</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga3d2a17d5034eb296af311b56374f2b19</anchor>
      <arglist>(ev, q, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_pos_real</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae7cb527a1efa854ba487bb26cfa62c77</anchor>
      <arglist>(ev, q, rtime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_pos_tick</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8b6057651e037e0df565784f629b5fb8</anchor>
      <arglist>(ev, q, ttime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_start_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga0c7a86bb19188a00c5a3b4907d558058</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_stop_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab62a2e964135fdff96d21835d4cddad6</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_continue_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gad6b0c90be37eeb583318c9077f095b86</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_change_queue_tempo</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab77f13c0b39dec12ef983eb706925d00</anchor>
      <arglist>(seq, q, tempo, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_note</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga544adc6b2a43edab107962754a772778</anchor>
      <arglist>(ev, ch, key, vel, dur)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_noteon</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga61fbd95aadd4a80f4ff8db5f8f28172f</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_noteoff</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab9b466031485504fd5b4300def95de7c</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_keypress</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga09c562a0d1745dc1a73e7347d51af913</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_controller</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1658bb76bb89c8bac1e7b0140d72c23c</anchor>
      <arglist>(ev, ch, cc, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_pgmchange</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab74005fe3b04460687f88ba79695d631</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_pitchbend</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8da40bfd56e00ebec775e5241d86a3e3</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_chanpress</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaa475a6778116256734e7da45f4eb7af8</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_sysex</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga104862c436dcc8f23892be44f50bc90f</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_control_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga36dee7982baa47ad22ab8437541ea5ef</anchor>
      <arglist>(snd_seq_t *seq, int q, int type, int value, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_simple_port</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga9368266bde7b5c0f8d5ddeaf64914719</anchor>
      <arglist>(snd_seq_t *seq, const char *name, unsigned int caps, unsigned int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_delete_simple_port</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8ac4c3a85750550f2978ca720a6329ca</anchor>
      <arglist>(snd_seq_t *seq, int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_connect_from</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1382029795fa101a3b8cc0af7b83b639</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int src_client, int src_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_connect_to</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab39e210c5d93e96c241644f334c6c9ca</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int dest_client, int dest_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_disconnect_from</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga931d199c780be30524aa24e58c59f6b9</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int src_client, int src_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_disconnect_to</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gafe5756afcd471b2d6bbd457c7abc5e89</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int dest_client, int dest_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_name</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaec3acab3bfb3df3f0c9ccc4903570b9d</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_event_filter</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga888bf17bbc8141d1624f7bbef52dddce</anchor>
      <arglist>(snd_seq_t *seq, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_output</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga38e40d84154122798c9fad8e56c60a0f</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_output_room</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga597d2417e0fd512f56d31464cc2ea7d7</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_input</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1344c7aadb847bd409093c179557732d</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_sync_output_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga732ad887b457771b7db47908186e8cce</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_parse_address</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga692043bd9cb709b15513b06cea5bf0e8</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_addr_t *addr, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_reset_pool_output</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga49d2acf57c4493a95eaaa19d8199f6f2</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_reset_pool_input</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae90243ea4d4e534bbca2b3965ff8efe9</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>timer.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>timer_8h.html</filename>
    <class kind="struct">snd_timer_read_t</class>
    <class kind="struct">snd_timer_tread_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_DLSYM_VERSION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gae123de10661be511c00d2d7b6a428745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_QUERY_DLSYM_VERSION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7439ac1cc9e0958a21f313ca848af77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_SYSTEM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga1cda350fb4de9a2f7a137c5649e3793c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_RTC</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga77ddf4d042846b39fc4ed4966e04bee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_HPET</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga15f5febc65924c9d3b12c7440c13bdd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_HRTIMER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacf694819483359539a0017b09e9de9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_OPEN_NONBLOCK</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac2c50bf6045560bc13aab81f25b2b740</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_OPEN_TREAD</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8d8b1f21a9c9db84a6ffc02e8f2c745b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_id_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaef1895685cb2f65d1a40cc46fa5a7eb2</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_ginfo_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2b8086e599bd8d1bec750df97f572fcf</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_info_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafad2100b7f0478b8c3c59f0f4aced23e</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_params_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2e76b7b6f7fe340b4a06935f080fbbbd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_status_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6597b8f73b30a3f2bf2aa9f3590b92f2</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_id</type>
      <name>snd_timer_id_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga87c7e9656e171a76dada7e7e2da37136</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_ginfo</type>
      <name>snd_timer_ginfo_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga794ba3ef840cdb926d415ebb75d2c968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_gparams</type>
      <name>snd_timer_gparams_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga891a982092ef97b93001ae2c096b8bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_gstatus</type>
      <name>snd_timer_gstatus_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac14592347542015d4540e5c91ba2f677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_info</type>
      <name>snd_timer_info_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8d2a9e26d1f38ce65160d3cd71a2bce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_params</type>
      <name>snd_timer_params_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3450759fce8e0863ebce3221e82bafca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_status</type>
      <name>snd_timer_status_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fe20f2c0d1535e3a200944b1244f855</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_query</type>
      <name>snd_timer_query_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga279f189051eba2c5e072c30198deb81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer</type>
      <name>snd_timer_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7f514d85bfd93e1e5853a5fded89b668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_class_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafcf09894847cdee6925ab6e405c358d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_NONE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a678ee4a7108ad3653fc49a6fe07ae45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_SLAVE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a532f7292aafb8e4eaa8fce3bb42b7ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_GLOBAL</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9ae7a63ed172c4c38199e4d6b3ed9fd728</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_CARD</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a1537e543af1e092113918133e967060a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_PCM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a7ec320b901911a00dabae6361497904b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_LAST</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9aba93010fc89dbe48bbf9000cf8ee9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_slave_class_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gad834b328331c3a4a4fb42041e2e61298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_NONE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a93c410a46bba52d680058f0718a32879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_APPLICATION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298ae7fbc56d9edddadce36b1c106642df47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_SEQUENCER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a1b051f95a8e420b7d0bea1621882bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_OSS_SEQUENCER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a36e74e47c3d113180d91f869d37a2d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_LAST</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a411d2f011abfe46d76af7e0be1056512</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_event_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga396a3bb020be40c36c9a6de0554145b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_type_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga07cba0cdbcdc514edb078bcc0740a7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_HW</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfaf824868ef06d7288077a6f48a1e2e54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_SHM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfa58a150be6754c776d9be0a6d1be810bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_INET</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfa78682127e299b23d290649ddc34775b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga54f6d3838ff4680fcda97952a60376ff</anchor>
      <arglist>(snd_timer_query_t **handle, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5d11f58dc15f5d12465f4e6aacae43cf</anchor>
      <arglist>(snd_timer_query_t **handle, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga13063464032aae91ab4e72dfdb57cb10</anchor>
      <arglist>(snd_timer_query_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_next_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5c10a9b8dc5f4442908fa3d15ab79169</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafcab2e2ce9b0ab69641ca10ba6a5bc17</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_ginfo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga03945b4d2bd9512de9a3fd923b71551d</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_gparams_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4faf0668a3808f0b0f78f260af193645</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_gstatus_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9fa22f49745d1e383f0d6e5d9e795e2e</anchor>
      <arglist>(snd_timer_t **handle, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadd7dd0538f800b67fea5f096a73c2fee</anchor>
      <arglist>(snd_timer_t **handle, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga155e0b5c831a3140f49c04932da9404f</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_timer_handler</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga076a6bbae3bfdb956b0a1a6ea9daa0a2</anchor>
      <arglist>(snd_async_handler_t **handler, snd_timer_t *timer, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_t *</type>
      <name>snd_async_handler_get_timer</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa497b2873abd234df7e932ecdefad5e0</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_count</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf035c37343afed7f13c60e950e461cdf</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga89ec000a41fa7dd1269e332324663f61</anchor>
      <arglist>(snd_timer_t *handle, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_revents</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga395e14d49bbb41794fb1bb6114fdf93f</anchor>
      <arglist>(snd_timer_t *timer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga608cb266bf1cfd8f3796e6e55a2d5fe8</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_info_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3fd358a410688c3aba3e2d69acf027a8</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa78c7089909252ee0ca69f7552fa2804</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafc990117a12e19a729ff10ef217fe2f9</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_stop</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6f8147c0679c820a77f98b1dd5b664a5</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_continue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaefeb6d7a87d49666470a62cea1440ed3</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_timer_read</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga724ada94d0bc3564ad77973c0a084682</anchor>
      <arglist>(snd_timer_t *handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_id_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacc0a4c452e6dc6a9401da8b0f22cd14f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab60829b0a47dfc5ef88ce74e586ebe23</anchor>
      <arglist>(snd_timer_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4c938bd81f93c364aff08de5e96a3cf6</anchor>
      <arglist>(snd_timer_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac6d57323807a3ea3f3f9fe1870cd4755</anchor>
      <arglist>(snd_timer_id_t *dst, const snd_timer_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga93bce2afe5e3f40f9f7adc17339273c4</anchor>
      <arglist>(snd_timer_id_t *id, int dev_class)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga42ea98dbaf720519453c0110bd06fb8b</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2cafa2722ebd48051328c8684c9c544c</anchor>
      <arglist>(snd_timer_id_t *id, int dev_sclass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga82e2754532fa2b5b28733820eab4d600</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga18406bd50ccd2818c7aa6fde6274a303</anchor>
      <arglist>(snd_timer_id_t *id, int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga305324f73fc12e7e42891598613a2d29</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c296e2bf5e2b0e1a71fe6612993e68e</anchor>
      <arglist>(snd_timer_id_t *id, int device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa864bb9270989329f8acc86c5aec2093</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga28a3d45e09fc45f97fd37d7338138544</anchor>
      <arglist>(snd_timer_id_t *id, int subdevice)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7f52f12140cd97f267143cbcd0832d02</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_ginfo_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5433f9a5020b9db09939b51bfdecd449</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c0c9386149431c24b8260678afe57ea</anchor>
      <arglist>(snd_timer_ginfo_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf223a09c3d076947ed3c09cb4d6fec79</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacfde902fd8078764afa3c7cadfc5f53d</anchor>
      <arglist>(snd_timer_ginfo_t *dst, const snd_timer_ginfo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_set_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaebdec979e0c5a70100620cb7bf1c22d8</anchor>
      <arglist>(snd_timer_ginfo_t *obj, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_id_t *</type>
      <name>snd_timer_ginfo_get_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66c1351ff92884298849d650f98b0a94</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_flags</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3f4cf1a7e485c18aa16c9de159490f36</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga086c81db497d7818afabbaadb888731b</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c95448884b61a0f8a04c2cd134d5a41</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadcd41537e9db1c08d816a9f2fe1bea52</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga452c539c7c8c949bb446879e4d9151c2</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_min</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga33c9458b0a47e6448af0acc97d8860f7</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_max</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fbb78b3361209c15a0ece5bc2b939c0</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_clients</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497147a128b64374829408beb773316d</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_info_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3845cca41afd0f5ee40132d5b10c1e38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga51e754aec623f96bcfeda9511f51b5b7</anchor>
      <arglist>(snd_timer_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga10da72bb7ae7a6ed91e7857b61add016</anchor>
      <arglist>(snd_timer_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga92e91d9222794a1c5e82b7672faa214b</anchor>
      <arglist>(snd_timer_info_t *dst, const snd_timer_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_is_slave</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaccf0a207b91965e7200355a0daaac6ce</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaddb757aa65e9532ced42ff7e9146ff34</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf46477b4ca62a7c2bd87926a45ecbd50</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9360acea37a3351ab9d2c17b7a264395</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3b33c3f0af5c93461e9493b0d4a3b81c</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_params_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8a76df112a4046b72bdd4903215eca09</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6bdf00a7a9a2bcd46848c3862e31d7e7</anchor>
      <arglist>(snd_timer_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3cba3ec4b6146cc7855d937b7aaf7953</anchor>
      <arglist>(snd_timer_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6beaa69176cf2bb404983da4d133fda5</anchor>
      <arglist>(snd_timer_params_t *dst, const snd_timer_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac39b36fdcc72cbb05adb909673df04f0</anchor>
      <arglist>(snd_timer_params_t *params, int auto_start)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c7537d0729793d242b9263185f24e06</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497d23da21ec46d58ef3d6c01942d7c1</anchor>
      <arglist>(snd_timer_params_t *params, int exclusive)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66fffdd5b538259b54ebe9570581d52a</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaede871d499497de1199bdf1e8f9c9872</anchor>
      <arglist>(snd_timer_params_t *params, int early_event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6e45bbcef976cfac74336f337a0460cd</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7101edb9ec33fdbbb94e04256388caa</anchor>
      <arglist>(snd_timer_params_t *params, long ticks)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga298418a42230f305c3c4efdf14da3403</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c55b27f682897a1b421b1be46a36289</anchor>
      <arglist>(snd_timer_params_t *params, long queue_size)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa4462f1d878e5f1f10c40549692effcb</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab6820b66547c333402ea8e66fd600af2</anchor>
      <arglist>(snd_timer_params_t *params, unsigned int filter)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_params_get_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga94c66976bd4b993c766e81d2452597f1</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_status_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf0ceabb82125265a8bfe6ea85b889063</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fa0de36e4494bd5ece4965ffe832db1</anchor>
      <arglist>(snd_timer_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga60f6cf340f3f4881e1bff8ed11f1e634</anchor>
      <arglist>(snd_timer_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac14cf4718333897ecb2b823b738aaff4</anchor>
      <arglist>(snd_timer_status_t *dst, const snd_timer_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_htimestamp_t</type>
      <name>snd_timer_status_get_timestamp</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c303da4c37285d423f428710409ee08</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaaab668cc548b6c4a24236504d63da0a0</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_lost</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7ad78e8af9855e71d4951147869693b</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_overrun</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf3a83c122c2e19059297599d3486c04d</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_queue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6edb10e32b6b485ecccef73d862ca648</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gad0cf85bf970338f0924e0f642057c9a6</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>use-case.h</name>
    <path>alsa-lib-1.2.2/include/</path>
    <filename>use-case_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_INACTIVE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaedcdfd09f499b753d8652772ef1a248f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_HIFI</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga71b24a1fcc4ce2cee555520ca546b348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_HIFI_LOW_POWER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga9a0739ade4ac574b31b4728c22280861</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae496d33ac019caffae8dca584b04d09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICE_LOW_POWER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga64b61825903d5ce88d3f4cfb12c7bd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICECALL</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaaa4aed51667887d194caae91362e8428</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_IP_VOICECALL</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga938754af309628dfc8bafe28018b8aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_ANALOG_RADIO</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab08fad02c1e8641016be957fc5ce3705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_DIGITAL_RADIO</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gac1fc6fc3c4f08b4de9e622d05b591cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_NONE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa7abb8ce3d21b584c621869f7ebed3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_SPEAKER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga515b2956d58485b27fb982965d067c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_LINE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa5d03312d1990c0bd5c162f61fbfa4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_MIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaec0f823989984e14fab7c8e2749d76ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HEADPHONES</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaf2c22989c5315abcee46713cde8693d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HEADSET</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga72c3300fac357a2e22b52afc13547ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HANDSET</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga315d29bfbdf84cff8b7a593c34f6393b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_BLUETOOTH</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga4992d89d4ec8be51f19bec0a69ba1984</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_EARPIECE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga6ca86620d080360f6e2a240efb334dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_SPDIF</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga7f7f45feb440a49be3be9e52da98b242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HDMI</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab4e4a2b3d44883b1ffb5406529746faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_CAPTURE_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaec6b78d147824af1474fc914770a834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_CAPTURE_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gad685f6b4dcb9e37f0b5a1160425aec23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gadee4d4dce15624e282ab1960113caf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga61c217f060e616d61a294ac5d5d2fac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_TONE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaacc8e06e0c8fc0de5e26df6f20462484</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_ECHO_REF</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae2a230a913142c17f30d7dc2ae416866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga64dd2e9f8e4e800effc02d895e1bfdbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa822e565021887e26c0eaec2cee97bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_TONES</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga022328b4bb0b0b14d358cb2155e5d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct snd_use_case_mgr</type>
      <name>snd_use_case_mgr_t</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gace35ebd33e632cba9441762f6633a20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_use_case_identifier</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga530159363360c3cae3c9816c034fbcc5</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_free_list</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga003553ee6fd13119fc9e08ffcdd959f9</anchor>
      <arglist>(const char *list[], int items)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_get_list</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa128bcb412f42247e561b81ec342c2e1</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **list[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_get</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga9c13ae514eeebf918adcec0e4534aca5</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_geti</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga66311429dfd62743089be3eb79f1d1f5</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_set</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae9ff2a06c955d40ad0204f21f8352831</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_open</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga74f0ef0116590fe8eec1edeaf1d88847</anchor>
      <arglist>(snd_use_case_mgr_t **uc_mgr, const char *card_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_reload</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gafedd1fc74ce9086033f6f668348321b4</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_close</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaac2bf25d233230d2d6a9e422795d716c</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_reset</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga1364dba503c216b2e46085a3f4abd20a</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_parse_ctl_elem_id</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab0d67afb18ff0b1e155f5a762762aa6a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const char *ucm_id, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_parse_selem_id</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaee0ad3020f0b3737f449f9f2a078e075</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const char *ucm_id, const char *value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>async.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>async_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gafd936c40505997bb659b74bd368636b8</anchor>
      <arglist>(snd_async_handler_t **handler, int fd, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_del_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1c0bd4d123e9581a749b80e2df48b4e1</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_signo</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gab32c9afe265784634c78e7a6b5d27abe</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_fd</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad601f70e0405a8522860edb15db6350c</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_async_handler_get_callback_private</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad9c76588a87918901c6273e6bc98a1bc</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>conf.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>conf_8c.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALSA_CONFIG_PATH_VAR</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a8b857484628b5b4cbd2ac60503d4f80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_substitute</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a0c4acd2de7999ad6e477d398662485c2</anchor>
      <arglist>(snd_config_t *dst, snd_config_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_type_ascii</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a281182963641e7cd5975f56faad6ff14</anchor>
      <arglist>(const char *ascii, snd_config_type_t *type)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_type_t</type>
      <name>snd_config_get_type</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6def4c43ce325abaa3ddfba5a4f4d138</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_is_array</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae369d6f289748726617834b5d02047ff</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae366751e8ea98aeb69f9ef876f7b949c</anchor>
      <arglist>(const snd_config_t *config, const char **id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga550948931d44695b6d8e8f148f87cb54</anchor>
      <arglist>(snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_top</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf563d57ea9d576a94578368a3d2382c3</anchor>
      <arglist>(snd_config_t **config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51f79d1f24a519e126415c72210525b0</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load_override</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga27334922bab8391aa2ef1813f48f4d70</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6f011f2a8063dafd80bd8af506dd621e</anchor>
      <arglist>(snd_config_t *parent, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_after</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad8cc6279c458110f47d7759e308c4ea4</anchor>
      <arglist>(snd_config_t *after, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_before</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga3bd36661e3aa30c51e836fa7b44ca2d5</anchor>
      <arglist>(snd_config_t *before, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_remove</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d69b003662e09e8206a7892e849d27</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2a006b942faa3335a958a7df7bcea17e</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete_compound_members</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaec120883e56ecb510e064151e0b11d51</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac570ecbaba611ccc12bc235a1f4d0181</anchor>
      <arglist>(snd_config_t **config, const char *id, snd_config_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga838fac581e115574acc3711cad9f5877</anchor>
      <arglist>(snd_config_t **config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2c27175c162fe5027e3f1b3d5420afbb</anchor>
      <arglist>(snd_config_t **config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f175813bfc2556bd08fd580f05d36e6</anchor>
      <arglist>(snd_config_t **config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6764115f489629be027b434c4e323cff</anchor>
      <arglist>(snd_config_t **config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gadbcce71d8d3a78709fc2a78d6f543584</anchor>
      <arglist>(snd_config_t **config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_compound</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2ce24133c1d6828e2afe366284c61e01</anchor>
      <arglist>(snd_config_t **config, const char *id, int join)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafeb0552cbed09a3badbb5e74c7a7973d</anchor>
      <arglist>(snd_config_t **config, const char *id, const long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga04cfbfda89dc17c19a5a4076271a4d07</anchor>
      <arglist>(snd_config_t **config, const char *id, const long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga968e5bb773dfea922b5272636b26e9c2</anchor>
      <arglist>(snd_config_t **config, const char *id, const double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa83035f79027a464bf9d5d31e0a20547</anchor>
      <arglist>(snd_config_t **config, const char *id, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac7c6ce28a676169fff594aa4222705b2</anchor>
      <arglist>(snd_config_t **config, const char *id, const void *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6fd3be48221cae9cee9c7245a0804d73</anchor>
      <arglist>(snd_config_t *config, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafdb63c78c07e11194a28d591b0fbffc4</anchor>
      <arglist>(snd_config_t *config, long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga46c71d5d36c64f0a06ceae956a39fedc</anchor>
      <arglist>(snd_config_t *config, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga0f76f8ad47dce7f90580c8d59c6e44f8</anchor>
      <arglist>(snd_config_t *config, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga037c3bf96326bb6f5dfd340475b34fbf</anchor>
      <arglist>(snd_config_t *config, const void *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac1810a11f576fe339074502f4fed4a91</anchor>
      <arglist>(snd_config_t *config, const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabfbc36060fd4f5d1d929938443f95559</anchor>
      <arglist>(const snd_config_t *config, long *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf4d9e68918f7d49d7b4b14ffbe94afc1</anchor>
      <arglist>(const snd_config_t *config, long long *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d23c0bf941527d80aeb6f991bf88c9</anchor>
      <arglist>(const snd_config_t *config, double *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ireal</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga79738baffa6fa7722b1027ab84ac61bb</anchor>
      <arglist>(const snd_config_t *config, double *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5ab99983d1d93ddbcde9bb69a1e4f9fb</anchor>
      <arglist>(const snd_config_t *config, const char **ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga54868e0fa30458ef1c259772a8e7c6d7</anchor>
      <arglist>(const snd_config_t *config, const void **ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa26f97e098a0dd2cd5e28299b6b6c132</anchor>
      <arglist>(const snd_config_t *config, char **ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_test_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaeec157fd161a138e402c9bd243bbd408</anchor>
      <arglist>(const snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_save</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafac08a29a1e04b03a22028a8c70f78bd</anchor>
      <arglist>(snd_config_t *config, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabafb8cac2181c4c1e34b99f54421d1c6</anchor>
      <arglist>(snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searcha</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>af0f5cf4dde9399e3aadc53b4ab1d5059</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searchv</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7b2f5723e44a1b69f2a8555d469803d1</anchor>
      <arglist>(snd_config_t *config, snd_config_t **result,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searchva</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a11646339b1555e9a36a3da3327a0bd6a</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, snd_config_t **result,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_alias</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a95836105fb9cdb3ff6fb674d3a297fdb</anchor>
      <arglist>(snd_config_t *config, const char *base, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_hooks</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>ad6a8a7b3b67b8f755ab60073bec5fd48</anchor>
      <arglist>(snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searcha_hooks</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a28f17e8e4133a46c4d366d1e234df974</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searchva_hooks</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a017faa0f6768a9481989b4f38d4514b1</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, snd_config_t **result,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_alias_hooks</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a1f86a23e559213fb07097637feeac70f</anchor>
      <arglist>(snd_config_t *config, const char *base, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_hook_load</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>a4008d77ad63047366463350b7726a5ec</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_hook_load_for_all_cards</name>
      <anchorfile>conf_8c.html</anchorfile>
      <anchor>ac64a8c73293ee35ed3f3958d47bdc721</anchor>
      <arglist>(snd_config_t *root, snd_config_t *config, snd_config_t **dst, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_r</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga06e80976c3c00fdc786f9b213e5c40f7</anchor>
      <arglist>(snd_config_t **_top, snd_config_update_t **_update, const char *cfgs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga41a3d2202cfb9016e33aa85ea70a4c9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga568fcf6f45808319725ac066714b25a8</anchor>
      <arglist>(snd_config_t **top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae8baa15082818d721607932bb99f318d</anchor>
      <arglist>(snd_config_t *cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_unref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac87538403cb6f8125468a1af56f42e33</anchor>
      <arglist>(snd_config_t *cfg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f781ac635a0233fb2f58766a83d65cd</anchor>
      <arglist>(snd_config_update_t *update)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free_global</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51dbc0ff1d9b34d753706d09d768116b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_first</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac8965466674c10b9a119d591ed484cef</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_next</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga10c27ddc83c78680d91a167dd2f0a3cb</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_end</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac08a30bc630481f69feb2170fed4afda</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_t *</type>
      <name>snd_config_iterator_entry</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa91fe1d926d88041ed516a6a7293f606</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_copy</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga30f30bd27d13fbb3527270b3fc9e1676</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_evaluate</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga1a51645a07e204d4e814d890452da558</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_expand</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7759f41c3757ce72ee9bd118976071c2</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, const char *args, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_definition</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad7c23084ee4052ad33d77db6278db46f</anchor>
      <arglist>(snd_config_t *config, const char *base, const char *name, snd_config_t **result)</arglist>
    </member>
    <member kind="variable">
      <type>snd_config_t *</type>
      <name>snd_config</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6cf7955d3a072d354dab4d7b536c7831</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>confmisc.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>confmisc_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga11dfab861b537b564f0c76d9b1eb2935</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae5d80ee31e779992fd14672fd850a3d1</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5759c972706da4bd3be35c9336568bfd</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaaf1c1ea4801961e3107ca23ba89bd429</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_getenv</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a033eab97ee6619aeb8c5eca585acf6c0</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_igetenv</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a121864fba02478b9f605be44c97f5dc8</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_concat</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a43a3685d5e397fdc0e46af6d7b121616</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_iadd</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a4e7acbc261ca8b6bf4602753ea5c17fe</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_imul</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a12f4b8b67e0976a260859edb929f4d36</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_datadir</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>aa24c85e86b4c1f6c4d2d440e4782d098</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_private_string</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>af14b528e2502f2037294301473389948</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_private_card_driver</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a7bc4fec8cb3499997934a00210d34fe7</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_card_inum</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a023f9fd40df7c2c428a457b6ec7f8004</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_card_driver</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a2d147e387821449a8927d60ef4f8ff16</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_card_id</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a9ccfc361f1bc1d81837335de02707ee8</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_card_name</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>aba1ae0185e2d3e9b50291b40e7048181</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_func_refer</name>
      <anchorfile>confmisc_8c.html</anchorfile>
      <anchor>a8d91af8387a708c526bac3ee2c7ea10e</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cards.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>cards_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_card_load</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabb7a76fa905fbae6481f78d1eea4feb1</anchor>
      <arglist>(int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_next</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6fccc8a2d7d5ebd072a552a05855c145</anchor>
      <arglist>(int *rcard)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1881c5c04a532f5b9397745731ce7730</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad48d44da8e3bfe150e928267008b8ff5</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga547dcead4a72f24db4a0f9f530f75228</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>control.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>control_8c.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga202bfd5f82126770a2a7f79fe75501b9</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_type_t</type>
      <name>snd_ctl_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gafc6b41bf8de224f7b961cff768e41cc5</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_close</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8510057afd178d7206221d85440ba5f</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_nonblock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0898e6fe7a63a1c301794357a160587b</anchor>
      <arglist>(snd_ctl_t *ctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad7761be890b679d7e7bb3a3e4453818b</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaae9e775c251024e253a4314b76c3c1f8</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_revents</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab4f2ac44c01f4ec3c02dca1945bf9155</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_subscribe_events</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab56450393817e8ee1959fc4bcf5d2d15</anchor>
      <arglist>(snd_ctl_t *ctl, int subscribe)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa78539d04df0f1642d00c07a86d0fe8</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_card_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab631f366b743f5afa0bb0344b42aad4b</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa41caec9e14ea618fecfacfe68f1f7d7</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc94fec73b3b56f87872e8fec0c3e9f1</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long min, long max, long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer64_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ab4992e6c9506bc8b8c0581808c2324</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long long min, long long max, long long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_boolean_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaff7e95b329528fac338d13f428bec02c</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_enumerated_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9e9bf31020e6c2e7185612785eca6098</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, unsigned int items, const char *const labels[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_bytes_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf725d3e3411b236e5434150268c80294</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9f6228c0d0bc751596cc04c6dcd00083</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int member_count, long min, long max, long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa9ff49156010b3931cd3d163e62cc43f</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int member_count, long long min, long long max, long long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5f640f1d836b532b1c18d7604a90bad</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga273d2d5c44e97d045c48dbaa734ae23e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int member_count, unsigned int items, const char *const labels[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5511e7e65b773abf8eb8413ddb701f3e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_remove</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga715d20513768cf33f10a0f9340b7baab</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6577ee280d090136288fc5dd734867b9</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac98376a37556e0d878b6aa43e7e64e27</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f9ce14ec4227de4f3a6b573f069481</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa2c2da0a41904db5809dd4eade24c9c</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_command</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34d5e31c5ff25ab780893ab7534ab2d2</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_lock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1fba1f7e08ab11505a617af5d54f4580</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_unlock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8b3191516b8b7debeb57192b71abf66</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_hwdep_next_device</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>aa27200e7fb2c0013d7b7d9c2a942eb3b</anchor>
      <arglist>(snd_ctl_t *ctl, int *device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_hwdep_info</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>a4bdf7f755ae5352c93d2241687a9e544</anchor>
      <arglist>(snd_ctl_t *ctl, snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_pcm_next_device</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>accbb0be6e5ca7361ffec0ea304ed1b05</anchor>
      <arglist>(snd_ctl_t *ctl, int *device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_pcm_info</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>ac5a9750f9ba7749efddb0d92747255c8</anchor>
      <arglist>(snd_ctl_t *ctl, snd_pcm_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_pcm_prefer_subdevice</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>a03a8839d6459a79c2a9a6e0351e51d80</anchor>
      <arglist>(snd_ctl_t *ctl, int subdev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_rawmidi_next_device</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>a36b0951f536cf03aa3c0b9155f9c48de</anchor>
      <arglist>(snd_ctl_t *ctl, int *device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_rawmidi_info</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>a6079ffd382a7bb34617d8a0b24d7658c</anchor>
      <arglist>(snd_ctl_t *ctl, snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_rawmidi_prefer_subdevice</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>ade7782a3115d99142219bf562731e5d3</anchor>
      <arglist>(snd_ctl_t *ctl, int subdev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_set_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11ec9933829235513853f89bffdfd4e1</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae554fc52f0371161471520aa60e970c6</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int *state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga392a8f4afa2ba60e0ce6817f2a4f5e74</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_event_t *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_wait</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7df5807d1853b39781078793afa7b895</anchor>
      <arglist>(snd_ctl_t *ctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_ctl_handler</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga23813430fb81fecb0e95d1dfd688337d</anchor>
      <arglist>(snd_async_handler_t **handler, snd_ctl_t *ctl, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_async_handler_get_ctl</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa693260ccd944d874229257e54dee404</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga58537f5b74c9c1f51699f9908a0d7f56</anchor>
      <arglist>(snd_ctl_t **ctlp, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_lconf</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4a49cc71db1a7021be6ad880fcdbe4c9</anchor>
      <arglist>(snd_ctl_t **ctlp, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_fallback</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga016fcf47dc9c17c06d6e0846ac0bba17</anchor>
      <arglist>(snd_ctl_t **ctlp, snd_config_t *root, const char *name, const char *orig_name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaca10189720995695e836e7bf39cce570</anchor>
      <arglist>(snd_ctl_elem_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_iface_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6e85042ad0ecb60292c3d06cfe7b2a5e</anchor>
      <arglist>(snd_ctl_elem_iface_t iface)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab06ee7470afa8d6ae55296d19bff1455</anchor>
      <arglist>(snd_ctl_event_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_alloc_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga504ad392b797b7f5277cd184aee96e66</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int entries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e8106e3e2f64d84d1c03ffe36bed388</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_mask</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1a71c2546aef7d240185fd203240d890</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_elem_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga84bad7e515406d566484e4faaa41962b</anchor>
      <arglist>(const snd_ctl_event_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae1ecf3bdec2397722eaebbb2730de9d4</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_event_elem_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaed43a3e150a98463b99993c8a4646595</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf96e6732e7d7d7d95e868518b7c47316</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa0de2acc99d1aa07aff9e0542134a9c</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_elem_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga79ef06a1957ccd0b784e1153e23ce25f</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae69f9ba6fd89ac22af2421b801e69bbd</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_id_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7047bf3d0336f2ed1bc876e512bfef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_id_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa261f3721050a0ad4a43f28bcd6b082d</anchor>
      <arglist>(snd_ctl_elem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0bb98b09bc352074219a7866d20f5816</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad21c1d92e9f82b41330dba1146c88734</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga411575334b5f4d6602206df72c6ac01a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const snd_ctl_elem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga543f3de35c42f53f2ec2d24217fd4a43</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_id_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6932a5e3485140cd120dd8a9be8e6770</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54c863a0cdc7c501b3e1d520137cfc69</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5f3bb5a80842261a07c4ed99b05921b8</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_id_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa6cfea3ac963bfdaeb8189e03e927a76</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaebca4d84c661a50504b01b847f89289e</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga212d5ffe15e223dee2ebc58e3d57a7cd</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga33855eaf0261c321cbf0a88baf290418</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2c893cc444dbc0e4293e3a6fec7b27a8</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8eb060cb64d7cce2c82d04560bf675eb</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga813d02a44a9d01a4a2fe81eda7a8670a</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga65af30a51becd092f6da1e357fc46094</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_card_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5cfad24c04eb3576a1945757ff420944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga518166f64f41361629ee7bfe0caca9fc</anchor>
      <arglist>(snd_ctl_card_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga62360e5fdd3c5644ca7e260099fba67e</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3a4851500ca8a98927b16b772cda8787</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac2afd00836fb59d31cf759a8e48a622e</anchor>
      <arglist>(snd_ctl_card_info_t *dst, const snd_ctl_card_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_get_card</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga14863e13659cd0a02d3716923512dd85</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaadadbd2d4aef000a30ec4c1c949326cc</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_driver</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4abf685f77a8fa8dd14232397cab6f71</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae71617c9deadee635b0ad38ca9aaf746</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54a54f4b1cc3740eafba54b1cc1b8111</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_mixername</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae2a4719572de955480043dd34840579b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_components</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2181aa6bf919fd1342b259d2f3af755b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_event_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f526a146d913e36802b6c4a0daf86b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_event_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b38df9f5233dd8290a80682011f7907</anchor>
      <arglist>(snd_ctl_event_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga63ff10dda4a7e6b4055a0f3438c7781f</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga784c560c92df4179019bb3a29e1a4791</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d8375f54af11001b829f1e3054eccef</anchor>
      <arglist>(snd_ctl_event_t *dst, const snd_ctl_event_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_event_type_t</type>
      <name>snd_ctl_event_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2a7d413bb515e07dc4f933aa187324d9</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_list_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6a2a5b5258da9959ddbcacf94a0619f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab57f2acf2e5abdc9c46c19fe2bad9397</anchor>
      <arglist>(snd_ctl_elem_list_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9141e579ac00e56fa01af4cd710acef5</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0aac385223908ae12a8d2f68d6105990</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab945b6a9107a41d5cca414098711511e</anchor>
      <arglist>(snd_ctl_elem_list_t *dst, const snd_ctl_elem_list_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_set_offset</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gadc7b2d590c27c684ad2a076f11a8b31f</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_used</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2462c05a56bab424686f3d442ba8820f</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a1206d8f19aa67a32577f523ee92c12</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga73fe33f4f45b80d36137dd1371e34ea1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ee1e4b5b790f08bdcc78f3a2685aa5e</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_list_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga72a7235ee8e366a4b8e7c63b0189f512</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae906aa0c657dd15300ab451436a318b1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga809aec8df62a6cc5a289829e4171f5b3</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_list_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga819a69351b60fd868a09ae41323deb22</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d2c5fea3dcdc132d40dce39e9ca9f00</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0758621321c3b86a5bcb542b8b931236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54387df99f25dc01635568fbc6bf6ad0</anchor>
      <arglist>(snd_ctl_elem_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c55080b76401a03eede7d92e4e1cc4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4b7173cf1df342a66dbc44dc9ebd07ec</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga763d0832ab8b9096e96f5a15021f73d8</anchor>
      <arglist>(snd_ctl_elem_info_t *dst, const snd_ctl_elem_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_type_t</type>
      <name>snd_ctl_elem_info_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0fec5d22ee58d04f14b59f405adc595e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe355f33a84b3c3d18b3c72f5981dc6e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3289cc7acb4fc4de184cd67c295f1866</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_volatile</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d191b706824318c943a6b172a7531fd</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_inactive</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga387a4cb6a4d80b3ca2b4d734368eb219</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_locked</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d37f2ff9ff7b1b367b7d804f7b2b7ad</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d40439e43a49e1ac6c694b7b617329c</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_user</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34dc2e7013fe367a5acac79a1a13a814</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaac6bb412e5a9fffb5509e98a10de45b5</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacfbaae80d710b6feac682f8ba10a0341</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_commandable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7625ff65bed60802f15bf143de4860a6</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_indirect</name>
      <anchorfile>control_8c.html</anchorfile>
      <anchor>a39ff68c325c33f1124b9faa7d7b74e57</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>snd_ctl_elem_info_get_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga934e489d5d48a24575a425d64e0f2db0</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa75a20d4190d324bcda5fd6659a4b377</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_min</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac8bcc954ddaae99174f97adc6116a6a1</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_max</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d9da5653ce5d149e1b9ed0b26eaae22</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_step</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga871c7c81aae5c41c2368a85c1ca1f407</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_min64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5e6bb136caa4d8c9a43e8d8f8e310893</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_max64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e74e6ecf31560bd4c4b85464f7ba54b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_step64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga35177e37f86eeb8c9fe31c3a8438c9ce</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_items</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe5a218f256ac95ec295a175ec544453</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_item</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3cc2ead5a5628661976507fed4c38182</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_item_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf54afbedeb76d572bd6c6d064ce4b51b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimensions</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga163546600efa29d822a4567706a8443a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga221900fb2b2c68e8cefda697874b83ba</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_set_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf2af53f06728255d07a1456fe51303c7</anchor>
      <arglist>(snd_ctl_elem_info_t *info, const int dimension[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4bf366ee3700fdc6073dae01724c2119</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0875375abf0477b84b6022faaa683f4</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_info_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0de27f217d38543ce1b2d5902766a46</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344f683cf6fac46e0ce8fbdf45ada99a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae53373c67b013e3473caad0258c3bdc3</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3af223c6ba6185a7326f852390697914</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d0d01aca3e2c61ca7cd7baa295d0ee</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8aa6f699266b217b21c75b04dbdbe2b3</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga13dcca5b02535c50c3f5efa2bc03c736</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d7a2129b74609a8865e835e154d454</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga87d5d9c4fe092f02267e0b36397fac88</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab22e8223972fb7aa8a6e6abe49306b4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga40fffad33e859d27314dde76d9dffebb</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc80a95a945e31f3125a3ab4d908a464</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_value_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0514e7dde0594c4bd909e2306acb4bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34126639664d2c2d91a4b4bc6494a536</anchor>
      <arglist>(snd_ctl_elem_value_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaab6bfeb2206c9de88778890fe527cd53</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5dc3556ecf7f1b6b90a751f68e298aa8</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5631893dd087d73c223b7787222b7f9b</anchor>
      <arglist>(snd_ctl_elem_value_t *dst, const snd_ctl_elem_value_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_compare</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5ee4dee86e48095a8eb74379c933350</anchor>
      <arglist>(snd_ctl_elem_value_t *left, const snd_ctl_elem_value_t *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5c2ecc35d664aff974a244478496239</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4506b9e0ca143a5e78e755ee4e285fa9</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_value_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa3c2abb83ed61f20350d056615bda48d</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac1ec603a65de11b4661c04e6327f7647</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga81ad9e08fdd64b99dd6562b698ab7f85</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_value_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c39c251d773d70ee8da07af4f5bdf0c</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7bae3a71028550515183e945040069df</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab009ec5ba8cd90b434beb4294bff5d62</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8ade8618025754cd6b0baebd54bd5773</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga052fb24927d60936cabfb29303595790</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ff78ac05ab5efbe82f3eafe799e050d</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa49c82aaf7052043c69594e3c81204c5</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7cb4db71bdc890579aa8bddbc88be7df</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3b95f6d57955c7648e12023d53ce3faa</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_get_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa4409f368b375cb2ceb6d4108dcd2fc8</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_value_get_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88debd91f21f40b237d22d7255b4a5fe</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_value_get_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3f1d6202c02a34e973b87a2c580abcef</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7a9a86cb477166bc3922bd722afb296</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>snd_ctl_elem_value_get_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga594a9762366355ec131e9fda92243305</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa246c604f97c7a05d125314f0fa72946</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac022b948fe93bc744eb8b24839091b5b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaef406a6ab97925a9df646022800e815b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga89a5b646d118cd73e7ca7d861bb6de26</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a0d53d2dd752fb1aa39c97376d02547</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_set_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b78601c4c56ecb4a6e3556137d61af6</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, void *data, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_ctl_elem_value_get_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11729138fcecfb37f9b7c744c4743fba</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8970ed4dd76ece274e27f0b0429895c1</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_aes_iec958_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaefa891d2ff7ceb075aecfa8bd89fb340</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_aes_iec958_t *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>control_ext.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>control__ext_8c.html</filename>
    <includes id="control__external_8h" name="control_external.h" local="yes" imported="no">control_external.h</includes>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_create</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga317775f9c5e239781e71735ca5ba1ca6</anchor>
      <arglist>(snd_ctl_ext_t *ext, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_delete</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga33fadf68f6414722876f21201214f76e</anchor>
      <arglist>(snd_ctl_ext_t *ext)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hcontrol.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>hcontrol_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2a86455eaad4f2730a936d06c62cca29</anchor>
      <arglist>(snd_hctl_t **hctlp, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga48b556b219e99c36d65efc6b8a97029c</anchor>
      <arglist>(snd_hctl_t **hctlp, snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_close</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae9537f6a56d663aa9714ccc82689ff1e</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabd1208fbbe2061021494ea21ab382088</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_nonblock</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga3c3e66e230fc93c15f18568342725a43</anchor>
      <arglist>(snd_hctl_t *hctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_async</name>
      <anchorfile>hcontrol_8c.html</anchorfile>
      <anchor>af1ed472ec19ab7c21ec8a8f1af92b2e5</anchor>
      <arglist>(snd_hctl_t *hctl, int sig, pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga32238dba8935b2cb91fbad73aae9e3d4</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga7dd3894b55740cbdb8b2a0bef15af295</anchor>
      <arglist>(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_revents</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga704fd06286869e793e223956b186bfdf</anchor>
      <arglist>(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_free</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga1b3e936bba7a6127459af1244c7da454</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_set_compare</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga5917b8cbcdf5d44d8730027b18ff6172</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_compare_t compare)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_compare_fast</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa17b28ebe0f1e0e4443182312af7408</anchor>
      <arglist>(const snd_hctl_elem_t *c1, const snd_hctl_elem_t *c2)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_first_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa68ce403d30e4d152fe4ce82b6c02db</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_last_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga8b7270503d275040a391e05c991ec569</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_next</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaf7c6b19c5feb2392f2d447bc3f54fd15</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_prev</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga89a720775cb955ee4069a45074e4b32f</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_find_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaeee7f3f76cb71fd4b3456a9566529bd5</anchor>
      <arglist>(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_load</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga700017b7d9b8decb775702d5dc6fef85</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga9c0abde0c53cafb640bbd6e3b1c3d6c6</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_callback_t callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae678856658731969c884a4c9c810d799</anchor>
      <arglist>(snd_hctl_t *hctl, void *callback_private)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga60c1606f4d423301355344e5373d5ccc</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_get_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga098944f4f2d7722550901bf6f80ee91c</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_wait</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2f0d0548f5d848b6557b2967d0e73494</anchor>
      <arglist>(snd_hctl_t *hctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_hctl_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga93f19c0fb16337f72b6c413512b79f1a</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_handle_events</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga02d9dc1cdbdfe11880e3fe774f2034bd</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_info</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae08b50b118461e6fcc55975e5530885c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga86728d69cc5de843ed46ffb4f3b98e2c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gafaf6b88337fdc827c847e21a6fd0cd79</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga45fc0e8b3dfaeb2dfebce4f613b21297</anchor>
      <arglist>(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab5611090cee93ace74db2e744718ae25</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_command</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaedec51e102fbf6161322553355439121</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_t *</type>
      <name>snd_hctl_elem_get_hctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga98660b650e7c060be8a574402e2f2257</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_get_id</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac1c0ce6f627f2f1560c5db03a93caf5b</anchor>
      <arglist>(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_numid</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae5e86d487c6c964be8a59dfeddb2f36e</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_hctl_elem_get_interface</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabe8c46cbe8b6a2612fa0eaeb1fa8fefb</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_device</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae933e61025507ee572408138e935c63f</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_subdevice</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga894c09354156fd12f8a089726449f6ac</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_elem_get_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab89b9d62f8575795fc52b86415373a49</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_index</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa2bad4d08aa1c8ea98f2a92435583e01</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gacc10c18b636db3388e9b6383058fc757</anchor>
      <arglist>(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa9d511449fc220d09e69a05ae65f1ead</anchor>
      <arglist>(snd_hctl_elem_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_elem_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac0aad0000d7eccde5d107b1b95f429e6</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>namehint.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>namehint_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_device_name_free_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad4cacf29df4616c2458fc84c1fde708c</anchor>
      <arglist>(void **hints)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_device_name_get_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8546500ca828392f03f5bba2e7813874</anchor>
      <arglist>(const void *hint, const char *id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>setup.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>setup_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_install</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga869e7add884017e9b18cebb9b9eb897a</anchor>
      <arglist>(snd_sctl_t *h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_remove</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga11ed2053b547dc1f86bbd4f526e4ba30</anchor>
      <arglist>(snd_sctl_t *h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_build</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga4bb43af9b662b97c70322fb2d9d8ff9d</anchor>
      <arglist>(snd_sctl_t **sctl, snd_ctl_t *handle, snd_config_t *conf, snd_config_t *private_data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_free</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>gad8e6a8c5d08fd8a7ddfcd55144dbd9ce</anchor>
      <arglist>(snd_sctl_t *sctl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tlv.c</name>
    <path>alsa-lib-1.2.2/src/control/</path>
    <filename>tlv_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_parse_dB_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4fa0bc99458acc08a2c59e6ed84bc94e</anchor>
      <arglist>(unsigned int *tlv, unsigned int tlv_size, unsigned int **db_tlvp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad1feefed923fc08f309c4fec2b0973e2</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga625c16724bddbb21b18ae3b2cbaefcda</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0ef60f47c8c82dd84816ae66346359a6</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long db_gain, long *value, int xdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ebf9a5917cdc2fee40245cdbc83a0c1</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab44202cf8247874df15212d684a2b6ee</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344c48d48be3f61d08ce911c462a3bf4</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long db_gain, long *value, int xdir)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dlmisc.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>dlmisc_8c.html</filename>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlopen</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga8d048fb538f1487e030396866c0374dd</anchor>
      <arglist>(const char *name, int mode, char *errbuf, size_t errbuflen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_dlclose</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga7cc0866a9d1fbce4e34a8b342674836e</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlsym</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gae865f293c8771998b2b6a9f25a135408</anchor>
      <arglist>(void *handle, const char *name, const char *version)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>error_8c.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_strerror</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga182bbadf2349e11602bc531e8cf22f7e</anchor>
      <arglist>(int errnum)</arglist>
    </member>
    <member kind="function">
      <type>snd_local_error_handler_t</type>
      <name>snd_lib_error_set_local</name>
      <anchorfile>error_8c.html</anchorfile>
      <anchor>a88c091aae3b291d5097078dd39f42408</anchor>
      <arglist>(snd_local_error_handler_t func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_lib_error_set_handler</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga6ba1f0aa6c6bc5d335ab297d6019cb03</anchor>
      <arglist>(snd_lib_error_handler_t handler)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_asoundlib_version</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1b8d6e2acb0a62de5c23bd8aef3ec225</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_strlcpy</name>
      <anchorfile>error_8c.html</anchorfile>
      <anchor>aec9e1a9ffe41c0221512580ef056cc11</anchor>
      <arglist>(char *dst, const char *src, size_t size)</arglist>
    </member>
    <member kind="variable">
      <type>snd_lib_error_handler_t</type>
      <name>snd_lib_error</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gad6a605072dcc056de5f86d67687d90a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_lib_error_handler_t</type>
      <name>snd_err_msg</name>
      <anchorfile>error_8c.html</anchorfile>
      <anchor>a9bea29fb70a0932bd17f91b47926dfbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hwdep.c</name>
    <path>alsa-lib-1.2.2/src/hwdep/</path>
    <filename>hwdep_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_open</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaade8a9030fadb398fdb6d139f360f07e</anchor>
      <arglist>(snd_hwdep_t **hwdep, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_open_lconf</name>
      <anchorfile>hwdep_8c.html</anchorfile>
      <anchor>a162c6ca2e4c9f9dc6dd65a987ca6b118</anchor>
      <arglist>(snd_hwdep_t **hwdep, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_close</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga35ba1e894c069b37012604abf1432314</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_name</name>
      <anchorfile>hwdep_8c.html</anchorfile>
      <anchor>a26ee56a9b3711414ce6687e8dc0ea646</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>snd_hwdep_type_t</type>
      <name>snd_hwdep_type</name>
      <anchorfile>hwdep_8c.html</anchorfile>
      <anchor>a4f94fc58c4ee20fd845eb11df435107a</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_count</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc4e48e9d9fa90fb5e35b3502cfe6f7f</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga179b89384deb4c5a76b7017e6ba6af88</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_revents</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga654b2c89f1e6bc16e590161340f1e3d9</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_nonblock</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6eaa5f13367625587fdd955fb4cb4c51</anchor>
      <arglist>(snd_hwdep_t *hwdep, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_info_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gad39906514d5d04b7ebcc190382b8bd27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6831cd666bea427ab3779710e90a857</anchor>
      <arglist>(snd_hwdep_info_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga9e19ef5118f808962689c3d947af1a00</anchor>
      <arglist>(snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3132936fc99968e59df02711d2927018</anchor>
      <arglist>(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_get_card</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga04193d4395908c0e31ac826ac05d3824</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_info_get_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga23deebecc5e88b0124222ebf73999c24</anchor>
      <arglist>(const snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga80bb1ca217fa051086e7f2ab5821ee34</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf7f6251acc0f26d6fefc2c28fcf90c6a</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_hwdep_iface_t</type>
      <name>snd_hwdep_info_get_iface</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7d846bea699c0917f54d75fe5d76a58e</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_set_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga5f497ef1c3a675af203923d93eda4202</anchor>
      <arglist>(snd_hwdep_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga97f208875f4ec6a253f088e3c2c084c1</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_ioctl</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga74f5260b0f5f779932bfe7afcf68ecb1</anchor>
      <arglist>(snd_hwdep_t *hwdep, unsigned int request, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_write</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4c158ce0db68b8bfac1a00abe5e2ffcd</anchor>
      <arglist>(snd_hwdep_t *hwdep, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_read</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7ef0c6e7ae7b838d509dd09b800b321f</anchor>
      <arglist>(snd_hwdep_t *hwdep, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf071b6171019a11a72367cc7f9613f5d</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_load</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7316c8ce8d4ba06b58e6536e3cf96223</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_status_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga54205faff69bdd35b996863094bafada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga444c5bd71b0a3756084450dfb7528c6d</anchor>
      <arglist>(snd_hwdep_dsp_status_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaa7d3a0f8f01805b10342581893e9671e</anchor>
      <arglist>(snd_hwdep_dsp_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc06c08ac09beec6b50fddf5496ce25b</anchor>
      <arglist>(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_version</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga52f6b403c2a4947c647043fdd7c5dbf7</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_status_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3f62477a689ef9e84048f7ba8e33a792</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_num_dsps</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gac49bce861455b700ba79c3eb9f73aae9</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_dsp_loaded</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6c5e57aaf95a248814897bd80e12edf4</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_chip_ready</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf49d8044583b6f0c890bbb6a493734e8</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga8a5e773b145d973ea5c75057974a371d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_image_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacf44ffc69400d7d195809c18cb71f89d</anchor>
      <arglist>(snd_hwdep_dsp_image_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga95c9c00e3b9b20ba6a92ac9d14c5cfdd</anchor>
      <arglist>(snd_hwdep_dsp_image_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4178c718645804dffde98bf210e447b5</anchor>
      <arglist>(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_image_get_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gada5fa0eaa5a4a941dc5b79ae1897db76</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_image_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga025e4656f44f73d8c372b8b10285f202</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_get_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf6087e4530245055c8cceaa74df629aa</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_hwdep_dsp_image_get_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga330539511a4fe2936351b34a26cf96ff</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6e93c88a4595ac0915211dca5f46ab72</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6529c1bf1aba5bf2abdbbf157a4e9e0</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6de5750e29632c68af2648dcb11a1429</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3da9921e2aab7ab9ed91a39c4f3f6a0f</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, void *image)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>input.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>input_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_input_close</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga4c86d6c288e2b1be3fe2efca6859cdd6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_scanf</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga079ba3d8ad9cfba4003c28520c2f8121</anchor>
      <arglist>(snd_input_t *input, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_input_gets</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabc17742247f4733f1891c2caec453988</anchor>
      <arglist>(snd_input_t *input, char *str, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_getc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gafb9476884661a2d685e59e58740cc9e6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_ungetc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gad665d319d2d0a4127110c141ef99a02b</anchor>
      <arglist>(snd_input_t *input, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_attach</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga70e6704164f80072bfa118160ff81d54</anchor>
      <arglist>(snd_input_t **inputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga68ff91aaa391b39f5a3082e202fdd2ff</anchor>
      <arglist>(snd_input_t **inputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_buffer_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga3c7947884b1caf50117bcecd23a3cc22</anchor>
      <arglist>(snd_input_t **inputp, const char *buf, ssize_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mixer.c</name>
    <path>alsa-lib-1.2.2/src/mixer/</path>
    <filename>mixer_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_open</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga240cfebce7d68f22875d76e99cf19394</anchor>
      <arglist>(snd_mixer_t **mixerp, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabe7f0255c9a981a6c73a8edf359781cc</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga7413e8f80e2e556c75c6b9fc7d0598f9</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_empty</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0541b86ecfc094a172b4cd29bb70fd0</anchor>
      <arglist>(snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga8c36e99e3d2ab0cb76a5acd203face45</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e5feeb925addfc245ce81c037b1397</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga99ca1c15d46d5f194a216d5e0a8e9229</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga63b6f8183e08a2b3e6bb83638828e8df</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_get_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafbbaedd662ea57e573e09f39ca8b247c</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4cfddf235c06ae83765ecfd45c5a95d0</anchor>
      <arglist>(const snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_new</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga226cf962e72b6132fd61cbd434b28941</anchor>
      <arglist>(snd_mixer_elem_t **elem, snd_mixer_elem_type_t type, int compare_weight, void *private_data, void(*private_free)(snd_mixer_elem_t *elem))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_add</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3b0e73914256f2125d2b7bb48d602457</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_class_t *class)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_remove</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gacad36ead935e96f75fe44cf8dd4afa2a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga40d8bf56621085d5ed5a7e92ad067e03</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_info</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae4a32f9d571201a2bf33a65340dc9afd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_value</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga0d23278769e37532f810cecf2ffffacb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_register</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga595cbd9394f85f9af4a6b30e748e3930</anchor>
      <arglist>(snd_mixer_class_t *class, snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_unregister</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga6a7bf3805fbbfc3f6f8243e91fbce5f6</anchor>
      <arglist>(snd_mixer_class_t *class)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_load</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga24b6077528d04cb9fca072b3ae109aef</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga93a71c28e82c04e4c732703e309910fd</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_close</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9deea3f628bf737001d968620cfd3b1a</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gac7e1bbe5d5b69a6ee67d5bced6325a67</anchor>
      <arglist>(snd_mixer_t *mixer, snd_mixer_compare_t compare)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab3ee14782a19e6d62acbdcdb5f9f7786</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07f7bc33587907988aaffc03ce72367e</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_revents</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab26686311756ee3c66e05766227df818</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_wait</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga072846849f4bc2058336fd6601f18a15</anchor>
      <arglist>(snd_mixer_t *mixer, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_first_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaffccf51ddf8ecdc357b216cb979a2318</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_last_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga51121b263ea3d3ee9367aabfd338ef11</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_next</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga68254228ef108122b8178087ea0fcc16</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_prev</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaaf9a9dfe1d52f40df2be517621f9474a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_handle_events</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0cfb6b50ec2493281107b0649f87cb8</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga691a593ea0a32f9535fff83b00a0a574</anchor>
      <arglist>(snd_mixer_t *obj, snd_mixer_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab91fc99ac65c866e660d4d8be0cb3e17</anchor>
      <arglist>(snd_mixer_t *mixer, void *val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9cfc303fa34eb234efeb52151838f88b</anchor>
      <arglist>(const snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_get_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3447c190c69cfce4c52df4ad3300e319</anchor>
      <arglist>(const snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e1fd766a313ce513f561bd03c98317</anchor>
      <arglist>(snd_mixer_elem_t *mixer, snd_mixer_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4fb4ea11326c1cb1fdbf5dac0444507e</anchor>
      <arglist>(snd_mixer_elem_t *mixer, void *val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga78c51ad2e60617137e47ad1d58b45916</anchor>
      <arglist>(const snd_mixer_elem_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_type_t</type>
      <name>snd_mixer_elem_get_type</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga1083ba441bb93da13f79bc0cda226ea3</anchor>
      <arglist>(const snd_mixer_elem_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_class_sizeof</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaa61b83017a92b67ea27a18777dcd141d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_malloc</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gadc36fd49fdeccc37c41fc700d29adf39</anchor>
      <arglist>(snd_mixer_class_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafef7028555b5c50b9bb072ba6d441ddb</anchor>
      <arglist>(snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_copy</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabaaa35c5538fec113fffdaff4cbed2fc</anchor>
      <arglist>(snd_mixer_class_t *dst, const snd_mixer_class_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_t *</type>
      <name>snd_mixer_class_get_mixer</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07e5edf36e361b3c1293ed14d2ef5b76</anchor>
      <arglist>(const snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_event_t</type>
      <name>snd_mixer_class_get_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga5744823b495ae331e7dd60f2abdf3589</anchor>
      <arglist>(const snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_class_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga95b50447f32262756143cd7d9e76997c</anchor>
      <arglist>(const snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_compare_t</type>
      <name>snd_mixer_class_get_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad7182d1d18653709bf26fc53a8b1a94f</anchor>
      <arglist>(const snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad0162769035880347ea9af0dbc518e79</anchor>
      <arglist>(snd_mixer_class_t *obj, snd_mixer_event_t event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaf3b845bb0637fc59cacfe59ef29398d2</anchor>
      <arglist>(snd_mixer_class_t *obj, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafe066ab71d568f7a616a587da7e3c1a5</anchor>
      <arglist>(snd_mixer_class_t *obj, void(*private_free)(snd_mixer_class_t *))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab389fb10998a950207001e3f8abead26</anchor>
      <arglist>(snd_mixer_class_t *obj, snd_mixer_compare_t compare)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simple.c</name>
    <path>alsa-lib-1.2.2/src/mixer/</path>
    <filename>simple_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_register</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadd686db0b7d2bba9a88112b732b147d0</anchor>
      <arglist>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_find_selem</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad9b0c9a6d7956f95132aa42857d962cb</anchor>
      <arglist>(snd_mixer_t *mixer, const snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_get_id</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02aba43d5ae75392b6344c7f8f92fe72</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga51329fb3fea12d50209fcf8ebf542492</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga11a14cd0d589033d49647d27e12b9cc1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga08c4099ef62508d5ae7f13bd6affd5a5</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga468e0188282093c377776683bcea20d4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_channel_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga37ae8c6874d975efa83a9074a28113b9</anchor>
      <arglist>(snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_active</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga41eb6c6d7a237dc617115ba4ba91ffbd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_playback_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacdc9e474bb45ca6759a2f9ea878bc1a4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga621b34fc2c4f47a28fb9b34a3dd820e7</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga09557e90c11fbd37aeed30938338698b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad874cffabe541956b610858bcb38ba59</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf4b095372a07bcdf769d74fa73c803d5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga17468934f36929ae2f7af4850f40f851</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf39321d4b7bb2efac3a3af357e42c6eb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga4efd34d5ccb384e8db4291bd3aad0760</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga162fa35b3cc76e67c14482a2f6b734c1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac8e2c7d0555f58ec790443da87ecbae3</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3bf17ce7cb933fa69973cb69ca079f13</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga12f6f4124bf45db95f965298c2f318bb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6b5799e7971688e1f2e9ccf977c8a887</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga55a4f32e711efe4ef09cf041d9fc27f0</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1e4556740beefc8bed40677a316e60ac</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8bfb52575e4bb06deb30799bc39c0768</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2567351a2a7a70e6dda81f5ccc38d04b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga555df8c54f170ebe7f389eb7a8d04cc9</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1a9b7c48b94d8cbeffc6847f3b884dcc</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaa3e28640247b4eef389269b92f5b4a9d</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_capture_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadc4c2179abd18d7c587cc199bb8e9273</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac05de257374bae60c03ba033344f811e</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga95e2624e7aaa7624e89121ce3f63b9dd</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga332241fcda7a9364b4d7830b592ba6a5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga608663233daecd6b373aba808f5fc427</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga095d73eab22ef19cabed8732ffc44a7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1646edce83681e786da2f1a6befaf113</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6761e23f215d3d048c729a22cfdd952a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga14a6a278ef91593d3c6fc53007627d25</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_exclusive</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1ad2e8afe6f5ad7857b0bdc70048d44d</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_group</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae75b0133e7beba016589259b30cf8e7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga87dcbf4b28ba67c8a07cdd79231b9942</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga40141aa00e0839bdfa8398b5aac1a0a6</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3b15557f590f136735a4abee96cf28fd</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga27bf2c4bd591bcf61b3fe20353bac8da</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga49f4c3b98ef2353cdaa582e5bf3417a1</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8aa6b212e1e092e5d67ff11070a433ad</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac1af2ccb94c19e7f616338791707c2eb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga0e6e40f799c9a4042444a4e26194d451</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga395321949ec6444ca4590f0ca3eac6b0</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3de8f16807b23cdf9399f86a5eb3a353</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad43024c7d21c38cde7b440cdc6a85c07</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enumerated</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab367abc11dae3681978c2f831afd1e37</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_playback</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaed68ad405d2c2e9447e2fa1d4f5d1107</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_capture</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga90c5c5c0428fd0d6722c5a84348a39b0</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_items</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab803bca4a9c322e1efe87950b62431b3</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacbae7ca76dc02dd172c80f8f704dd8c9</anchor>
      <arglist>(snd_mixer_elem_t *elem, unsigned int item, size_t maxlen, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6679dc52033e29b88da32f5bbd45f205</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int *itemp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadcba6291c0382676ee442311c0ff1a8f</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int item)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_selem_id_sizeof</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga29705a6b18fe910d2b7aeb98531d5056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_malloc</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac48d80bc60d03959c43a3ec6caca8498</anchor>
      <arglist>(snd_mixer_selem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_free</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2a6f790706e3ed64e1fb0f61177d13c5</anchor>
      <arglist>(snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_copy</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga089d6e51b1b92fb51ff2cb771071a169</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_id_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae54797dd9e4382d67718899047fa1087</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_id_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gabe5105469fa31b85a52253e709733638</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad127341c44087525e1c715044d7a3919</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02bf0b9758ed4146eec38cd964b7621d</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_parse</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga863202350cc4cb16661e7a5804b83298</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simple_abst.c</name>
    <path>alsa-lib-1.2.2/src/mixer/</path>
    <filename>simple__abst_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_simple_basic_register</name>
      <anchorfile>simple__abst_8c.html</anchorfile>
      <anchor>a0ecbecfc370c1b1f51b6974ba9ea476e</anchor>
      <arglist>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_sbasic_info</name>
      <anchorfile>simple__abst_8c.html</anchorfile>
      <anchor>a8ed53ea7af6c9f85a4f62a2b6c8ac0f4</anchor>
      <arglist>(const snd_mixer_class_t *class, sm_class_basic_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_sbasic_get_private</name>
      <anchorfile>simple__abst_8c.html</anchorfile>
      <anchor>a6209c5d7043b79e6edf5e34de424af6a</anchor>
      <arglist>(const snd_mixer_class_t *class)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_sbasic_set_private</name>
      <anchorfile>simple__abst_8c.html</anchorfile>
      <anchor>ad8502b9da0b3b6984c5c3f6d80eaad79</anchor>
      <arglist>(const snd_mixer_class_t *class, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_sbasic_set_private_free</name>
      <anchorfile>simple__abst_8c.html</anchorfile>
      <anchor>a0301b1c00c990dd2098bc1ea0b2bd26f</anchor>
      <arglist>(const snd_mixer_class_t *class, void(*private_free)(snd_mixer_class_t *class))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simple_none.c</name>
    <path>alsa-lib-1.2.2/src/mixer/</path>
    <filename>simple__none_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_simple_none_register</name>
      <anchorfile>simple__none_8c.html</anchorfile>
      <anchor>ac1d150f9377623f2745399a835334343</anchor>
      <arglist>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>names.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>names_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_names_list</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf35b51ab61fd7ea628ab088a1b444aa4</anchor>
      <arglist>(const char *iface, snd_devname_t **list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_names_list_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga665741321b3c1c3f07a6eeb969406cb8</anchor>
      <arglist>(snd_devname_t *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>output.c</name>
    <path>alsa-lib-1.2.2/src/</path>
    <filename>output_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_output_close</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gab4be4e572d2a0d0f2f46faf8d45aa35d</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_printf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga5dd8e7d3089a82d8449a9dff221caf1c</anchor>
      <arglist>(snd_output_t *output, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_vprintf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae01572ae47fd3ead25ffd6856118780f</anchor>
      <arglist>(snd_output_t *output, const char *format, va_list args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_puts</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaa370cff392c8fdaf03e08c667561d4ec</anchor>
      <arglist>(snd_output_t *output, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_putc</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga7b2b8c27042964a5b57acabe0af6e30b</anchor>
      <arglist>(snd_output_t *output, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_flush</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga9d188a05400c944bc1f70d757c179226</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_attach</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaca78d01bf6d081274650794861373c7d</anchor>
      <arglist>(snd_output_t **outputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae7b87e8cfcc2d46b124b2ad221ed6435</anchor>
      <arglist>(snd_output_t **outputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_output_buffer_string</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaae66e163bd719593b6787d922546a055</anchor>
      <arglist>(snd_output_t *output, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_buffer_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gafb4d1ae52ed7148b0abab0de3257fae1</anchor>
      <arglist>(snd_output_t **outputp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm_2pcm_8c.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5031edc0422df8db1f70af056a12dd77</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_type_t</type>
      <name>snd_pcm_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa7cf89c3f83d83aaa0248055a783b632</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_stream</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8eea4a021a114ecc3e8f6d80901faf46</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_close</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga042aba7262a4cbb4d444b6fc08cb7124</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_nonblock</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8d9ed4a62c17402de0389fd31fc7dc1f</anchor>
      <arglist>(snd_pcm_t *pcm, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gadd9467ca75884292234e4986b329a17f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf8cd01c4c6b79c4a45a2c816fb8fbc5f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1ca0dc120a484965e26cabf966502330</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_free</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga242ad0a269c272830d30666220edbc2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga891ccaeea2c685a533b61b5fa0493974</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga32891eaac37741728a9b23027012c892</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_state</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga87896f6f17020fc19835790369e7ce75</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hwsync</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3b71a41f6b300bf63ad374013f19d8d7</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga012e8b999070e72ab23514f25e7d6482</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_resume</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga13083ce2209aab9ea73831610bc61ab1</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_htimestamp</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3946abd34178b3de60fd5329b71c189b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_prepare</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga788d05de75f2d536f8443cb0306754d0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_reset</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga390e084f13d24244196aca64262ce3fc</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_start</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6bdb88b68a9d9e66015d770f600c6aea</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drop</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7000ca6010a1a2739daddff8e2fbb440</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drain</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga49afc5b8527f30c33fafa476533c9f86</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_pause</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad711b582c7066bd4fffa1d08a04316b5</anchor>
      <arglist>(snd_pcm_t *pcm, int enable)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewindable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0ea7a8aade4e6e76f2cdfd8c85f37bd0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewind</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6c66040dbe01797379436fdf36268fec</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forwardable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa2f506e03630a074130443d7b9c1a27e</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forward</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad0774fa8991248c6f1c264aaeb0b4207</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writei</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gabc748a500743713eafa960c7d104ca6f</anchor>
      <arglist>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writen</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae599772ce3d0aa6a70de143abcf145e7</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readi</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga4c2c7bd26cf221268d59dc3bbeb9c048</anchor>
      <arglist>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readn</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gafea175455f1a405f633a43484ded3d8a</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_link</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac6c33091b049985baa6466e8fe93917e</anchor>
      <arglist>(snd_pcm_t *pcm1, snd_pcm_t *pcm2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_unlink</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0d3af5e30593dae857b4308aab5035cd</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_count</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac7f4cdb1c930b8d343714f60afa02fc4</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga742e8705f6992fd0e36efc868e574f01</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_revents</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7e561f305702c6f52dab49b6c84f7df7</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_stream_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gafea7e7c65133faec1da1ef8b2d079578</anchor>
      <arglist>(const snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_access_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1406fe8388a612b8e44e5f3682d00e91</anchor>
      <arglist>(const snd_pcm_access_t acc)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga2ca258b8ac569ca35f283e48d2181e45</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gae201c92e3053c778bd7f2a4f5cc4d0e1</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_format_t</type>
      <name>snd_pcm_format_value</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga59f99dd9647315a7312d1f2b6204b7bc</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga81beb8c430d897208269bd67bb3309b5</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gaf4e162f7a059cbbf8c388cb9ed5e23fc</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_start_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92ee6cf89b3ed71d47b7051f92699045</anchor>
      <arglist>(snd_pcm_start_t mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_xrun_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gafd15306572f02e67354d65008e41dc8f</anchor>
      <arglist>(snd_pcm_xrun_t mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_tstamp_mode_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga9a27f18595344de572cce51c4e52ec4e</anchor>
      <arglist>(const snd_pcm_tstamp_t mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_tstamp_type_name</name>
      <anchorfile>pcm_2pcm_8c.html</anchorfile>
      <anchor>abdb272863f8a549fcba5f8f1d7d81372</anchor>
      <arglist>(snd_pcm_tstamp_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_state_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga16ea2b82b7ea8f8c7b21e81aa6d28f1f</anchor>
      <arglist>(const snd_pcm_state_t state)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_type_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1089d73f52de6e7b724f7453d6f48f36</anchor>
      <arglist>(snd_pcm_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_hw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga46dca88304617a198814f6cfc6ceafae</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_sw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga97b72a21c2bb1ae553fa909c3d42c294</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga3ac87790f8cb642e7afe4430e510572b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gaf2427b186609ad502666273342467a51</anchor>
      <arglist>(snd_pcm_status_t *status, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga9c5c879409c504e155e234905d031d8d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_bytes_to_frames</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaf42fb6af35d3d85006c1dea2e11b3e54</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_frames_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gac05ac2b7c6e25986a71792392ff90b83</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_pcm_bytes_to_samples</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaeed610ddb01120b01b5a2e5cc59aa35b</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_samples_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gae3669a4326ce185f4261d7bf96900f3f</anchor>
      <arglist>(snd_pcm_t *pcm, long samples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_pcm_handler</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5a0c0da6d0d35a3ac9f6a97567ac3b63</anchor>
      <arglist>(snd_async_handler_t **handler, snd_pcm_t *pcm, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_async_handler_get_pcm</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gace4920d5943820c395dab8d9cd4fed0a</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8340c7dc0ac37f37afe5e7c21d6c528b</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_lconf</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga88164d313d8ff9dc33c94815869cb677</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_fallback</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga189a69e31cec0aefa8c124764e99e0bf</anchor>
      <arglist>(snd_pcm_t **pcmp, snd_config_t *root, const char *name, const char *orig_name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_wait</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad4d53d58b996a7cd9a5cbf1710b90375</anchor>
      <arglist>(snd_pcm_t *pcm, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail_update</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8bb836bd0c414b59789d51a5f5379c08</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga577b4d51e08d94930a05bbe73291ed2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_avail_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga170bc44da2607b5583cff5ab5a985d98</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *availp, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga23e03a8b127764fff669240986b96b39</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga1c0aab2a2bb341f1b1d154dae2b7e482</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga93d2f045575afb161abff126c3750049</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_area, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_area, snd_pcm_uframes_t src_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gad57f8921f52ea2ffd870cafb2d076f2c</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy_wrap</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga38797de781a0e4041408c58d49463062</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, const snd_pcm_uframes_t dst_size, const snd_pcm_channel_area_t *src_channels, snd_pcm_uframes_t src_offset, const snd_pcm_uframes_t src_size, const unsigned int channels, snd_pcm_uframes_t frames, const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga10c221dcb86bcecd0d6fce4b1231cb49</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_mmap_sample_resolution</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga53b3b351bc5db48da18d5f36b98f79a9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_double</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bfe71142e72dffb274f8ba9ef7edeee</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_batch</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga366395c87f811d8ab8df83dc8a8a8124</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_block_transfer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac511eb0d4db6f1e8303161486061fe14</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_monotonic</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7a129f7671fee8c0ced42d64a6c2379d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_overrange</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacb214bcb2af7462195da73b060206800</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_pause</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad4ba98b2f66baa5360b9a85f064a3e9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_resume</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6b79539a34e6f51972f4c32b3296585a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_half_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabaf7b36cfb700973fe8d89971f0f967b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_joint_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae8768da025e34e3c3c6b5a5dfdcd2ad4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_sync_start</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafcea258e7d9b6094350699367f2ef9b5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_disable_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0f8922537619c70e41bf07eb740e54f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_wallclock_ts</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafd935dde74ea0da6824b204eb78eb620</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_ts_type</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2071d14dbb09232ecddf2e236bdfdf7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_numden</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga556ddf9731e184cb635994f739a6efe3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *rate_num, unsigned int *rate_den)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_sbits</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8bb1180b62a4225f0e094b95ac5d3674</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_fifo_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12fe3e1ca110fd61cff685890366c743</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_any</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e2dd8efbb7a4084bd05e6cc458d84f7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_access_mask_sizeof</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga963ead3f1169f4b5e03a2968adc9cb0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_malloc</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gafedd1f9c96aa8a93ab7f2c0135de3780</anchor>
      <arglist>(snd_pcm_access_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_free</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga965129493161fae3ab534209b7e6b2bc</anchor>
      <arglist>(snd_pcm_access_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_copy</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga4fc7338c7c0cd715ea384d4e308d5925</anchor>
      <arglist>(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_none</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gaa8202ce90275d6dfe2623cbacbc93708</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_any</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga76b2575826977951a862c5e78e81993c</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_test</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga381ade7f78d8614b38dde36ba0393f74</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_empty</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga224e84b7b1362aea503b0595512bac77</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_set</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gadc0a0f989a9faca8b25b2c35d4b14e14</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_reset</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga35c6aaf5b55ef8dd1c4939467869db86</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_format_mask_sizeof</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaf260158e21491d2dfff62aa2b2ff06d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_malloc</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gace20f58f4a93c39b006fd13bfd642da5</anchor>
      <arglist>(snd_pcm_format_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_free</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga3a8b2f75bcf9e2b33602297123a6f3b9</anchor>
      <arglist>(snd_pcm_format_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_copy</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga5fa45349fe88454faac051f476629174</anchor>
      <arglist>(snd_pcm_format_mask_t *dst, const snd_pcm_format_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_none</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga42342f7e5dd7c1c8401482d8db9c1013</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_any</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga56f394e000ea4aadf73d1fb97fd994cd</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_test</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaecb1d19be63a1b18456300eb4d07a8a0</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_empty</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaa942122189c757a1178749cebeb73d48</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_set</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga03fa8dcc8da3dbecc164143b43d40056</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_reset</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga60cdd13f69735c11cfaa0856b0f25a3e</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_subformat_mask_sizeof</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gaab4db5767975e4c4e7a54fe11450085e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_malloc</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga4a9eb9095b23b4e338aa390e515d5eb4</anchor>
      <arglist>(snd_pcm_subformat_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_free</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga1e0e09005efe4c7b34819defdb4d1308</anchor>
      <arglist>(snd_pcm_subformat_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_copy</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad5f8e09819ff0d6d4175d794670703af</anchor>
      <arglist>(snd_pcm_subformat_mask_t *dst, const snd_pcm_subformat_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_none</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga3b87315e56fed79bbf265790ff5f6e72</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_any</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad065ae392b7bdeb4b32708cc9909dac1</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_test</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga2070ce06de13f676eb925c28db92c8aa</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_empty</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga642323afb10ecd348ebf4eacb1cc0ec0</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_set</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gab5a57e4ba0d3747ebc5b959460c0037f</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_reset</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad1033cc4c9d843e516833c222f2a570a</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_hw_params_sizeof</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga092e6c110ad7b4e52855b9522e437ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_malloc</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e53d09a9c7cc3f2a692c0af99886237</anchor>
      <arglist>(snd_pcm_hw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_free</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8c094063e7a13be0b9a043be8616a181</anchor>
      <arglist>(snd_pcm_hw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_copy</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9bcedf4bb4b21527a584846a5986a1f4</anchor>
      <arglist>(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga752e62bb419c7ebe151f8023f5eed1f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_access_t *access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab56553ff541e6e9ddae397f6faba840f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4c8f1c632931923531ca68ee048a8de8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fd545bdf469d54cff6a038e31ce56ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga172b949e37f28da5a102e56b04f69be3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad54808a277db646cbc21be07efc31000</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga20079e218c9307e4e683f0743f3af38c</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga66b28dd4f26d603e923a3577d1a2e98f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga64e1a5143bbd72c8f5cffca828d506ef</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6014e0e1ec7934f8c745290e83e59199</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga762ee356cc687c81c206df3c18245e4a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4a643db96742a3da0287eda6cc3eafa2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33261bd41636eb28fd42493e4ea4efba</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga43bdf7596f8722fb6b8edbeaf1aebd90</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga77a934515c24e17cfb0af21a8b2e0690</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf5062e723956551092db201f34c99495</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga08dfde7d1fc6a0a56609f3ec40ed26e2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12b745bdf119127f2216d61a2bd28688</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab1a02fff3ef394da274d2b2652df856d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ebc4625b258df82164dc9220a9f9117</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaafee81722f5bcba41e16e4c7a77059c2</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae27e04757272070197e00c0dfec5dc97</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga93326349bbb91840a3e0bafef0390cb1</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac6c37a5da7dc8cb19fdd8e9cf1bd673d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8fabc38d770ad922e5b4e0338e7fb242</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3a5b2a05c5d9869cc743dac71c0d270a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga155b8ac646b90560cd00f195086ff464</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga739d51d0822f182a6583a5436f410b34</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga24e507c965aff4984aa4969cc896e830</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga59aa9e1a02f4ce616fe92c605a833f8f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae08e3371d3d2e8e512537630a59f9a55</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga54846380c1dc99ee9124d45232931ebd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4279c4b45a15f7e282e436e75d6ba13a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf7801fdf88fa51ca96fe97d3211db3f7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6770c2b988c8dc91eb51893cc145aa2c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5f09b37dd6f4c213029f8f39e00137a3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga29cd2571738847813af1489043d1af5a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga89374ae29dd924915ada6f26cd9a3292</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8701776750b18b2dad19a4115791c2f0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga03795a2ee03be25a30185b26a1bc3e21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga39124280d06ce63092a77e3f25ddd6ee</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac0ded856c76459608fdd5ea0f254349e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5d90a5204061482be45ac4e0d2b10e49</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga82eecc0e27a94ce0caa195cc3765536c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacaa53b05cd5e4f55eeb4d5ea64129c21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c0b6b22bbeed5da06293608f3be844d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafec078cf053a87339ba91c0f605dca54</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac2761ded0a51cabc953beac44f65972b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga426a657640410a4c6a652ab15eb57acc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga71f5d43bf63dc7292b8b58f17acccf89</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae68d4b168ef5d40f644a1a4ed854689f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga74b510f4958e90a83a631a1eeedf13e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf1f6452ad189be5c4e1ab3bd86f2f6d2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2bc2a32d3971521064741a30e10c92f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2dc9fcdb1b30126a20d96a65c7826d9b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad53e3af1f1fe522c3d902f5403954d1</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga993e05e43a31a6151427ba1f793c0b3a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa22d4f917c300b0c1f47b348c23705a4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga478e50e1fa7395af70100b906c31cb67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2d48b4bee369912b0fc9b245d6c7a52d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaba48ea189171536f9793e0d99e6db5e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3f6fe37605b54d0a25e8bf1d10f71ae4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab5c16621ae697e5ee6f442ec7b7062c5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabc8712dab6cb135176de77f374d7ee17</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga874c977dd9aac275c87a7b1c33a0dec0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga58e0468994d935f08080d9654f1b48b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga909f442c3d8c20b79de2edf6cc5ded41</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33c901f8364cb2533d6cdeba732e0e4e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9162045265f283c532634506456cab09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf74bbb66a71ece8260be20502822335b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0bce0ad23b3b708858bb20df81e09a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga13bc85ca5fe34b19112579a7e27cf41a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7242d7045ae23a9ae736c191030c25e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga17f3826360b0fe1f47c696388d25ac93</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga60417687267cd6ddc56a9c15179fe275</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga0de7350f433935a995d439fe38f55088</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga472aa3f2d8ce4040caa874fe60aba961</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2642b54ed1c2e26e595ecf3d5b29edc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga636d1d9a6333fb2acc8a6e84391ea0a6</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf638d94e53872415d3bb6d9169104891</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fadb73803f58b900ac34846c14894ca</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa8fbd81ce54fac30f60768fb36210a6f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga1366dd00b920ef459d2dbf8a64408725</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab7356d30758dfcf11ff5874fd033913b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabdea994550dbf7ab176e3c90baa3a30b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa18c9999c27632f6c47e163b6af17fa9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga67a33176f4f05231863b37b09527c0e3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9b6bf73e2a0b7f887f3d7d85a988eb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacad42b93e31bca4c9b4074d6ec236d99</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2a7cb8c29b2fb75b615366dd40a7dc13</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab80680ff70b72435addde58e88fc1d7b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga84964e55717a7db70b55f320b56f343f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bc1b188576d6d2daae9c56024813d10</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6a29e5f80671ca89d0c185416b5a6c2c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec8788f14a0c5452dada23a49cdd4b71</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab6556fcaaf926360d2064044a6f6cfb4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga182adecca0ad204a34b27cdaa9d4f672</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3caf61ab086028067b602d48182df708</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ce81a7fe9f677849881f1cfd3b5cb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga828cf9e11fe84137c2c8d4938a6fca7f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacc0d26a23389470eae502a3c9f4a2980</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac36099175c6a85db4a1e51053d5708af</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec830be678524b0a6a173896bc9d2c67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c00cb635d374030595dbc27b7a983a7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaca09ba489988fe957fde43cb9dca56a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gade5604a3fe1de55c76942ee4f4e41219</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga55342da81dd6611ab2239c650dc73b7c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gab74b4c9b873754e189b1f96468fa38f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gada829ffd7b5b93a8d5e47a35322599e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gae8f2e422b5e6ec5328d003c75cd978ea</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga4e968294e94f56d3ffcb20945d8a8543</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga458ef7a2e8aa9445446e4e5ddba9c654</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga44f6dcae8ee774254d964ba41f2f8ddc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_minmax</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7b30d734fd89678f77563e655f7c06ab</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_near</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga9e871038328399ad5112747457256c53</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_first</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga257cc818f91ac4b4ae39710256a245dd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_last</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga1daa74f876820685cb4e3e384728f004</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_min_align</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga254712953cb8abe8b1d8478233863217</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga61c5495ffb44c75aaa595e85512d28de</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gad6f510a9b1be8d88115a1192f9a52693</anchor>
      <arglist>(snd_pcm_sw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_sw_params_sizeof</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga7886ee5b3a48fb58ef8f70886472029a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_malloc</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga23382b62e7fc0de94b279c9f5dd08e5e</anchor>
      <arglist>(snd_pcm_sw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_free</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga35af2df23ec46619a82cb52e3733d47a</anchor>
      <arglist>(snd_pcm_sw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_copy</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gafe9ebe9ea669012af58b728d55fc295b</anchor>
      <arglist>(snd_pcm_sw_params_t *dst, const snd_pcm_sw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_boundary</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8bdb67600cf3c0705518b6c0a79c56fe</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga77967d8bdd8f4baf08661443523065c4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_start_t</type>
      <name>snd_pcm_sw_params_get_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gadd38871f4c64d9ecf8421b739228b19d</anchor>
      <arglist>(const snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7f0da15ce674e09167688d3e98ec20ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_xrun_t</type>
      <name>snd_pcm_sw_params_get_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92a1742ca544aaa41de93d3d3661cb5b</anchor>
      <arglist>(const snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gac2fba23ba6ac1636785e27f0f5381a15</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga4caef7435210cd7f4878d55dadeed0f8</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga912bad749f6317000eede607bb0bc935</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1cd956ea3dc0e32e32abc99af50f0819</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e098517809fd447df0ea1a4df371e08</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga82e216007e0093240ae9a96560434f84</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga79b12cbbd309750156261e7f5a39167b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga587ccbb0b025dc97d2af5db9516163d4</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaf62ce50d6242b4f4dc9d6534a97e5c09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga0458a8fe480a7887726748052bd77211</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e16b325ad44596db299468ccc4531b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gabb62c5df350f6ceb266f9ff02a3a6ac7</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1d338f1f7e33b7a6d0f9a8f61f87f057</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1ee7116c68bdea12606aab57db86a1d1</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a41bf533207d56fdb1ff10aeeac28e4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8a55577d7f3d8e4ce63a710921199c66</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga5a0158bf962f20bd9fd5ed2c52dd682b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga896ece8b418f6d6e92d2df5a4b59c3a2</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaeb4a335a16981b5ea3fa671946fbdca3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a197020c09c8a20e697d12e9fac3e11</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_status_sizeof</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6a8ae2a4786419af7853687a99436d8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_malloc</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaa97cf9bdc31e686fe491985486194a64</anchor>
      <arglist>(snd_pcm_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_free</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaeb0a7ff880647e7255cb58904270106b</anchor>
      <arglist>(snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_copy</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga307827ec2057b969520c7508fe41dd63</anchor>
      <arglist>(snd_pcm_status_t *dst, const snd_pcm_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_status_get_state</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gabaae998f0d374c50195b3206d1e43659</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga5eaeff98814e96c2ffd5f04c95b22c8d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gab1c832aedb25670d010c53d9081a4b31</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaea54e0a110afa01dd42071a1ca43902e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gafa66bda27a6b914e66e053bb76571013</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga15d17e74f3352e189df5ccd4cc4c116d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_driver_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6ee47c7a98005629ec691eae4b7f1b0e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp_report</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga79a7e633c36d79aab76c3b4ee39e1588</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_pcm_audio_tstamp_report_t *audio_tstamp_report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_set_audio_htstamp_config</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gad0dba60f0f312167755500cb49e24eb3</anchor>
      <arglist>(snd_pcm_status_t *obj, snd_pcm_audio_tstamp_config_t *audio_tstamp_config)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_status_get_delay</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga1fdce3985e64f66385a5805da1110f18</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga91c110525060b925ad4f0c21c205b757</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail_max</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gac58d13e4d03c9420c57428ddffd94964</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_overrange</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga3f4bfd0a0327529abaa621b248b6b1aa</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_info_sizeof</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga782831adf8ee2ee52892479ea0222e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_malloc</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2386bb8f334424c1ff2b8854ff29ac0f</anchor>
      <arglist>(snd_pcm_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_free</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaa919792762d0bf606f9fe45872231f28</anchor>
      <arglist>(snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_copy</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga139884ae6fb3cb5621591f2d6e044a42</anchor>
      <arglist>(snd_pcm_info_t *dst, const snd_pcm_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga137b0bb60ad14009b9da04fe53849553</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaf0e6c1ec0443820d5c14c48ecd1b698e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_info_get_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gacf9b5a69f2b0ed9aef5b9b0d2ed61aae</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_get_card</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga3a632a14559c1ea0d07b27b0596c4e41</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_id</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4ce080eae74ed95baa79ffb80a91df81</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad48dd79e45631811c297ee7080681bc6</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_subdevice_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gae2ce3c55d4439ae423b854358ff08aa1</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_class_t</type>
      <name>snd_pcm_info_get_class</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gada845e969b0b9c959134f42b98d73c5c</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_subclass_t</type>
      <name>snd_pcm_info_get_subclass</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga30670ad0d94f4358c3f16cc80ff3ba85</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_count</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaeccf5d684a23455aa9fc31f8756eb222</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_avail</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad78bccdeadd378461073b4e6bfa5272a</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sync_id_t</type>
      <name>snd_pcm_info_get_sync</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4a46693c8a81912de84f814c3eecd06e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gab9fe6f542c830c516f78ee9124606430</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2a1aea3ed02b14de6535f59d2cc80148</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga6bd83454c365f212e47f42ee84db06ed</anchor>
      <arglist>(snd_pcm_info_t *obj, snd_pcm_stream_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_mmap_begin</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga6d4acf42de554d4d1177fb035d484ea4</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_channel_area_t **areas, snd_pcm_uframes_t *offset, snd_pcm_uframes_t *frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_commit</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>gac306bd13c305825aa39dd9180a3ad520</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga675cb6a0fd5470345105574216a652c2</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_free_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0a131c274594f6266b9a3f980e479e49</anchor>
      <arglist>(snd_pcm_chmap_query_t **maps)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_get_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac3150e89164f6cb1276abda84b399c72</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga60ee7d2c2555e21dbc844a1b73839085</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_chmap_t *map)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_type_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2c559ecbc8f79457c1d7be5d08365739</anchor>
      <arglist>(enum snd_pcm_chmap_type val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac13f471d76d025798a25f3b422a07b91</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_long_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5dc94582c2356ad6f214761de888bf43</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_chmap_print</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1e10b4d6db07a3ef3a1105e703a38629</anchor>
      <arglist>(const snd_pcm_chmap_t *map, size_t maxlen, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_chmap_from_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad3e0c4157e5f491ba448bfd4d4dc0177</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_chmap_parse_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga77973afbe7ab02bfde38d574d4879355</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_recover</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2157aaeb6fc14da3f040d76591f9d3b1</anchor>
      <arglist>(snd_pcm_t *pcm, int err, int silent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga45d50841b307f2156fce1857bfac228c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_format_t format, snd_pcm_access_t access, unsigned int channels, unsigned int rate, int soft_resample, unsigned int latency)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_get_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2827b8fa77ca05717df9b0447b99d1cd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_adpcm.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__adpcm_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_adpcm_open</name>
      <anchorfile>pcm__adpcm_8c.html</anchorfile>
      <anchor>afc781f794b0c705552491b6707bf2c86</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_adpcm_open</name>
      <anchorfile>pcm__adpcm_8c.html</anchorfile>
      <anchor>a71eccece5048625c5648aa4b1077c271</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_alaw.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__alaw_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_alaw_open</name>
      <anchorfile>pcm__alaw_8c.html</anchorfile>
      <anchor>adfc7fc62627b564e1a6e0a3069730a56</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_alaw_open</name>
      <anchorfile>pcm__alaw_8c.html</anchorfile>
      <anchor>a033d4c03b15175509e960689b5d515b0</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_asym.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__asym_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_asym_open</name>
      <anchorfile>pcm__asym_8c.html</anchorfile>
      <anchor>a39d690db97257936622f800f1d81d306</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_copy.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__copy_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_copy_open</name>
      <anchorfile>pcm__copy_8c.html</anchorfile>
      <anchor>a97fb1b1587b7905bbc908cf7d03a727a</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_copy_open</name>
      <anchorfile>pcm__copy_8c.html</anchorfile>
      <anchor>a47dd871325fe6dfe7650443de19e31ba</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_dmix.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__dmix_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dmix_open</name>
      <anchorfile>pcm__dmix_8c.html</anchorfile>
      <anchor>ae31120062bceb47f24d18e672f728b4f</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, struct snd_pcm_direct_open_conf *opts, struct slave_params *params, snd_config_t *root, snd_config_t *sconf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_dmix_open</name>
      <anchorfile>pcm__dmix_8c.html</anchorfile>
      <anchor>a98332eee00abd086c486bc63ade4484e</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_dshare.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__dshare_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dshare_open</name>
      <anchorfile>pcm__dshare_8c.html</anchorfile>
      <anchor>a88bec432614f2a75100c33ed8dfd97b6</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, struct snd_pcm_direct_open_conf *opts, struct slave_params *params, snd_config_t *root, snd_config_t *sconf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_dshare_open</name>
      <anchorfile>pcm__dshare_8c.html</anchorfile>
      <anchor>ae837c9fab4f6e2e0b08aa7864c19901b</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_dsnoop.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__dsnoop_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dsnoop_open</name>
      <anchorfile>pcm__dsnoop_8c.html</anchorfile>
      <anchor>a8cb7e3979f25d99e74e7a1e6d016436e</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, struct snd_pcm_direct_open_conf *opts, struct slave_params *params, snd_config_t *root, snd_config_t *sconf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_dsnoop_open</name>
      <anchorfile>pcm__dsnoop_8c.html</anchorfile>
      <anchor>a6f504effb6bc99326e94e3450602cd37</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_empty.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__empty_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_empty_open</name>
      <anchorfile>pcm__empty_8c.html</anchorfile>
      <anchor>a55df6f9b1b71d37ea91557cc26e8ab3a</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_extplug.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__extplug_8c.html</filename>
    <includes id="pcm__extplug_8h" name="pcm_extplug.h" local="yes" imported="no">pcm_extplug.h</includes>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_create</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gab0b27889f74c83cd033062981320fd62</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, const char *name, snd_config_t *root, snd_config_t *slave_conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_delete</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga7259292a6f64a2432f4c2a44bb5f8508</anchor>
      <arglist>(snd_pcm_extplug_t *extplug)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_extplug_params_reset</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gacef181565eb697397ce41c1aab381777</anchor>
      <arglist>(snd_pcm_extplug_t *extplug)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad14f6746e36d556c7a7937633b965ca7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad3cac0ee15293f349220a75cce69a51e</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadbf27adba1a7cd0195b6ac750bb11bf7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gabef139bbe5db265433fd5310d0faad4d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_link</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadfb6033cad31a9d4fb5f76c2a0edd20d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, int keep_link)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_file.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__file_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_file_open</name>
      <anchorfile>pcm__file_8c.html</anchorfile>
      <anchor>a2d295a1bebec45e0541de03b86de0703</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, const char *fname, int fd, const char *ifname, int ifd, int trunc, const char *fmt, int perm, snd_pcm_t *slave, int close_slave, snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_file_open</name>
      <anchorfile>pcm__file_8c.html</anchorfile>
      <anchor>a3732156e2f368386a89f2f200c496b0a</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_hooks.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__hooks_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hooks_open</name>
      <anchorfile>pcm__hooks_8c.html</anchorfile>
      <anchor>a0355f8ca87a7361b1c3fdd36baf05175</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_hooks_open</name>
      <anchorfile>pcm__hooks_8c.html</anchorfile>
      <anchor>a4d7e604b82a739945aefde32395bea24</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_pcm_hook_get_pcm</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>gacaec88e4b6cc2a45e7a805487acd64ed</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_hook_get_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga1eb467cd5ab11817edc2ed7df3608019</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hook_set_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga6930df3b750b3f62dee6846fb3f6a576</anchor>
      <arglist>(snd_pcm_hook_t *hook, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_add</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga89eed2fdcda68c1efae9180a3794d5ef</anchor>
      <arglist>(snd_pcm_hook_t **hookp, snd_pcm_t *pcm, snd_pcm_hook_type_t type, snd_pcm_hook_func_t func, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_remove</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga4c59ad440d2479f957b477b26b90e4b1</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_hook_ctl_elems_install</name>
      <anchorfile>pcm__hooks_8c.html</anchorfile>
      <anchor>abfd89c986184f010df8646b46e623490</anchor>
      <arglist>(snd_pcm_t *pcm, snd_config_t *conf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_hw.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__hw_8c.html</filename>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps_from_hw</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae766a086ec64ec1189a87da3e54b8441</anchor>
      <arglist>(int card, int dev, int subdev, snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_open_fd</name>
      <anchorfile>pcm__hw_8c.html</anchorfile>
      <anchor>a78a98b1bd3d04f1a213d74b7b22d16ea</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, int fd, int sync_ptr_ioctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_open</name>
      <anchorfile>pcm__hw_8c.html</anchorfile>
      <anchor>a06abf5d78c26a9d8e79fd0428a5c7183</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, int card, int device, int subdevice, snd_pcm_stream_t stream, int mode, int mmap_emulation, int sync_ptr_ioctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_hw_open</name>
      <anchorfile>pcm__hw_8c.html</anchorfile>
      <anchor>a7687673b2a39b944c5693043446afaf9</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_iec958.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__iec958_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_iec958_open</name>
      <anchorfile>pcm__iec958_8c.html</anchorfile>
      <anchor>a5838de1fbcdbbc2debfd3995aa8f402b</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave, const unsigned char *status_bits, const unsigned char *preamble_vals)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_iec958_open</name>
      <anchorfile>pcm__iec958_8c.html</anchorfile>
      <anchor>aa2e0ac89b0b3190b5cf4c31c97e77620</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_ioplug.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__ioplug_8c.html</filename>
    <includes id="pcm__ioplug_8h" name="pcm_ioplug.h" local="yes" imported="no">pcm_ioplug.h</includes>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_create</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7fb5213a5e776246e2b4dc53ec8d7604</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_delete</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga286ec116983166de889f0268a2c666ef</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_ioplug_params_reset</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gad74355dfaa56fae80d49181c83eeecc4</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_list</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7d713552fb846ccdf4b7ec6a9fc1b562</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab62d470b02661214319196394b55fb37</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_reinit_status</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab223893226ecf78f675c89959a8c421a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>const snd_pcm_channel_area_t *</type>
      <name>snd_pcm_ioplug_mmap_areas</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gac3b666ff286745c9eb24de3e3930970a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_state</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga65feed7caf26f07aad0c722fc61fe751</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, snd_pcm_state_t state)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga23584e8e132330fd00850ead1ac1aec2</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_hw_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga3b211c9fd355e60822a1015ee29206e8</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_ladspa.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__ladspa_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ladspa_open</name>
      <anchorfile>pcm__ladspa_8c.html</anchorfile>
      <anchor>adcc43e9aeb068d3f8e1cd17d7f8a92cc</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, const char *ladspa_path, unsigned int channels, snd_config_t *ladspa_pplugins, snd_config_t *ladspa_cplugins, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_ladspa_open</name>
      <anchorfile>pcm__ladspa_8c.html</anchorfile>
      <anchor>af310f491d26253256cdf8589334a64d2</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_lfloat.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__lfloat_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_lfloat_open</name>
      <anchorfile>pcm__lfloat_8c.html</anchorfile>
      <anchor>a1cf1d379cfe222a0205356e72ae1e460</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_lfloat_open</name>
      <anchorfile>pcm__lfloat_8c.html</anchorfile>
      <anchor>a073916f2bcb53f0020b5fd5c371f4fc8</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_linear.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__linear_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_linear_open</name>
      <anchorfile>pcm__linear_8c.html</anchorfile>
      <anchor>ad5aad633e536382e36d128aa074ae2d5</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_linear_open</name>
      <anchorfile>pcm__linear_8c.html</anchorfile>
      <anchor>a705b6ecd46bb7ceb0cfef986404686f8</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_meter.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__meter_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_meter_add_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gae37aa1c3ce01063b9047e0bd437ef749</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_scope_t *</type>
      <name>snd_pcm_meter_search_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabb6cacf50cf10cb6e95853dadd19234f</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_bufsize</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga39a4a1f88cd8b5e474d3d1d6f8e3a8ce</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_channels</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaeb0f82c12f8a1e57f4b6b09ad324f3ed</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_rate</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga8c95279cba00918b29671205e38f3e78</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_now</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaa4929399573ca0e24b71a22b51d7f108</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_boundary</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga543fd7565c138f1a408ec55186725908</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaae1d6cce40b244180c54b72aee0e00d2</anchor>
      <arglist>(snd_pcm_scope_t *scope, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_scope_get_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaff680f85a1f30c83b4b544ead5ff5a2a</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_ops</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabaf2af40ecc689cee2e81b9250823fcd</anchor>
      <arglist>(snd_pcm_scope_t *scope, const snd_pcm_scope_ops_t *val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_scope_get_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gada4e9d2bfe2f7dc2b638c6406b9a4b26</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga683ced3c9344b8f6f8aab4997f74f72d</anchor>
      <arglist>(snd_pcm_scope_t *scope, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_s16_open</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga3c1e3e9c3a5a99915de23bbd2635ae26</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name, snd_pcm_scope_t **scopep)</arglist>
    </member>
    <member kind="function">
      <type>int16_t *</type>
      <name>snd_pcm_scope_s16_get_channel_buffer</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gac4297c74f130a89992459cbbc5ab029b</anchor>
      <arglist>(snd_pcm_scope_t *scope, unsigned int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_malloc</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga360da60e074bffc146ffee93f8e79aa7</anchor>
      <arglist>(snd_pcm_scope_t **ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_mmap_emul.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__mmap__emul_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_mmap_emul_open</name>
      <anchorfile>pcm__mmap__emul_8c.html</anchorfile>
      <anchor>a336723a50e2e941a7747226e274412f9</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_mulaw.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__mulaw_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_mulaw_open</name>
      <anchorfile>pcm__mulaw_8c.html</anchorfile>
      <anchor>a5180265fc0f22f9eeabaa15555bcd072</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_mulaw_open</name>
      <anchorfile>pcm__mulaw_8c.html</anchorfile>
      <anchor>aac8ed7d538562e09d0b8bbfe08df3665</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_multi.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__multi_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_multi_open</name>
      <anchorfile>pcm__multi_8c.html</anchorfile>
      <anchor>a9cd9738f81265d5255a9c28bbccb8bb4</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, unsigned int slaves_count, unsigned int master_slave, snd_pcm_t **slaves_pcm, unsigned int *schannels_count, unsigned int channels_count, int *sidxs, unsigned int *schannels, int close_slaves)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_multi_open</name>
      <anchorfile>pcm__multi_8c.html</anchorfile>
      <anchor>aeb0fcef35d9f9bf598384cfe46e163a5</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_null.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__null_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_null_open</name>
      <anchorfile>pcm__null_8c.html</anchorfile>
      <anchor>ad1e47f314d908607cf908d9859359724</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_null_open</name>
      <anchorfile>pcm__null_8c.html</anchorfile>
      <anchor>af964b1e41d92a723748128014026ebd6</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_plugin.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__plugin_8c.html</filename>
  </compound>
  <compound kind="file">
    <name>pcm_rate.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__rate_8c.html</filename>
    <member kind="function">
      <type>const snd_config_t *</type>
      <name>snd_pcm_rate_get_default_converter</name>
      <anchorfile>pcm__rate_8c.html</anchorfile>
      <anchor>a8afd72938400c618c93f46ebf4ffe995</anchor>
      <arglist>(snd_config_t *root)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_rate_open</name>
      <anchorfile>pcm__rate_8c.html</anchorfile>
      <anchor>acbc33a01e5c38505fb8777e8a3cb808f</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, unsigned int srate, const snd_config_t *converter, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_rate_open</name>
      <anchorfile>pcm__rate_8c.html</anchorfile>
      <anchor>aa2b39b0460f63d709b2244be669c479b</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_route.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__route_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_route_open</name>
      <anchorfile>pcm__route_8c.html</anchorfile>
      <anchor>ae19a77e8ec26dc93b8be5a93e7391550</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, int schannels, snd_pcm_route_ttable_entry_t *ttable, unsigned int tt_ssize, unsigned int tt_cused, unsigned int tt_sused, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_route_determine_ttable</name>
      <anchorfile>pcm__route_8c.html</anchorfile>
      <anchor>a759ab4e9f1a853e97094e4dc1b835776</anchor>
      <arglist>(snd_config_t *tt, unsigned int *tt_csize, unsigned int *tt_ssize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_route_load_ttable</name>
      <anchorfile>pcm__route_8c.html</anchorfile>
      <anchor>aba572e5937822f4fc3feab834cdf9348</anchor>
      <arglist>(snd_config_t *tt, snd_pcm_route_ttable_entry_t *ttable, unsigned int tt_csize, unsigned int tt_ssize, unsigned int *tt_cused, unsigned int *tt_sused, int schannels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_route_open</name>
      <anchorfile>pcm__route_8c.html</anchorfile>
      <anchor>abee47f3c05e74d83bf2a96559de9a262</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_share.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__share_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_share_open</name>
      <anchorfile>pcm__share_8c.html</anchorfile>
      <anchor>ab7c7e88e681d727250e67b6fbd11e245</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, const char *sname, snd_pcm_format_t sformat, int srate, unsigned int schannels, int speriod_time, int sbuffer_time, unsigned int channels, unsigned int *channels_map, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_share_open</name>
      <anchorfile>pcm__share_8c.html</anchorfile>
      <anchor>a201ff59d8aad291bfd324fef114bf2d9</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_shm.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__shm_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_shm_open</name>
      <anchorfile>pcm__shm_8c.html</anchorfile>
      <anchor>a3684b5fb80a3549a9176cbc7ea9e5181</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, const char *sockname, const char *sname, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_shm_open</name>
      <anchorfile>pcm__shm_8c.html</anchorfile>
      <anchor>adc046ce3ea6720d3545bb2158266bc75</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_simple.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__simple_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga5c55688bfe990821798936c20cd11ca5</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t access, snd_spcm_xrun_type_t xrun_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_duplex</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga148a05b14b083d9c6ded79dd6bfd7fdd</anchor>
      <arglist>(snd_pcm_t *playback_pcm, snd_pcm_t *capture_pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t access, snd_spcm_xrun_type_t xrun_type, snd_spcm_duplex_type_t duplex_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_get_params</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gab6ee6daf2b83bdebf6cf6355c0365885</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int *rate, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pcm_softvol.c</name>
    <path>alsa-lib-1.2.2/src/pcm/</path>
    <filename>pcm__softvol_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_softvol_open</name>
      <anchorfile>pcm__softvol_8c.html</anchorfile>
      <anchor>ad569db39824bb0a31c73dd9d4948a4b7</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, int ctl_card, snd_ctl_elem_id_t *ctl_id, int cchannels, double min_dB, double max_dB, int resolution, snd_pcm_t *slave, int close_slave)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_parse_control_id</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga6cc0e84dc2822458b4ed163071a51ecd</anchor>
      <arglist>(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp, int *cchannelsp, int *hwctlp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_snd_pcm_softvol_open</name>
      <anchorfile>pcm__softvol_8c.html</anchorfile>
      <anchor>a4347460ac616c9a323681021c6498d0d</anchor>
      <arglist>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rawmidi.c</name>
    <path>alsa-lib-1.2.2/src/rawmidi/</path>
    <filename>rawmidi_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga2ab783051deeb7eb37eb568b76448889</anchor>
      <arglist>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open_lconf</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa7e3daf5cf4dd36b2534d2f1d6309477</anchor>
      <arglist>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_close</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabc6bd5922151fb50196f62b9a4ab9f56</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa4bf6540f3f36c5878d31abd34a341d3</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_type_t</type>
      <name>snd_rawmidi_type</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga5984e0c61995c8184a0e6e0a68a6faaf</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga295d2f3ce9e992919f205b929fcb83ee</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga39ac11df7e520e753b26ab4eceabe6de</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga22fcc3fc5c62c9db88d79a0b91e3a75f</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_revents</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga38f15766f77c0bb50fec6cdcd87254b0</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_nonblock</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafe714a54fdb6083eb003bcc21da89553</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_info_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga383592eddf099559822357678fbe7d8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga11f8d3832ec7ea7fd6e8445338704528</anchor>
      <arglist>(snd_rawmidi_info_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa84495bee993f34fb9bac33b5a9cf65f</anchor>
      <arglist>(snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfb769e2aaf0a6b8274b5e0c3e9141d8</anchor>
      <arglist>(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gacfb2e65475c314f5f1dde0c5d7a05a7b</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3fea97d5bff26c54831e95b2200f857c</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_info_get_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga760552af30a089ddacc3af79985e24f6</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_get_card</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga463916bd78a0ab5a96a053edca05a8d3</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_flags</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaf9ede5bbc9abc9124910c2612363de30</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_id</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac7ac90e99759ee7b2dddd3613219c798</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafd809c976c1dab23957e338b5af2a353</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_subdevice_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga428398f23118575aa4f62eed860132cf</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac0b33eb2f54cd6fc9b34002fe28ca9fe</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga71717ea1f35bf2a59548d3d106278336</anchor>
      <arglist>(const snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga98fcdcb94c12baf65dd0ec8f9d52ef59</anchor>
      <arglist>(snd_rawmidi_info_t *info, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga49eff1cd1b62e0399826740863cdcce3</anchor>
      <arglist>(snd_rawmidi_info_t *info, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad704ac98c8313235c73c23d374bf6831</anchor>
      <arglist>(snd_rawmidi_info_t *info, snd_rawmidi_stream_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3c3595d2907ee30754f6a1d5ceb2d97f</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb5767a318d349a4d2a100191c3cf8d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaedc01312384764d02b6bc946cb1e79a9</anchor>
      <arglist>(snd_rawmidi_params_t **params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad8c735ed6a8533655dabd7318f25a6fc</anchor>
      <arglist>(snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga533710a31f6b6b4f6791baa27e69089f</anchor>
      <arglist>(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga612c96757e2f81fda5b6cd6dec826de1</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0bd9629686062562b88bfd2a3eadc1bd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga89782681ce86b3d5cbebb5136d25439f</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae629f2ef814eda39dc081dff65bf7d20</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab717719be70fe4396dc84f3f895d6e12</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_get_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga6a057d467faa2b65ddace364fde985fd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga458d8ad22277645d9b65fa47c011465c</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_current</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga86eabf81acd7c43fc100c67fbda5085d</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7933bdb7eea04815be0bba98261865e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac1035208bbdf81852dbcf2e14ce4a8dc</anchor>
      <arglist>(snd_rawmidi_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac9852f68911bbb8aef21d2e20c3ff2c0</anchor>
      <arglist>(snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab62e8a4ca0033166f906a969048d935c</anchor>
      <arglist>(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_get_tstamp</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb867dbf1d4d5fb3bdcad36a86565837</anchor>
      <arglist>(const snd_rawmidi_status_t *status, snd_htimestamp_t *tstamp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7ff63a2376b2df549698296d37b532ed</anchor>
      <arglist>(const snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_xruns</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae4f69ac10574cfc2cd5c848628e75f9b</anchor>
      <arglist>(const snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab888bce923769882931f77603327231d</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drop</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga01076c87d169cf77334d35bd094abd0a</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drain</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfff7417ec957b7ee07882f91d73d7be</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_write</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0a30e482efec57f4ea74c533a0f9b134</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_read</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga9b0952fc04facda83cdf1521325ca475</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, void *buffer, size_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq.c</name>
    <path>alsa-lib-1.2.2/src/seq/</path>
    <filename>seq_8c.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_name</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8736d847fb7b3b6627f29f0eba907e30</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_type_t</type>
      <name>snd_seq_type</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1ff33a2d698836d879ac05f5176c58b3</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga95462dc59c0319e186cda713ecfb4ed3</anchor>
      <arglist>(snd_seq_t **seqp, const char *name, int streams, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open_lconf</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga03b68a24d0d2de303ee9ec04ed68c8b7</anchor>
      <arglist>(snd_seq_t **seqp, const char *name, int streams, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_close</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gab209cdcf6e1e1907f8c49d3148a4e0f6</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_count</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf281c1dddfc626124b9e61d2cad94f2d</anchor>
      <arglist>(snd_seq_t *seq, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga99851fa9ff4ec5be7414cd9defbcda89</anchor>
      <arglist>(snd_seq_t *seq, struct pollfd *pfds, unsigned int space, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_revents</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaae23b17b3c34639b7a2a8ed74880d364</anchor>
      <arglist>(snd_seq_t *seq, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_nonblock</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaa41faa2ad471677d1060f9e9a226ac52</anchor>
      <arglist>(snd_seq_t *seq, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_id</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga2cdaded101f041b9a0930b665ac44b93</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga02442682a361bc6f9faeff468cdebbad</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gacd207de4c08ffff3020b078de8e64cc5</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae9a0931460444f130c5c1df9de57707a</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga62cd9f5ea1d75db676d43da44596750e</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_system_info_sizeof</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1a036e739dd2daaa9952875528c2f763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_malloc</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gad49e5da1a851505e43dcfbf5fd00b0d9</anchor>
      <arglist>(snd_seq_system_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_free</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf3876a29ae1e648d9fd8e6d067a56b6b</anchor>
      <arglist>(snd_seq_system_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_copy</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8cbf6ad4d47837d0a5a1100ef0808ab7</anchor>
      <arglist>(snd_seq_system_info_t *dst, const snd_seq_system_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga63c9cfcc634c722350b55a6820461e9e</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga7fbb56a82dfef9224b411a659ba7d8f0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_ports</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae446559ff05dc0ed1967eab253921aa0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_channels</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga58fa1ff3d4ffafac092e5cffb7092ad1</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaeb16d361d1fc92de95cc1986619eac8a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga5af096ec5db751e0d10ec0d998482c6a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga548a7ebe6c90e90f689cf8d862b81f9e</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_info_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga307d71507e4bd63602cd9686840e68ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga632a84797c8b3a96cd188dae681a4c97</anchor>
      <arglist>(snd_seq_client_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac6da8138f5ab2966ac7cde41a2218965</anchor>
      <arglist>(snd_seq_client_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gae45c6df3ba2bfccd72bab8bf0fad4791</anchor>
      <arglist>(snd_seq_client_info_t *dst, const snd_seq_client_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga5eccc990c80935a7cc7dc8f9fecc44eb</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_client_type_t</type>
      <name>snd_seq_client_info_get_type</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf8d7a9e3884ccaccc0fa8f3008a1922</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_client_info_get_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga72c935b373607fea06a2c3ad996d1722</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga68795cb06ceb82f8b02cfcb272024936</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa5788a36d5d5e3ad710114b355957323</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_card</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaf6f134c1ca63142a5d61ea7e44a24eda</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_pid</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gab1cc1f3bf148d0510facf7ba194285d2</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>snd_seq_client_info_get_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac9298146a03d2680fa9bd00bb912fdb9</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_clear</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga70d31a588c75cc7e8407974942f8f974</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_add</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga90f86c0c27e8f279c887728ed59d2ec5</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_del</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga379ef80c5c54ad11188ed0256068f83a</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_event_filter_check</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga252e1390151d892c190f4e1744046bff</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_num_ports</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gacc60e8ca52278c2ab78bcf317591309b</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_event_lost</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga10db9e262a007b34010a1112afca2f73</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga202a4ed9a8dcb521b1b7468fd2ea9560</anchor>
      <arglist>(snd_seq_client_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga17a196d1cba06f3d96f79882884b5cc3</anchor>
      <arglist>(snd_seq_client_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga69acaad376ff2645afe6dbd46fd74b15</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga11ffeb226dc9f79a18069d8c3c26d12b</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad130c3a85ea614450905149339419794</anchor>
      <arglist>(snd_seq_client_info_t *info, unsigned char *filter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa6c062d0423dbd735c0f97f3e0aad6ee</anchor>
      <arglist>(snd_seq_t *seq, int client, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad4e3dd20d087a3ac4b709b4fbb525ad7</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga109f62fb356c322533ddde4a6ce2c587</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga71ed00b1bf9265563a5377e720511cae</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_info_sizeof</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaaf7342df4e6dcdd4b40bffab2d9383bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_malloc</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga86ff334491c0d8c5b007e5b78d457334</anchor>
      <arglist>(snd_seq_port_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_free</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac6254a78c36c8244782e18225647a06a</anchor>
      <arglist>(snd_seq_port_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_copy</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac1a2571b37277ca7845a078fbbd07e30</anchor>
      <arglist>(snd_seq_port_info_t *dst, const snd_seq_port_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5a9f99c028e47a549836581b3cc01705</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga90475c2db0acf804d8959058782493ed</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_info_get_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga58c1e63db50536dbe517c4eb56884a99</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_port_info_get_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2ce813765619784f7b6f773730bb00a3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga52d3744aa8a9ef122b350247c206ca1f</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67089430166da86830b2e8d24ffcb82e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_read_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67ae52056047784f451f46dc0e81ca67</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_write_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga8278d1e6aa256e8f26191ae16202c114</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga98f449484e99680ec24dd8a635e5c46e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gace0fa9154b4c7f48e582d2c6fca4d343</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga3a7cc5d4eecf7fff98f6f8118176b352</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaf4a8c5c64c489321994ace0247921a87</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2b452e4c849fc860db7879f82d4b3323</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga56146d9a0b992ed1fddabd787ecdd755</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga25bed7f48ec3e75764c3c49b510b23b3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7ea54e7b23774e0670174cc8698cb375</anchor>
      <arglist>(snd_seq_port_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae3d9b091002c86bc31644da0a9b48bb7</anchor>
      <arglist>(snd_seq_port_info_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2cb8af4a438139a3733212ef8d9fda81</anchor>
      <arglist>(snd_seq_port_info_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae36f8b99f4e5a374dd69760a2d23b1a5</anchor>
      <arglist>(snd_seq_port_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5e66f8964ac8686437936958c50d2e08</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int capability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae67a71150ca0bf04f265f6df14120c8a</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga95fd5b48eae29be7186013a3aded24c4</anchor>
      <arglist>(snd_seq_port_info_t *info, int channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9efdb4781a133315240b4da0a336935f</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gad52fdf46df934c1c3ab369ee4bcb7a66</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gafd4325db9167baf3e994a942577c2d5c</anchor>
      <arglist>(snd_seq_port_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gacf6441ee4622b87b450381e1cea7d7d1</anchor>
      <arglist>(snd_seq_port_info_t *info, int enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2faba31e8c97874e4be7ca95e76bdbd1</anchor>
      <arglist>(snd_seq_port_info_t *info, int enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5c4463ccb1c7f599a1b34bcac2c01ff5</anchor>
      <arglist>(snd_seq_port_info_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab40867ed02d9d6e40a75f929b5adf24d</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_port_info_t *port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_delete_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaa79a02d8fc3d6668b0a68d5d8b172603</anchor>
      <arglist>(snd_seq_t *seq, int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaca72792a7a96c18809768a905cefbfa4</anchor>
      <arglist>(snd_seq_t *seq, int client, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9de3dbd9960f6108257f38e7945ae327</anchor>
      <arglist>(snd_seq_t *seq, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab979b7ece475bba1d75e9d7279b912b1</anchor>
      <arglist>(snd_seq_t *seq, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9f3ba4f4a959798bd0b25b417b9ca4cd</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadbb7289e585bbc1562ef3b9a0faf17b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga5b9d64f3edd2e5ee90087c447e52d0ef</anchor>
      <arglist>(snd_seq_port_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga8a88b6f7986cdfef79c95fc868ac8b2b</anchor>
      <arglist>(snd_seq_port_subscribe_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga736cf588e66b79fbc575beac47d8f608</anchor>
      <arglist>(snd_seq_port_subscribe_t *dst, const snd_seq_port_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaf25cc0762f6ee1be48762e1804d732fe</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab8f9a467cc4cc4587fc3d96efa62b86c</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga236296f6da31744a13d26c970a80fcb1</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac80f53bfaecc9dc6f57a99a859549771</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0c0f2ec04a4496d98cfb75535c8ef047</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gace8d1d45a7a94a1eb2dcf19056d345a0</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabda2bb1e51927155ad1df1701a337f50</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0ab685bdf4e1f0dd8be756cb5f089765</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga79a030e6155c66afe94b81f77b8575cf</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga10b7e0184afa49bed2b871bcd1c310c0</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ae181ecaea97317fa724a80e8ce4f21</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga14bac64ec25eb4acbfc828657ad8d25d</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_subscription</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga29d9011ec93bc997f7de9f3cc99fd755</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_subscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga2b216ec66cd724af31d376398e7b4863</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_unsubscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga962385329f27f4024276756019e8a615</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_query_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga4110de85e3c685870cfcb4279f7278d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga85589d7d7a1dd6b5dee2ce0359657c46</anchor>
      <arglist>(snd_seq_query_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadf3d6ab12f6153688aa9fcebcc0c23a0</anchor>
      <arglist>(snd_seq_query_subscribe_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaca069489ed3e50c239ad50873ebe19b3</anchor>
      <arglist>(snd_seq_query_subscribe_t *dst, const snd_seq_query_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga293315700db5b8bf4e56f5ec14fd8c96</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga905bbf39942d96ee653dd239bcd9d761</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0e194f0caff016949b2b4cd591f0536d</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_query_subs_type_t</type>
      <name>snd_seq_query_subscribe_get_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac2e74d5d75c258d8d7c770ecf42ccf84</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga36147269fd15907a52f74c9879b8ad8b</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_num_subs</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabced00f0d6b51d5cd6461035a5d38bbc</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_addr</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab43ae1fb1211b7762adc31723344de77</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga639c72ea9a0b84d2eab5bf5c70b8e316</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga08702e693e3a1508755232730f5addc3</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga543ec2a6286e294363ee13f5294c38fd</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga97717919a2d96232cbe21d6a9a51b7f7</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0048b9508d64d897ae90e6155fc66fad</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaa79fcd963a66539f92c3ec4dd3d77a9d</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ce815dd0d8d50c4806399449292402b</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gad78be14f613420a840ef0fc3ebdf3740</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, snd_seq_query_subs_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga3c65dcdc45ec727cb76f9ad15c2364a6</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_port_subscribers</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac9c05af9bb647d1aa9b4408f571c809d</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_query_subscribe_t *subs)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_info_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55ef5e5a6defb4644756cd74c2979e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad78dec2ee096469359b25935d7097870</anchor>
      <arglist>(snd_seq_queue_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga505d9b6f484307d65699c06ce8f441c5</anchor>
      <arglist>(snd_seq_queue_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga29a887460bfe9267cb52762c92fb223f</anchor>
      <arglist>(snd_seq_queue_info_t *dst, const snd_seq_queue_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga457f2e8325b450d2438f51dfffc0f1ac</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_queue_info_get_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcfc3ffd825a8815cbf4eb33e475de02</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga96157a2ca9d489b44643e45ff2f59dbe</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1030896da01cf5db2d1f4f0708f70df4</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_info_get_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5f0bec17e5659f97e4e1120bdce17f89</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaa62c379286b52d3ca60b28a895cce88e</anchor>
      <arglist>(snd_seq_queue_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga034321c7457283655d905b628ddf5be5</anchor>
      <arglist>(snd_seq_queue_info_t *info, int owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gadb0872c315b7aad61efb1fbe0a5c9a47</anchor>
      <arglist>(snd_seq_queue_info_t *info, int locked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad28b514ecfab5d4446ed2699d2aeed7f</anchor>
      <arglist>(snd_seq_queue_info_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga05fc43229e94aecbb4379909200aeeae</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8efa821e0fc96fd05460306808e8fb7d</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga036e62b321b56bee2e8d2e8280a6416a</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5b2cf5082861776ac9f7f986459cbccf</anchor>
      <arglist>(snd_seq_t *seq, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55c027a8a487f9c9000674a0e5ef4ab0</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1b55c8f96590fc916aa55090c4ba42f1</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaad396a0a6257df968e5ad0c7ee1222ae</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5ae5f595791c1fb83b21d8ffbf493ae6</anchor>
      <arglist>(snd_seq_t *seq, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gae9663bbdc879358019ba35b317a9278a</anchor>
      <arglist>(snd_seq_t *seq, int q, int used)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_status_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga410d7b24d89be10501ee18c1b2673a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga97a3fa054a6c7778bf3b098bde16c71e</anchor>
      <arglist>(snd_seq_queue_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaab4d1480fceb6773993d615fec82716b</anchor>
      <arglist>(snd_seq_queue_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1869ff7afa1c4369b7f55b00d3918bec</anchor>
      <arglist>(snd_seq_queue_status_t *dst, const snd_seq_queue_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab62a82ccd8e49520bdc5c6c3c74a73e7</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_events</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad132bcb774aacbf89cd43f810980cf17</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_tick_time_t</type>
      <name>snd_seq_queue_status_get_tick_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga45f380b20367b1ccce3e8f26b3ce35d4</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_real_time_t *</type>
      <name>snd_seq_queue_status_get_real_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab386a400f82a7b181e40646d2c58d786</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_status_get_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2f497177636b228f8ce75f853d380428</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga594dfc6fa6708674238275821c759661</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_tempo_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga9da76e175bbb5672d456888a1c6563ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga725a4ba4e5b9860468a8904a64dcf20c</anchor>
      <arglist>(snd_seq_queue_tempo_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcefe4a38566fbbfaea2ba72dd7d020b</anchor>
      <arglist>(snd_seq_queue_tempo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6d6b5e1c110e1fa86f73a6dc9ae30669</anchor>
      <arglist>(snd_seq_queue_tempo_t *dst, const snd_seq_queue_tempo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabe8d63b929c886cd0a0c30ff29dde687</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0ae17b5abc2d0967eb486f09186c78a2</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga65741e506fe8b4e508948276c28369a5</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga58bd46f3157166238aedf69d0d1488e1</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab69067f2e5f84592004709c5a02dc980</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga4b0488b65a0ca46460c92d80afa53681</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int tempo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga69e4bf372ce3fb49b8fa60130472ba47</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, int ppq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1fe4c287eb922f986d70d97e8b189b2a</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int skew)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf3d139c12fa36fa8c582d966bcedde29</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf1fab24ee86f45c7eb2b0c3d1b2574b4</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga84793898d689520441a4c1164a8c0c77</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_timer_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga60d0cf3e001553f476f9e42f36fbc4c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf92d9d17a12095b2d79fda8c9a55c165</anchor>
      <arglist>(snd_seq_queue_timer_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0b0b25bcdc1ed4d77fb652af640b1a85</anchor>
      <arglist>(snd_seq_queue_timer_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad51004af9337c59da5863167dc7a79a1</anchor>
      <arglist>(snd_seq_queue_timer_t *dst, const snd_seq_queue_timer_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2255dc028c3143237de8a4440a81699b</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_queue_timer_type_t</type>
      <name>snd_seq_queue_timer_get_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga635fba8ca3b26972a318c1ee788be52a</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_timer_id_t *</type>
      <name>snd_seq_queue_timer_get_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6b83a4e6cb579c1d1ed99b24e258fdf7</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_timer_get_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga3981cf76e6447dfcccfa429a3f7cb94e</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad10886abb8001755915a29ee450fa3a5</anchor>
      <arglist>(snd_seq_queue_timer_t *info, snd_seq_queue_timer_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5525b8e9d1efbad4718e3dbbaa9e4462</anchor>
      <arglist>(snd_seq_queue_timer_t *info, const snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6e6fbe81b0fff646e046ac81b32fd44f</anchor>
      <arglist>(snd_seq_queue_timer_t *info, unsigned int resolution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga545fa858434c91dba0de7bd9585bcc08</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga607d9437a074adea11f2112e26eac6ac</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_event</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6a4edcdaec5d55e61c8db1a0fbb2daa9</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_seq_event_length</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae807a81acfbb8e7147a186a02274b34b</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0360e41b946c9948ad717beef7c5ab61</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga41be1e09173957944352c50067a686ea</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_direct</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga63986686b918abeff9902108638c5b2f</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga9ac143d4f0f826c9715424a8ec47339a</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drain_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga64a0ed5488504ef91b5b6b92172bc0aa</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_extract_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga8a75dbcc2b51d0ea81d2538c0ae131f0</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_event_t **ev_res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6421feafcd6f116d34531d6b54177c17</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_event_t **ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga08d1c09716d6c04f8164539429a8659c</anchor>
      <arglist>(snd_seq_t *seq, int fetch_sequencer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga12bcd6b29f0d5f13b00f2c55a2ca4556</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7b1182e2df033f7813a28bded948cd5e</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae42e855dcb4745bdc78efe313d49a0ef</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6f8a93aaa55cdbff67e264fd5357de0e</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_remove_events_sizeof</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaa5a0541a3f5e9b0536c8bc022c64dc04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_malloc</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga280e1b40b1cb608176d9f561038afb74</anchor>
      <arglist>(snd_seq_remove_events_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_free</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga14849dfc4b6f46c58aa8567a7ee5860e</anchor>
      <arglist>(snd_seq_remove_events_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_copy</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga03bce50b05a4a7ae7236875a3e9d2949</anchor>
      <arglist>(snd_seq_remove_events_t *dst, const snd_seq_remove_events_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_remove_events_get_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga448bdde3612be594f3651d591678770e</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaf1c86405bfc4ad14bfa7d6234545e4ae</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_timestamp_t *</type>
      <name>snd_seq_remove_events_get_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga781d9bfba05346779a4d89b8720111f5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_remove_events_get_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2b26aa9977be1f96e42cc71a9075909a</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga474f7d65b54164c7b4066b2341680b69</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2bac6d50ae68c432441b6f86f8e51ec5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaefe8772759971b008123512b5294fecb</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4efc426e73bd8ed2398ee8911c1a1fea</anchor>
      <arglist>(snd_seq_remove_events_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga79e4eea77bf7639b314d0c6a2b858897</anchor>
      <arglist>(snd_seq_remove_events_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga34502d7f197063e7e404039c06cd49f6</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_timestamp_t *time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaaae3ddaad59def2395a9c3391ad3ea3c</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0611da2732cef4d8943489736e838cb5</anchor>
      <arglist>(snd_seq_remove_events_t *info, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4b3ac3780f5368118422b08a08ed8d43</anchor>
      <arglist>(snd_seq_remove_events_t *info, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4847f69287addc86dddf61a2ffca5089</anchor>
      <arglist>(snd_seq_remove_events_t *info, int tag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7ed1109642fdb8dbd9f8a20564e40362</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_remove_events_t *rmp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga64dd385218ec42e3b29a3fbbea4f16ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga9e7694a46464eef735baa6fe707772e5</anchor>
      <arglist>(snd_seq_client_pool_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf2b20b02752e3986a04191e8f978114</anchor>
      <arglist>(snd_seq_client_pool_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2800f799c3d2f91dad38ac4507fbf5a2</anchor>
      <arglist>(snd_seq_client_pool_t *dst, const snd_seq_client_pool_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga0fe8815acdcea59b64f6c8309fd3976f</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga97029b162c526b18a06b989b0ceb0ba0</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2a30c5144b83b16742dc58a43c3285d8</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga08f0213028e27cc005d2ae9deab054ff</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2ed48ca260bbeae082d7ff9e92d29e03</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaee2a604809f284e9de22cf36aaa4326b</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac32365b27518a67e72231f835f3eb054</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga197e31b28dedbe68946704c38e6805d0</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga1bedc9459e1ec6e4dfa34904105dc215</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga896dd0d346d66cc7deac06eaf7ce056a</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga076635492cecbf740302c97a4a84ea07</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_set_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga8ff28fb95b62e6359d2e21c23b2a73a5</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_unset_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga74b65393d57f2e8771a801629d6b3528</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_change_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga2eb3e010834db5401a6e38c1bd2f23e1</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>gab9ee8563691ac283aaf93c6bd15ad99b</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq_event.c</name>
    <path>alsa-lib-1.2.2/src/seq/</path>
    <filename>seq__event_8c.html</filename>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>snd_seq_event_types</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaa40bbb018018a491bd102e6fe58a6c84</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>seq_midi_event.c</name>
    <path>alsa-lib-1.2.2/src/seq/</path>
    <filename>seq__midi__event_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_new</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gaa3c1797128d84a182197f5dd853c53ec</anchor>
      <arglist>(size_t bufsize, snd_midi_event_t **rdev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_free</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga84b9fdddfc1996d0abf759773593931f</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_no_status</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga4c32d90809d0c2d44fb41be0276100df</anchor>
      <arglist>(snd_midi_event_t *dev, int on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga54a3d6f03dc0f83ae32d7b12b1da7e63</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga1d6bd40b70cdd77e500b25e6eec19484</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_init</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga670f51a0ce1402b7d03c2a3f5b2801ed</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_resize_buffer</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga22cffc488269968de6cae6796f92ee12</anchor>
      <arglist>(snd_midi_event_t *dev, size_t bufsize)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gae44531e8091bdd6e97a5b70e7b81ea10</anchor>
      <arglist>(snd_midi_event_t *dev, const unsigned char *buf, long count, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_encode_byte</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gab758a60cfa82dfa28e08ba2e2cbe2149</anchor>
      <arglist>(snd_midi_event_t *dev, int c, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga9ef018a85ec7f61d45d8b17083bf8cc3</anchor>
      <arglist>(snd_midi_event_t *dev, unsigned char *buf, long count, const snd_seq_event_t *ev)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>timer.c</name>
    <path>alsa-lib-1.2.2/src/timer/</path>
    <filename>timer_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9fa22f49745d1e383f0d6e5d9e795e2e</anchor>
      <arglist>(snd_timer_t **timer, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadd7dd0538f800b67fea5f096a73c2fee</anchor>
      <arglist>(snd_timer_t **timer, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga155e0b5c831a3140f49c04932da9404f</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_name</name>
      <anchorfile>timer_8c.html</anchorfile>
      <anchor>a20bc808bafd86a25e1a63b469e5456e5</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_type_t</type>
      <name>snd_timer_type</name>
      <anchorfile>timer_8c.html</anchorfile>
      <anchor>ad6933ce0ca1a39e7a4d6614dcaa614d6</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_timer_handler</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga076a6bbae3bfdb956b0a1a6ea9daa0a2</anchor>
      <arglist>(snd_async_handler_t **handler, snd_timer_t *timer, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_t *</type>
      <name>snd_async_handler_get_timer</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa497b2873abd234df7e932ecdefad5e0</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_count</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf035c37343afed7f13c60e950e461cdf</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga89ec000a41fa7dd1269e332324663f61</anchor>
      <arglist>(snd_timer_t *timer, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_revents</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga395e14d49bbb41794fb1bb6114fdf93f</anchor>
      <arglist>(snd_timer_t *timer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_nonblock</name>
      <anchorfile>timer_8c.html</anchorfile>
      <anchor>a5e4c6f8a8f2b9e66162281a8f37925ab</anchor>
      <arglist>(snd_timer_t *timer, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_info_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3845cca41afd0f5ee40132d5b10c1e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga51e754aec623f96bcfeda9511f51b5b7</anchor>
      <arglist>(snd_timer_info_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga10da72bb7ae7a6ed91e7857b61add016</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga92e91d9222794a1c5e82b7672faa214b</anchor>
      <arglist>(snd_timer_info_t *dst, const snd_timer_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_is_slave</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaccf0a207b91965e7200355a0daaac6ce</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaddb757aa65e9532ced42ff7e9146ff34</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf46477b4ca62a7c2bd87926a45ecbd50</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9360acea37a3351ab9d2c17b7a264395</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3b33c3f0af5c93461e9493b0d4a3b81c</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga608cb266bf1cfd8f3796e6e55a2d5fe8</anchor>
      <arglist>(snd_timer_t *timer, snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_params_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8a76df112a4046b72bdd4903215eca09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6bdf00a7a9a2bcd46848c3862e31d7e7</anchor>
      <arglist>(snd_timer_params_t **params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3cba3ec4b6146cc7855d937b7aaf7953</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6beaa69176cf2bb404983da4d133fda5</anchor>
      <arglist>(snd_timer_params_t *dst, const snd_timer_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac39b36fdcc72cbb05adb909673df04f0</anchor>
      <arglist>(snd_timer_params_t *params, int auto_start)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c7537d0729793d242b9263185f24e06</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497d23da21ec46d58ef3d6c01942d7c1</anchor>
      <arglist>(snd_timer_params_t *params, int exclusive)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66fffdd5b538259b54ebe9570581d52a</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaede871d499497de1199bdf1e8f9c9872</anchor>
      <arglist>(snd_timer_params_t *params, int early_event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6e45bbcef976cfac74336f337a0460cd</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7101edb9ec33fdbbb94e04256388caa</anchor>
      <arglist>(snd_timer_params_t *params, long ticks)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga298418a42230f305c3c4efdf14da3403</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c55b27f682897a1b421b1be46a36289</anchor>
      <arglist>(snd_timer_params_t *params, long queue_size)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa4462f1d878e5f1f10c40549692effcb</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab6820b66547c333402ea8e66fd600af2</anchor>
      <arglist>(snd_timer_params_t *params, unsigned int filter)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_params_get_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga94c66976bd4b993c766e81d2452597f1</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3fd358a410688c3aba3e2d69acf027a8</anchor>
      <arglist>(snd_timer_t *timer, snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_status_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf0ceabb82125265a8bfe6ea85b889063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fa0de36e4494bd5ece4965ffe832db1</anchor>
      <arglist>(snd_timer_status_t **status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga60f6cf340f3f4881e1bff8ed11f1e634</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac14cf4718333897ecb2b823b738aaff4</anchor>
      <arglist>(snd_timer_status_t *dst, const snd_timer_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_htimestamp_t</type>
      <name>snd_timer_status_get_timestamp</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c303da4c37285d423f428710409ee08</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaaab668cc548b6c4a24236504d63da0a0</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_lost</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7ad78e8af9855e71d4951147869693b</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_overrun</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf3a83c122c2e19059297599d3486c04d</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_queue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6edb10e32b6b485ecccef73d862ca648</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa78c7089909252ee0ca69f7552fa2804</anchor>
      <arglist>(snd_timer_t *timer, snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafc990117a12e19a729ff10ef217fe2f9</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_stop</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6f8147c0679c820a77f98b1dd5b664a5</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_continue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaefeb6d7a87d49666470a62cea1440ed3</anchor>
      <arglist>(snd_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_timer_read</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga724ada94d0bc3564ad77973c0a084682</anchor>
      <arglist>(snd_timer_t *timer, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gad0cf85bf970338f0924e0f642057c9a6</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>timer_query.c</name>
    <path>alsa-lib-1.2.2/src/timer/</path>
    <filename>timer__query_8c.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga54f6d3838ff4680fcda97952a60376ff</anchor>
      <arglist>(snd_timer_query_t **timer, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5d11f58dc15f5d12465f4e6aacae43cf</anchor>
      <arglist>(snd_timer_query_t **timer, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga13063464032aae91ab4e72dfdb57cb10</anchor>
      <arglist>(snd_timer_query_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_next_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5c10a9b8dc5f4442908fa3d15ab79169</anchor>
      <arglist>(snd_timer_query_t *timer, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_ginfo_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5433f9a5020b9db09939b51bfdecd449</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c0c9386149431c24b8260678afe57ea</anchor>
      <arglist>(snd_timer_ginfo_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf223a09c3d076947ed3c09cb4d6fec79</anchor>
      <arglist>(snd_timer_ginfo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacfde902fd8078764afa3c7cadfc5f53d</anchor>
      <arglist>(snd_timer_ginfo_t *dst, const snd_timer_ginfo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_set_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaebdec979e0c5a70100620cb7bf1c22d8</anchor>
      <arglist>(snd_timer_ginfo_t *obj, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_id_t *</type>
      <name>snd_timer_ginfo_get_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66c1351ff92884298849d650f98b0a94</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_flags</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3f4cf1a7e485c18aa16c9de159490f36</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga086c81db497d7818afabbaadb888731b</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c95448884b61a0f8a04c2cd134d5a41</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadcd41537e9db1c08d816a9f2fe1bea52</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga452c539c7c8c949bb446879e4d9151c2</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_min</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga33c9458b0a47e6448af0acc97d8860f7</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_max</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fbb78b3361209c15a0ece5bc2b939c0</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_clients</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497147a128b64374829408beb773316d</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafcab2e2ce9b0ab69641ca10ba6a5bc17</anchor>
      <arglist>(snd_timer_query_t *timer, snd_timer_ginfo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga03945b4d2bd9512de9a3fd923b71551d</anchor>
      <arglist>(snd_timer_query_t *timer, snd_timer_gparams_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4faf0668a3808f0b0f78f260af193645</anchor>
      <arglist>(snd_timer_query_t *timer, snd_timer_gstatus_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_id_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacc0a4c452e6dc6a9401da8b0f22cd14f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab60829b0a47dfc5ef88ce74e586ebe23</anchor>
      <arglist>(snd_timer_id_t **info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4c938bd81f93c364aff08de5e96a3cf6</anchor>
      <arglist>(snd_timer_id_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac6d57323807a3ea3f3f9fe1870cd4755</anchor>
      <arglist>(snd_timer_id_t *dst, const snd_timer_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga93bce2afe5e3f40f9f7adc17339273c4</anchor>
      <arglist>(snd_timer_id_t *tid, int dev_class)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga42ea98dbaf720519453c0110bd06fb8b</anchor>
      <arglist>(snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2cafa2722ebd48051328c8684c9c544c</anchor>
      <arglist>(snd_timer_id_t *tid, int dev_sclass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga82e2754532fa2b5b28733820eab4d600</anchor>
      <arglist>(snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga18406bd50ccd2818c7aa6fde6274a303</anchor>
      <arglist>(snd_timer_id_t *tid, int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga305324f73fc12e7e42891598613a2d29</anchor>
      <arglist>(snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c296e2bf5e2b0e1a71fe6612993e68e</anchor>
      <arglist>(snd_timer_id_t *tid, int device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa864bb9270989329f8acc86c5aec2093</anchor>
      <arglist>(snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga28a3d45e09fc45f97fd37d7338138544</anchor>
      <arglist>(snd_timer_id_t *tid, int subdevice)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7f52f12140cd97f267143cbcd0832d02</anchor>
      <arglist>(snd_timer_id_t *tid)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>audio_hw_format</name>
    <filename>structaudio__hw__format.html</filename>
  </compound>
  <compound kind="struct">
    <name>ctl_access_elem</name>
    <filename>structctl__access__elem.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_aes_iec958_t</name>
    <filename>structsnd__aes__iec958__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>status</name>
      <anchorfile>structsnd__aes__iec958__t.html</anchorfile>
      <anchor>a7a20cb45037d7bbc801c1738f754ccbb</anchor>
      <arglist>[24]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>subcode</name>
      <anchorfile>structsnd__aes__iec958__t.html</anchorfile>
      <anchor>a6de9312c8311619446de6a758aa5111f</anchor>
      <arglist>[147]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>pad</name>
      <anchorfile>structsnd__aes__iec958__t.html</anchorfile>
      <anchor>a7e077bda8cfcac92561f492500d7642e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>dig_subframe</name>
      <anchorfile>structsnd__aes__iec958__t.html</anchorfile>
      <anchor>a540ca9c71a82d2cc35350dd79e089d0f</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_ctl_ext_callback</name>
    <filename>structsnd__ctl__ext__callback.html</filename>
    <member kind="variable">
      <type>void(*</type>
      <name>close</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>ad61ac2d50057ede7b363a385979010fb</anchor>
      <arglist>)(snd_ctl_ext_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>elem_count</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>ab43cecb31b9bd2fb2d87ebdcff67980a</anchor>
      <arglist>)(snd_ctl_ext_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>elem_list</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a47d137dffe0f0ad99313785bc6abf6d1</anchor>
      <arglist>)(snd_ctl_ext_t *ext, unsigned int offset, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="variable">
      <type>snd_ctl_ext_key_t(*</type>
      <name>find_elem</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a9219dbb614782cb8d92f6d5632ef55e2</anchor>
      <arglist>)(snd_ctl_ext_t *ext, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free_key</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a822a8437aeb32b4ec2413c08a3502fde</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_attribute</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>add5650b201dc8edbc3eb14111d9bd389</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int *type, unsigned int *acc, unsigned int *count)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_integer_info</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a3c537dcf813d6a0c8cd7efc92cbaf417</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, long *imin, long *imax, long *istep)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_integer64_info</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>aad994483d97828f3d6941a70f46f46c2</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int64_t *imin, int64_t *imax, int64_t *istep)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_enumerated_info</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>adbebb8e8d3a2c8325bfb71736acdfa63</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_enumerated_name</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a2b0c9d3df2ec114369f099a479c67d24</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int item, char *name, size_t name_max_len)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_integer</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a65328da675e4c1ad959bea026109c313</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, long *value)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_integer64</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a531baab0b857e3c0fcea7641a9a107fb</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int64_t *value)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_enumerated</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a56e661ca05e9db6f0340d23673651d5c</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_bytes</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>aeeafda4a363eeb124ab21f7663cc804d</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned char *data, size_t max_bytes)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_iec958</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a95de209ca2f456797ddbba4cdf5b7bd0</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, snd_aes_iec958_t *iec958)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>write_integer</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a7313060836f8d45cf31a528ec2d8a6d0</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, long *value)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>write_integer64</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a3067fb89e0e4b71b7c0c9d3ec1cde0f7</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int64_t *value)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>write_enumerated</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a9c42eb6739a90477b7b3775b4972268b</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned int *items)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>write_bytes</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a844ce4698c73bb316bdbde1554353e4a</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, unsigned char *data, size_t max_bytes)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>write_iec958</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>af031bf7a362a9fde9e622be0d36bb9f3</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, snd_aes_iec958_t *iec958)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>subscribe_events</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a7669a306b86bfe1df7502e195688b855</anchor>
      <arglist>)(snd_ctl_ext_t *ext, int subscribe)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>read_event</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>ac99b6d92e4ca9c8e9115e38da0814bf6</anchor>
      <arglist>)(snd_ctl_ext_t *ext, snd_ctl_elem_id_t *id, unsigned int *event_mask)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_descriptors_count</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a89619794442bb2582d4921753de3a344</anchor>
      <arglist>)(snd_ctl_ext_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_descriptors</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>ae977e058fc11d25ba1a0dea4ebdd91b2</anchor>
      <arglist>)(snd_ctl_ext_t *ext, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_revents</name>
      <anchorfile>structsnd__ctl__ext__callback.html</anchorfile>
      <anchor>a03a4c55c5484584d06c263a08cbc0e26</anchor>
      <arglist>)(snd_ctl_ext_t *ext, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_ctl_ext</name>
    <filename>structsnd__ctl__ext.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>version</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>af3599d3baa6b5ceadecbfbd74b8b773f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>card_idx</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>ac922ab575590b3d179ee439c0891d952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>id</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a378f125e90ce9a0f20823c056d638263</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>driver</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>ae170b3a14d45d3bb830a91773bb832f4</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a186de36995e8f5d879fcf3abea5aeff2</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>longname</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a3863dfbb46d66f4cd43d93d42d58e393</anchor>
      <arglist>[80]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mixername</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a44e14783e538144eac71a6df139989b5</anchor>
      <arglist>[80]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>poll_fd</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a1b3bab17945ce89342aae1928bd33657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const snd_ctl_ext_callback_t *</type>
      <name>callback</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a24823fabe7534fdc7ebf0a12461ba9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>private_data</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>abae840f5d02c49540b23b23285248d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_ctl_t *</type>
      <name>handle</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>af014c69147bee94eaddca82d6916326f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nonblock</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a3688ec45a9f38ba73c1ae9058414b033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>subscribed</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>a3a07d58cb46680c6cb9023dbf72e3120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union snd_ctl_ext::@7</type>
      <name>tlv</name>
      <anchorfile>structsnd__ctl__ext.html</anchorfile>
      <anchor>ab6d216690759ed6dd1a6b8b61a900911</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_devname</name>
    <filename>structsnd__devname.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structsnd__devname.html</anchorfile>
      <anchor>a662af64d66720b53c3bfbcbf9f49ac1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>comment</name>
      <anchorfile>structsnd__devname.html</anchorfile>
      <anchor>a185ee8559a35e7f06b99f0ff1b36ed75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_devname_t *</type>
      <name>next</name>
      <anchorfile>structsnd__devname.html</anchorfile>
      <anchor>a5544e716ce4155fee42b262ccf15c245</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_mixer_selem_regopt</name>
    <filename>structsnd__mixer__selem__regopt.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>ver</name>
      <anchorfile>structsnd__mixer__selem__regopt.html</anchorfile>
      <anchor>a27a098833de8ddd7434870f301e6355b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum snd_mixer_selem_regopt_abstract</type>
      <name>abstract</name>
      <anchorfile>structsnd__mixer__selem__regopt.html</anchorfile>
      <anchor>a62d43bde34692931ead4ad14b5ad9821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>device</name>
      <anchorfile>structsnd__mixer__selem__regopt.html</anchorfile>
      <anchor>a7af8bc55a0c72c20649f4cb4d05030ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_t *</type>
      <name>playback_pcm</name>
      <anchorfile>structsnd__mixer__selem__regopt.html</anchorfile>
      <anchor>a61bee8b451175ef0aa5ae5a40c6a8c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_t *</type>
      <name>capture_pcm</name>
      <anchorfile>structsnd__mixer__selem__regopt.html</anchorfile>
      <anchor>a86b26f666adf984c55fd4fb488a4ab37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_audio_tstamp_config_t</name>
    <filename>structsnd__pcm__audio__tstamp__config__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_audio_tstamp_report_t</name>
    <filename>structsnd__pcm__audio__tstamp__report__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_channel_area_t</name>
    <filename>structsnd__pcm__channel__area__t.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>addr</name>
      <anchorfile>structsnd__pcm__channel__area__t.html</anchorfile>
      <anchor>a83acdf3245dcb74dffe74cce53d65876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>first</name>
      <anchorfile>structsnd__pcm__channel__area__t.html</anchorfile>
      <anchor>aba2a69e0d221beaa9f2f115254cb515a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>step</name>
      <anchorfile>structsnd__pcm__channel__area__t.html</anchorfile>
      <anchor>aedbe57a917a0ba24bf1f526387e6e43a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_chmap_query_t</name>
    <filename>structsnd__pcm__chmap__query__t.html</filename>
    <member kind="variable">
      <type>enum snd_pcm_chmap_type</type>
      <name>type</name>
      <anchorfile>structsnd__pcm__chmap__query__t.html</anchorfile>
      <anchor>a42a40687d56ed049fe37a574d1de0979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_chmap_t</type>
      <name>map</name>
      <anchorfile>structsnd__pcm__chmap__query__t.html</anchorfile>
      <anchor>a23b002f87fc431c366f0da7400b5cc5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_chmap_t</name>
    <filename>structsnd__pcm__chmap__t.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels</name>
      <anchorfile>structsnd__pcm__chmap__t.html</anchorfile>
      <anchor>aa2baadd3e92e15d68d970bc07fc8850a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pos</name>
      <anchorfile>structsnd__pcm__chmap__t.html</anchorfile>
      <anchor>a5fde2c651fb4f6d645d2c08f59118c2d</anchor>
      <arglist>[0]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_extplug_callback</name>
    <filename>structsnd__pcm__extplug__callback.html</filename>
    <member kind="variable">
      <type>snd_pcm_sframes_t(*</type>
      <name>transfer</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a05d30fcfe8fa57535c6eeadfb062ad8f</anchor>
      <arglist>)(snd_pcm_extplug_t *ext, const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>close</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a06f994b29889eae8f00b74248eb254cf</anchor>
      <arglist>)(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>hw_params</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>ab25bf52043d5e06885b6edcdb8269776</anchor>
      <arglist>)(snd_pcm_extplug_t *ext, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>hw_free</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>ad4d8fe041ed09e8b855c5ca45cb6899e</anchor>
      <arglist>)(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>dump</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a14901a03219c050a7980b18fe62265ed</anchor>
      <arglist>)(snd_pcm_extplug_t *ext, snd_output_t *out)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>init</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a7a12bd150cd2a09922c14e885f5c058b</anchor>
      <arglist>)(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_chmap_query_t **(*</type>
      <name>query_chmaps</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a433980d04f76d65305f119915f1f2cc6</anchor>
      <arglist>)(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_chmap_t *(*</type>
      <name>get_chmap</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a6b4c18d63bea69970d88af52ea205f6e</anchor>
      <arglist>)(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>set_chmap</name>
      <anchorfile>structsnd__pcm__extplug__callback.html</anchorfile>
      <anchor>a6865a675c9aa9632afa8889bd01a578a</anchor>
      <arglist>)(snd_pcm_extplug_t *ext, const snd_pcm_chmap_t *map)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_extplug</name>
    <filename>structsnd__pcm__extplug.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>version</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a91421a1d534f85fc70b2303f955a0f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a01ae590e2eb20d8054e29e4300a82706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const snd_pcm_extplug_callback_t *</type>
      <name>callback</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a881db5dcbe25076c7bd9fcef0a4f4f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>private_data</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a650a6f0a958357f7b91782cd729efa5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_t *</type>
      <name>pcm</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a37cd10fee022b34b8030d15f5cb0dbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_stream_t</type>
      <name>stream</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a3ea13d6c27a29ecac48b00304888379b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_format_t</type>
      <name>format</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a59aa86f8835a785e12e85a59107d8ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_subformat_t</type>
      <name>subformat</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a97a6650ec5390d450510558bb9ccdbe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a7af1a9cf446c5336d06e13194a367399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a8deeec4189830a54d5f26be1f1f2bd2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_format_t</type>
      <name>slave_format</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>af7139d1d35e334ac6c14b5e51b38d285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_subformat_t</type>
      <name>slave_subformat</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a23a61b2db905d645fcdf98f9c86715a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>slave_channels</name>
      <anchorfile>structsnd__pcm__extplug.html</anchorfile>
      <anchor>a866bd487dd9c2a25be8420bc2dfb3213</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_ioplug_callback</name>
    <filename>structsnd__pcm__ioplug__callback.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>start</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a7468068dda785aa176ff26e5133411bc</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>stop</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>ab1bb5494c38ee557129df62afdfb49bb</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_sframes_t(*</type>
      <name>pointer</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a4845417f0aebd54219185c7efaede2c0</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_sframes_t(*</type>
      <name>transfer</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>ad7dbd481a29d2f92c26d12695ae1d4ac</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>close</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a3e82606488e2ccb5148dbe1b39cb4f88</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>hw_params</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a57381783ffd6f0cea8836a151b0eaa87</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>hw_free</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>aaf77cc71c899d58b9a9348c5efeab72f</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>sw_params</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a8688847dcfab7d4e8a091f81aa351965</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>prepare</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a071405a306b66091c61039b7997d8685</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>drain</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a5bc9a5f9d0be0f284458a94e44b5fdb3</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>pause</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a68f7c891a62620fb90bfd929313e56b3</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, int enable)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>resume</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a1176d8570c78351ed5b957b7c6c5884f</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_descriptors_count</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a5c32d0aee17ebea124b3e8f11dad68e9</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_descriptors</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a6793d36d985acd08ca95776e59763b3a</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int space)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>poll_revents</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a7b8c4cab575b38ed24371b1afdc5c6b9</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>dump</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a839c05869c4dfd5e9b81224fe21c66fd</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, snd_output_t *out)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>delay</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a4ae1a94b5a4e1946750c2fc71c0197ba</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_chmap_query_t **(*</type>
      <name>query_chmaps</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>aadaf669911046e91fdba3b15fe2a4839</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_chmap_t *(*</type>
      <name>get_chmap</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a364feac16fc31f508ea67525c42e26dc</anchor>
      <arglist>)(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>set_chmap</name>
      <anchorfile>structsnd__pcm__ioplug__callback.html</anchorfile>
      <anchor>a8eb02dcaecc9b5120e6c29359167efa6</anchor>
      <arglist>)(snd_pcm_ioplug_t *io, const snd_pcm_chmap_t *map)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_ioplug</name>
    <filename>structsnd__pcm__ioplug.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>version</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a82212f3b4b3faf86e4cd94f73f3709f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a26cb709f26f0a27b431c4f8ac8a8432e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>aeeaec19c1ebc6c7f495e63f1dbb44077</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>poll_fd</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>ab5ec9a953c48eb2497320ca29fa70ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>poll_events</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>aa6d9e1a0e624deb63327949ec0993ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mmap_rw</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>adbd5412219daee8f2c79e971d1f53222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const snd_pcm_ioplug_callback_t *</type>
      <name>callback</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a4343b66b90eb1c0d1f80ff32405d11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>private_data</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>ac311b3a612c0d95b91cc16b9fe964cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_t *</type>
      <name>pcm</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a937fbef4311a361f4564d27a9ba4578b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_stream_t</type>
      <name>stream</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a8e67308342c0c6eab702016a402b4647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_state_t</type>
      <name>state</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a9a25a295689632b4de8e7e673f57e94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile snd_pcm_uframes_t</type>
      <name>appl_ptr</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a66cf297ebbce9453b4bbd961f081c730</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile snd_pcm_uframes_t</type>
      <name>hw_ptr</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>aa314200db67b8cc9ad89cd53f6102f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nonblock</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a5186222a90004912d0895ba47631423d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_access_t</type>
      <name>access</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>ac49bda6dd5d2e530d50478be89365ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_format_t</type>
      <name>format</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a23dd3c4e4a032e35a4cc9a4ca83a07ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>ad25aba6588312a3a8921971fb12bf789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>ab7cb56b9d1ade3b984fa96bd392b2c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_uframes_t</type>
      <name>period_size</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>aecac0c1343109c8b913b867ad7701f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_pcm_uframes_t</type>
      <name>buffer_size</name>
      <anchorfile>structsnd__pcm__ioplug.html</anchorfile>
      <anchor>a6138fb3dabf4c87a321c3e894021ff16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_pcm_scope_ops_t</name>
    <filename>structsnd__pcm__scope__ops__t.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>enable</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>aa744384266d37b6a5da08ef64806057d</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>disable</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>a460f0bb5a9a0c6d9b15f4fc544c00b8c</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>start</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>acfaeb9f753718f3d1600e9574bc2ca14</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>stop</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>aa61b0c38d9dfea1bcb9c3f9be5a49c88</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>update</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>a7773ae25296a75fd7fbc58b8fb1974c8</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>reset</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>a39fc5804679fe2f61cde653b47acb1d5</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>close</name>
      <anchorfile>structsnd__pcm__scope__ops__t.html</anchorfile>
      <anchor>a99e7b2862d0ef4f6cede404906f87d29</anchor>
      <arglist>)(snd_pcm_scope_t *scope)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>snd_pcm_sync_id_t</name>
    <filename>unionsnd__pcm__sync__id__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>id</name>
      <anchorfile>unionsnd__pcm__sync__id__t.html</anchorfile>
      <anchor>a42f85aaab5d7927def00f7194233e875</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>id16</name>
      <anchorfile>unionsnd__pcm__sync__id__t.html</anchorfile>
      <anchor>a75238d3dff8556b71aa4915bce0b8202</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>id32</name>
      <anchorfile>unionsnd__pcm__sync__id__t.html</anchorfile>
      <anchor>aff66b9e0a89932f03eafb1908f2b77cb</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_addr_t</name>
    <filename>structsnd__seq__addr__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>client</name>
      <anchorfile>structsnd__seq__addr__t.html</anchorfile>
      <anchor>aaf81b043e95acd9a939dbb8bae4e9d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>port</name>
      <anchorfile>structsnd__seq__addr__t.html</anchorfile>
      <anchor>a2bc35b6df26bf6b37e4c032b8522873d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_connect_t</name>
    <filename>structsnd__seq__connect__t.html</filename>
    <member kind="variable">
      <type>snd_seq_addr_t</type>
      <name>sender</name>
      <anchorfile>structsnd__seq__connect__t.html</anchorfile>
      <anchor>ae2cf2bca3746f3209cb977d7e489f9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_addr_t</type>
      <name>dest</name>
      <anchorfile>structsnd__seq__connect__t.html</anchorfile>
      <anchor>a330ff64e8768594e1798db90db37d9f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_ctrl_t</name>
    <filename>structsnd__seq__ev__ctrl__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>channel</name>
      <anchorfile>structsnd__seq__ev__ctrl__t.html</anchorfile>
      <anchor>a05cfb2c7d38e75e4b535bc3f8d9802fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>unused</name>
      <anchorfile>structsnd__seq__ev__ctrl__t.html</anchorfile>
      <anchor>a00d5c02a2da001b1d1101d7e310e7c6b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>param</name>
      <anchorfile>structsnd__seq__ev__ctrl__t.html</anchorfile>
      <anchor>ac7ee038e62130dee88e50d02f8f26015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed int</type>
      <name>value</name>
      <anchorfile>structsnd__seq__ev__ctrl__t.html</anchorfile>
      <anchor>ab0bd2b7b3297df12c1c0bf8ab71ae1df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_ext</name>
    <filename>structsnd__seq__ev__ext.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>len</name>
      <anchorfile>structsnd__seq__ev__ext.html</anchorfile>
      <anchor>a5a499abd06bfcaa7a21c02d20a542bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>structsnd__seq__ev__ext.html</anchorfile>
      <anchor>ad5a82d43f137b752604aafa367f7624a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_note_t</name>
    <filename>structsnd__seq__ev__note__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>channel</name>
      <anchorfile>structsnd__seq__ev__note__t.html</anchorfile>
      <anchor>ae1782c1f93e5229e07eb2eaf05ceeec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>note</name>
      <anchorfile>structsnd__seq__ev__note__t.html</anchorfile>
      <anchor>a97803cf476f3a352463daf483caa3db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>velocity</name>
      <anchorfile>structsnd__seq__ev__note__t.html</anchorfile>
      <anchor>a92516544f8de5cd35d4eec124f53aa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>off_velocity</name>
      <anchorfile>structsnd__seq__ev__note__t.html</anchorfile>
      <anchor>a94d2280005b5ddfceb76bd07317b87b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>duration</name>
      <anchorfile>structsnd__seq__ev__note__t.html</anchorfile>
      <anchor>a9e2766add0001a72699e21c82755358a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_queue_control_t</name>
    <filename>structsnd__seq__ev__queue__control__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>queue</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a14b3611c58090f9e65b7505c5d69afa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>unused</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a60640082c691368f21db12c11ef62aea</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>signed int</type>
      <name>value</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a6fe9b082ffe83dfabb0e335664d73ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_timestamp_t</type>
      <name>time</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a0bb1053e4dfddaa448be19674c8d26dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>position</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a74925f844e657c06a373c895e48b12ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_queue_skew_t</type>
      <name>skew</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a99ddb8cf040c98f36307a9fa2bcbeadf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>d32</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>ad30b1b1083d4114e44032578c32c2529</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>d8</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a71d6f322eb144556594d3b281d5b7070</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>union snd_seq_ev_queue_control_t::@3</type>
      <name>param</name>
      <anchorfile>structsnd__seq__ev__queue__control__t.html</anchorfile>
      <anchor>a38e8bab5fd2ee0b719efc18826ee33c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_raw32_t</name>
    <filename>structsnd__seq__ev__raw32__t.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>d</name>
      <anchorfile>structsnd__seq__ev__raw32__t.html</anchorfile>
      <anchor>af707be5ea82326876dc59c191088dde5</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_ev_raw8_t</name>
    <filename>structsnd__seq__ev__raw8__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>d</name>
      <anchorfile>structsnd__seq__ev__raw8__t.html</anchorfile>
      <anchor>a95f2bd30f7b70c5e89eba8df0cbf6d91</anchor>
      <arglist>[12]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_event_t</name>
    <filename>structsnd__seq__event__t.html</filename>
    <member kind="variable">
      <type>snd_seq_event_type_t</type>
      <name>type</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>ab4076699c7f089b0d44c626a69311b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>flags</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a36f20069e7e9ce04fd60b4d0a8408b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>tag</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a6027db669ee78712c1924754a10817d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>queue</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a3357b5c3701e93e62eff0bb43f10b6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_timestamp_t</type>
      <name>time</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a455b8a2995b2978db1b3b862ad7b5b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_addr_t</type>
      <name>source</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a7043d2583446dfcb3da764d803b4a03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_addr_t</type>
      <name>dest</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>adcdb44ac09b5f7ca6f791740fee5e51c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_note_t</type>
      <name>note</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a71ca4f3c6683c7cbc9a5ff82937da3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_ctrl_t</type>
      <name>control</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a473f1c2e614ed9f5ae563346341cab88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_raw8_t</type>
      <name>raw8</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>ae796ca8b6adfc5e6a874c0b378bd66b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_raw32_t</type>
      <name>raw32</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>ad171ff124fd922b8502911fd4de74c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_ext_t</type>
      <name>ext</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a8074bfd05bf73ae00227f7820dbdad95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_ev_queue_control_t</type>
      <name>queue</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>aa16cf5889566a658ec1ab2389513b4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_addr_t</type>
      <name>addr</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a3a2df2fd3def9f0443bd4759b3cf4077</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_connect_t</type>
      <name>connect</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>abc904510a9352fa2ec177192a69baca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_seq_result_t</type>
      <name>result</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>ad098a05b58c64ceded9233fb14daf3b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union snd_seq_event_t::@4</type>
      <name>data</name>
      <anchorfile>structsnd__seq__event__t.html</anchorfile>
      <anchor>a8b478d3e4f4db0e902acca5c782df983</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_queue_skew_t</name>
    <filename>structsnd__seq__queue__skew__t.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>value</name>
      <anchorfile>structsnd__seq__queue__skew__t.html</anchorfile>
      <anchor>a875b622719a77813b9c826cb87664c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>base</name>
      <anchorfile>structsnd__seq__queue__skew__t.html</anchorfile>
      <anchor>a02ab20f62ad37915be1dd929254d9b3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_real_time_t</name>
    <filename>structsnd__seq__real__time__t.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>tv_sec</name>
      <anchorfile>structsnd__seq__real__time__t.html</anchorfile>
      <anchor>aeeb195e734102b35594128bb28e9c7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>tv_nsec</name>
      <anchorfile>structsnd__seq__real__time__t.html</anchorfile>
      <anchor>a79e39ed4061a4fa572275954d253a4bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_seq_result_t</name>
    <filename>structsnd__seq__result__t.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>event</name>
      <anchorfile>structsnd__seq__result__t.html</anchorfile>
      <anchor>ad1f43479445e2d272a60bec247eb24c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>result</name>
      <anchorfile>structsnd__seq__result__t.html</anchorfile>
      <anchor>aa4bd7e2e9f86b95a48922c2caa672c48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>snd_seq_timestamp_t</name>
    <filename>unionsnd__seq__timestamp__t.html</filename>
    <member kind="variable">
      <type>snd_seq_tick_time_t</type>
      <name>tick</name>
      <anchorfile>unionsnd__seq__timestamp__t.html</anchorfile>
      <anchor>a0eeb11cee9e96defdd4a6d35640aa6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_seq_real_time</type>
      <name>time</name>
      <anchorfile>unionsnd__seq__timestamp__t.html</anchorfile>
      <anchor>a013e05e7f01cac7bc23d96f39e233cd0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_timer_read_t</name>
    <filename>structsnd__timer__read__t.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>resolution</name>
      <anchorfile>structsnd__timer__read__t.html</anchorfile>
      <anchor>a74c2d329a2a2c9c3bc53d5678b0fafe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ticks</name>
      <anchorfile>structsnd__timer__read__t.html</anchorfile>
      <anchor>a6f1deb447c21188ac4590e872358edd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_timer_tread_t</name>
    <filename>structsnd__timer__tread__t.html</filename>
    <member kind="variable">
      <type>snd_timer_event_t</type>
      <name>event</name>
      <anchorfile>structsnd__timer__tread__t.html</anchorfile>
      <anchor>afd48df7380e3b1b57b84feaae62c7fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_htimestamp_t</type>
      <name>tstamp</name>
      <anchorfile>structsnd__timer__tread__t.html</anchorfile>
      <anchor>a18a654c60721911059e616c5573df91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>val</name>
      <anchorfile>structsnd__timer__tread__t.html</anchorfile>
      <anchor>abcc89d10ed874ec570d1c260ab7d8a71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_bytes_template</name>
    <filename>structsnd__tplg__bytes__template.html</filename>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3550150a1ee6e26abeab4bc0da5d0da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga23b07058274bfa51f093380ac9ee5e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaaddecbbc7a836db2be9ced8bad8cae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>base</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1644bf685a8915059c39b70a21673ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_regs</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad46cbdd6e9a9f5dd2f1b840de64dc26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_io_ops_template</type>
      <name>ext_ops</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga57c109fd38fe1bc72b5338aec60f8245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0d9aba951ddbedcd5fab22ad504ca8ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_channel_elem</name>
    <filename>structsnd__tplg__channel__elem.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga36364828c2bdee77a96cf1819b0aec3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reg</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf374c95d02af421cbc69464f54cec8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shift</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6f76c415ba4b2c074da2cf11ac7cd5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga898d38fbbec2ca83ce3475c314a323a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_channel_map_template</name>
    <filename>structsnd__tplg__channel__map__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>num_channels</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga02ac7ec7cf8cded80d70ceb15806f3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_elem</type>
      <name>channel</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa22b2a1d1e1bc5bf5660007dbfca7698</anchor>
      <arglist>[SND_TPLG_MAX_CHAN]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_channel_template</name>
    <filename>structsnd__tplg__channel__template.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_ctl_template</name>
    <filename>structsnd__tplg__ctl__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab67cddcd99af948e7f1c31e88fae277b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac22769fc8e2dee6739f6b0d0617b939c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>access</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0a3e7fa10db19ea81524fe6a55f92e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_io_ops_template</type>
      <name>ops</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab717044852e6fe75883956a9a99d0493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_template *</type>
      <name>tlv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac99aa1726d01df67900f6f264a55c8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_dbscale_template *</type>
      <name>tlv_scale</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabd3e68eab5ee13b3cadc02d6f937baf3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_dai_template</name>
    <filename>structsnd__tplg__dai__template.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>dai_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab6eb2404fd71f31fe912644565ae5a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>dai_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac9591895151579a58014878056c0ed50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>playback</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad0475981bd65ebd68f07761fcdda0c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>capture</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabb31fddfe9470f8a35b23fe959a81d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_caps_template *</type>
      <name>caps</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaea3a45a2cb2080519d34fb92d1b96c43</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flag_mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf964100a9a503410ed7bf4269d47d017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga43e1662068364ef2d3f24cf8adbd98ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6456fe317c9652f0dbd19d566f5c5faf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_enum_template</name>
    <filename>structsnd__tplg__enum__template.html</filename>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga480256cd2b82f47087f109bd8e939a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_map_template *</type>
      <name>map</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga56f870a612b4c677fb8b4d650764f410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>items</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf09e055898f81af586d8069216903428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabe76d8bd0e24508c83ea8a7b88bacf6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char **</type>
      <name>texts</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2b04f038f41433f492427b5008228271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int **</type>
      <name>values</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga16bdcaa3cec9d1a73bcda6e366bbc345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga22b1054a71ee0d81f7bcfde5dbf5f9e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_graph_elem</name>
    <filename>structsnd__tplg__graph__elem.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>src</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga103c8eebede5adb8b494f11647f67949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac51f4e6cca8bbc05d1db9985d6dc751c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>sink</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga536989e825d1d329cc75fd1cc74687da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_graph_template</name>
    <filename>structsnd__tplg__graph__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2246efb27a440795ee0afd6870c0a048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_graph_elem</type>
      <name>elem</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1600ae422e1746d831b41489df6a6197</anchor>
      <arglist>[0]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_hw_config_template</name>
    <filename>structsnd__tplg__hw__config__template.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_io_ops_template</name>
    <filename>structsnd__tplg__io__ops__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>get</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga954cfcdc65427888bdfa54b6ada8fc50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>put</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf1f9a46547467dcc560769e35e1c041e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>info</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c49bcef09fec6edb7526e396ab7be0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_link_template</name>
    <filename>structsnd__tplg__link__template.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10d5beb2799114b6fe8b837c242faeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2added05dca19575812143e658fbc743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>stream_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1f298db79d5a4d66e29eb599eb1f23d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_streams</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c4c04ed502e0bfe550d1bf78f2d8bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_template *</type>
      <name>stream</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad22af2e86c2a06714c50e6dab4ae042d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_hw_config_template *</type>
      <name>hw_config</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0c8c9d7a828ab74e896ffcdd8d4b1dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9844eaaebb064f80cfeb9685c4ebc026</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_mixer_template</name>
    <filename>structsnd__tplg__mixer__template.html</filename>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga47753d107c983bcaa5f45d7b3394acf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_map_template *</type>
      <name>map</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad627bd602b491c441a8a4c9981d1fd0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga653a7de4072039fed489b2f8a2109f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga70e434e24b7f4ad3fea7285d9bb44d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>platform_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa8e7d9900d359f3b8ecea793ca5f7976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>invert</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga4b90c9c6c15ea142453f0dc52a8138b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1bccfdefa76cbb03ec73c64b25e0c821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_obj_template</name>
    <filename>structsnd__tplg__obj__template.html</filename>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_obj_template_t</name>
    <filename>structsnd__tplg__obj__template__t.html</filename>
    <member kind="variable">
      <type>enum snd_tplg_type</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5ac8a01fbb895f368c4bacb574def128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae9298a874663f911b54f4019a20171c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga21e20bff5cedad485802af1362d6810b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vendor_type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8ab68f45554811560909ff630f59d6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_widget_template *</type>
      <name>widget</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac5cba47b570ce40dfdbc28f514696642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_mixer_template *</type>
      <name>mixer</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gace1a0174ae799778c44b18783a60814f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_bytes_template *</type>
      <name>bytes_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga327919369281666f2aac412b78cb4a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_enum_template *</type>
      <name>enum_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab176a05b65dce92dc7228a6c5c53c96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_graph_template *</type>
      <name>graph</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga72cda3f3084484e460f87f2be50ce965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_pcm_template *</type>
      <name>pcm</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga63cb6b1014c9f038cc4bfee52cede2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_link_template *</type>
      <name>link</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga01169020ecbc3c5b8112bea25eb3add4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_dai_template *</type>
      <name>dai</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10ec5352b32b8f12ae51964a341126e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_pcm_template</name>
    <filename>structsnd__tplg__pcm__template.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>pcm_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga37af3b032598a685bb1abe9262eb17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>dai_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3ef92a1f767b2ec579bf9a900d00cba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pcm_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf347aca48a61d3ab51496fbd83171b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>dai_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabd9e09d11267771903d472c86a4f104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>playback</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0b20c874ab97aa7e9638ba6bef765395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>capture</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga7074892753c00db0c79a5b0a14538038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>compress</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad85ac3b2cf144479b04012a2654048a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_caps_template *</type>
      <name>caps</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8baa9705e9cecf2d4a35a2f614e9dd61</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flag_mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac41d78c2b3e445f71a95d686c1b3c726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga330cb10c95215d2c4fb733e090a394a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa17cb2cf7b33eaa7aaba9a7c0b7858c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_streams</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6230c8e843c6778a1ebc3e5af5aac21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_template</type>
      <name>stream</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaad9e8ff62a714640aa13587897b8b6b1</anchor>
      <arglist>[0]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_pdata_template</name>
    <filename>structsnd__tplg__pdata__template.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>length</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8d7459e2d6ad42e57216056b490212ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>data</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga71ae42f26f96e9c1b7053163a387e5bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_stream_caps_template</name>
    <filename>structsnd__tplg__stream__caps__template.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae54c502a3da78e5fb6cd9c865b0c9bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>formats</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9243e7f40be6bc8253b15e79ab360bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rates</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga30da03d09614fb0d6dea9691cea9e10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaedddf98535f00c8179404e04902baa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10beb74b167ef2c3e047d2eb1bd34719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab59baf2b2817643d761b89ed06d7f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad85ba3f579508873b207a337a028a788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>periods_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0f70617bbd247a83070e3a1f191e6638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>periods_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5ff0469829c717608920acdf6b3936f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>period_size_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9af255ce42a1ed49b5afdbd319e48f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>period_size_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga52fb1c2c276660aaf44b52d3695bf942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>buffer_size_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaee27e0c3f72a2758cdb05cd496938d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>buffer_size_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga33a0505b7215aac418e034a2017516e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>sig_bits</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gadf73ad9d6eff2bfec6172a0ef2cccf5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_stream_template</name>
    <filename>structsnd__tplg__stream__template.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8c683c2bfc0f6f81a13e9b17c8032905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>format</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa020a51c90d9c940fc370d6cfe8cb222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rate</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gacae6d898504ccf7413491988f2acb5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>period_bytes</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0ab0be7080dd51570018c95e774107f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buffer_bytes</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gacc03d35ac9685afcdf44a4d1332d5284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channels</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac61dcb6e9419a2eb36b3c634ff2e1dc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_tlv_dbscale_template</name>
    <filename>structsnd__tplg__tlv__dbscale__template.html</filename>
    <member kind="variable">
      <type>struct snd_tplg_tlv_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1ffcf8621a8e6cc663f42355f619be1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga357f81502e953696483d93027f63e0aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>step</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa639e5d57583a1b451ee08f2652e96cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mute</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c6e4473806526a2f536991d499180fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_tlv_template</name>
    <filename>structsnd__tplg__tlv__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae387167827b44dd3e98db6910d1f667e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>snd_tplg_widget_template</name>
    <filename>structsnd__tplg__widget__template.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1ad4db72a1e67ea42bb86c825a466a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabeb31c5543b70053912437c03d7de386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>sname</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga63fd73f78d4ca4fbf63e374f390f5f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reg</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga98347cf0667a76a5be4d4238b99e60d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shift</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf6f8bfc8933b8e9863c2396a51022629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa238963cf4b43ad0d01b03b7ca9ddd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>subseq</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5cad88b8e70582073acf8a5fe2148455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>invert</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabc524e132701525c85157b9021a92d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ignore_suspend</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga69970ccddf3e0d16aafd1c29d572568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>event_flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6ddd7e49bae0beeba4f0dea82cd0c0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>event_type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8a2202f02af34a89c2168ed73bf9168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab9cc62ce443fe576ad1fde50e75d19f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_ctls</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8410052e0b03c98fffb3d308243879b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template *</type>
      <name>ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga536bbc63f605da667db76cabf42c40f1</anchor>
      <arglist>[0]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tplg_alloc</name>
    <filename>structtplg__alloc.html</filename>
  </compound>
  <compound kind="struct">
    <name>tuple_type</name>
    <filename>structtuple__type.html</filename>
  </compound>
  <compound kind="group">
    <name>Global</name>
    <title>Global defines and functions</title>
    <filename>group___global.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__SND_DLSYM_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gafefcb2bb4a877727b16de5c56e09055b</anchor>
      <arglist>(name, version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_DLSYM_BUILD_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga355c462c8c5dee0aeadae17d096ba531</anchor>
      <arglist>(name, version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__STRING</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga375c4dc9f0fb338999de81aab826f9d6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_DLSYM_VERSION</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga7bba39703a3275de48b3e919a2849c4b</anchor>
      <arglist>(version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__snd_alloca</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga0d723ca68908f9c4eb7c6e9eb03cff3f</anchor>
      <arglist>(ptr, type)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_async_handler</type>
      <name>snd_async_handler_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga8cd9a1d441e9219ca5f2ff04094c7c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>snd_async_callback_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gaf8937eadd968df14b64e54f49c29821c</anchor>
      <arglist>)(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="typedef">
      <type>struct timeval</type>
      <name>snd_timestamp_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gadd377862d568809fb0e32c9faddf99a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct timespec</type>
      <name>snd_htimestamp_t</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga3a3f5b65c40f498cdbc26944bd9855cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_asoundlib_version</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1b8d6e2acb0a62de5c23bd8aef3ec225</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlopen</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga8d048fb538f1487e030396866c0374dd</anchor>
      <arglist>(const char *file, int mode, char *errbuf, size_t errbuflen)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_dlsym</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gae865f293c8771998b2b6a9f25a135408</anchor>
      <arglist>(void *handle, const char *name, const char *version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_dlclose</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga7cc0866a9d1fbce4e34a8b342674836e</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gafd936c40505997bb659b74bd368636b8</anchor>
      <arglist>(snd_async_handler_t **handler, int fd, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_del_handler</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>ga1c0bd4d123e9581a749b80e2df48b4e1</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_fd</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad601f70e0405a8522860edb15db6350c</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_handler_get_signo</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gab32c9afe265784634c78e7a6b5d27abe</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_async_handler_get_callback_private</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gad9c76588a87918901c6273e6bc98a1bc</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_user_file</name>
      <anchorfile>group___global.html</anchorfile>
      <anchor>gaade4b91c735abcec70101b9d83b11126</anchor>
      <arglist>(const char *file, char **result)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Digital_Audio_Interface</name>
    <title>Constants for Digital Audio Interfaces</title>
    <filename>group___digital___audio___interface.html</filename>
    <subgroup>MIDI_Interface</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PROFESSIONAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga97c58195ef5fb340df3e72835ee9e5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_NONAUDIO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga402d9cb929f4b34b15ee68bf58c3090b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf1a8cbeb6c854e3ad22c780d2fe6d223</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8026c5c8da4329ede09678cec3ea9e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_NONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf662b1163cd3909990c0feb942f05826</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_5015</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabf51b5af88e18019261c53a9746f78e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_EMPHASIS_CCITT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac5d5d6443d27427950a2ae23c24a32e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FREQ_UNLOCKED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5c74dda29181e1479d00a972cb26bea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3b181eebbb9fdf22f732e6de663db463</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3200c4b6210dccc94b229697f7b19326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga66740e89c8a4cd1b07f6a1d7e13a673e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9562a343db9ceaaccb6cbc271cb01cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_PRO_FS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac12894a52ea07dad7e72f82494bc8006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_NOT_COPYRIGHT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae11f8d6b05ccecc8c4d1b6ed87926e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga56437af18b56ae9d3726ec4794f9f972</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS_NONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaceb4a50b57361207a9f6b74079113b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_EMPHASIS_5015</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga82e03cee892fd9f9b7ba34bace351693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES0_CON_MODE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad9feb0c82f3518c86ef5972da33bccbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga540c428bf5e00276772cef111b239230</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga641543783d5fa4e66ae6044b8b5d522b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_STEREOPHONIC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae946f14befaf6847a0994db2b5ed090a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_SINGLE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6c68916803b33a32cad746568a44bac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_TWO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gacba2d2f55e48b6ae039d9bf88b504e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_PRIMARY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac679691c061b7640e9237aea2f1f30d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_MODE_BYTE3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaee8adbb79b7c60c00c9ffe1e08197c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3ce0307fe1a8beea424ca307dafae8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabd629bd8c560239cf6e8de3eb87e3bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_192</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab0df701227e3c8e34be4d2ddfa4a8df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_PRO_USERBITS_UDEF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga81dbae23918f429b02c9033e16b8e378</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_CATEGORY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae842ac365899b386e01bf6942b1cb7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_GENERAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae182fcf7f8a1733f2c5e4b5587527283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASEROPT_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf90ddee8292f65124e2fffa30a5a9d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASEROPT_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac82edcac4d1ce308a081274475de4dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_IEC908_CD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0c9c45847a8455691605b38f3585853a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_NON_IEC908_CD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae4c8e119b97cd7eb0de2a0decc09b366</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MINI_DISC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaac27175ed581307d5757ffd350ba7661</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DVD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaabf34744bbe8ea896f0b39d61fa3be7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_LASTEROPT_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3a515ec23e25656a7d982150881caecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga02af600c964452ba2548aa10bc39264d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0a26b9dc738e0f46f2b8913b10adcf4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_PCM_CODER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf9c2970ac74fe81cb12d83e67b2018fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MIXER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaea7af8b4644f58a5d4c1105359f85988</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_RATE_CONVERTER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga21278dabaf0648061929ca4fdda258af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SAMPLER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0fe7eba08e30f91adfcb8b2375053521</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DSP</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0862a58090e7233db6bcfdd892e3aa98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DIGDIGCONV_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabfd2f1a82a79b644a8a93ce34184923a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8537f28c815187771ea66108dae94f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga692a8af33eb60c4fe104be7dd7e426a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga32099784b78ae39e4587af8694d69e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_VCR</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3a79d0e9622e975fa54de9310f30af19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DCC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga16af02aef1db016caecec4f1066836b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_DISC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf123dc5db88df762b11a9185424b1420</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MAGNETIC_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac21e25d4a6813f8fdfe0082560884fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4ca6b18366f7fde2205edce2999f47ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga47a74bdfbe9d1e6959d349e8ab80d7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_JAPAN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaacd5b408613d9f71f0c280b5701e2440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_EUROPE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4dcf52d3ac3d49910065c354aa414705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_DAB_USA</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2d629fc804ed4919c033c05300099f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOFTWARE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9639133b1ddd2134bd528a7ab4fcb9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_IEC62105</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga75e5d3da5be611cc78a58daab238b21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST1_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf6a21ac22b5f53b76afa8a44d63c0dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST2_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga72aaceaf66179a76bb5d9099c63728e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_BROADCAST2_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga64892ac2ecdd6a1996c45e32da8e24bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5a734cc7948c359e625f834ca17d5fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab96cdba31d93e8bc32bc334f2d2b0178</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SYNTHESIZER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3b66b47f2d1ef5130326ba66f1232bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MICROPHONE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga811f9cfc2f3d08837287d0cdc2808aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_MUSICAL_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8722821c881d9bcda9f5ce707feaa9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gafeb779781b4c579421e7cf147202c262</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae96ddec88024369ffb208ac37896056a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6c2ca2e9d69e5e098bf1d6b2bacd25d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9ef0514a51833b9776b9a996100866f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga59bbb9a68d11eaebcbf10c5440cfac62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1e0b7c10f92767978a62e92c1061c90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5dc282789fd6b0459263700ae666e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ADC_COPYRIGHT_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4f2c8ea8075b6b3da55b68329932632d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_MASK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaabb2e0b9b0f5156a96e1d5be698755cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_ID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga74c49715f4f185922f257a92ef438a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga48d338b34e97374d85a22a78713504a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_SOLIDMEM_OTHER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga035190360ade18728cc20922af991adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_EXPERIMENTAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac4bf15bc084373a97e239e66fd3ba6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES1_CON_ORIGINAL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaa263d6ec3b5a616d7a0940f85e4c8501</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga955515228f306d77b9fbbba0dcb6af2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga61a44c8284e22339a93fe89a11f902e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_24</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2f796cb061365ce054f5f95a617bfd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_SBITS_UDEF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaeaa0821017495062cc52254e07353e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e698ad6e0567020186df2815a0e667a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga82f26d84cdc05454003479cacab6cc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_22_18</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0cbf7583c33befe07f1e30e1d0c51049</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_23_19</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gadb22493f9fcca99d94680ce0f3e67173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_24_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf9ac8295f1b2217d752139d914a219a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_PRO_WORDLEN_20_16</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac0c6d1ecf87c38e0ed2bce5c295b2542</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_SOURCE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7348f373085c32e12e1b3662111745d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_SOURCE_UNSPEC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga38e56580f61fb843890b54b1029a2636</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_CHANNEL</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1ea33bab0780d90aa9402590952f32de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES2_CON_CHANNEL_UNSPEC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaed3a633e36b0dd83e5c0ab096a5f0110</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3ad13472b50029f0272689a8bce8e607</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8a3d3c0b08298ecc43e011a936c482d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga5221dc78ca1f55a042e167ce1c91cb8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaadb13bb8818fab6d1328138ba8d1d00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabcf093b8225ad76e08af8af003bfe166</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_22050</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga60669b8dadf595dc14a3ae0f5e7788b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_24000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4eb4272aa2f3544a8a77b960c1e27177</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2053e6a6430ff3156008b22b10b6cebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_768000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaa593dda0427d63f95d0db2b0d4b9a256</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga992a47bbf0888233d5128c0ed85acf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf800b239d7f6e86b6826c16f372bfebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_FS_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga9901bc1e5e90f2f7cc328d18634cac69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga01bb79669e104ba331435ac6bdd5adfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_1000PPM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaca2f253562c14ece6e5c26f257439cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_50PPM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac82cc51c466ecd46a86aec627fcb95d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES3_CON_CLOCK_VARIABLE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6191857e900ff5ce0884607224c5e4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_MAX_WORDLEN_24</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga56bb9b04a55bd0e3956e97dbd82f017a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad28bf206daee452c44d769e9665455c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga987aff90a3a7d1d834b96b2b10d9e242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_20_16</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga587b7055ad6e5c5eaecb30f1c12c0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_22_18</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac11e04b988aca011aae2e93cfcdc61df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_23_19</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4c67a2e8aa2b0b60b1ac89750262120c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_24_20</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab105e55680449b82d8156fdc17f30753</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_WORDLEN_21_17</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf3cb2ff0ccbf443402201f6dd349b18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad89c6a706e18b6f425504a78915f7352</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_NOTID</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga06fc6b7080d5953720585e5d158c5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga519d879e28f534704c16238f0ce2d9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_12000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga3beca329332ce84cb5f8b60a6779db6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7476b49b1d4617ced4c984ea28ceb381</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga54ad73cd0ea70b03a5552b459487b55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_8000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga04ffd70501149edf567f7f5772b32056</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7f295758be11ee5614b862d92347050e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_16000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga87d68b79da8b13c222eef8c12363f19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_24000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaab4f8c9584593003e49a3eb0b0a5433a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_11025</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad7d7f4f62bc1b9a7f1243025c134cfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_22050</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf8b2783371b072694d9ae071983e7c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae6d0be1fcf49859d857a3c73c8016e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga44e44b55346acd1404ab9672678b535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES4_CON_ORIGFS_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga972fefc77f659ba6990182906f916df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga7d47fef6131eb61b127f755533f2483d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYFREELY</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2ad44dadd10dba1f0990cd7b80778261</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYONCE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab8fdbac028c693f87d8d720608ee14ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYNOMORE</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga13caf34dd818cc7e450dc7c54b365b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IEC958_AES5_CON_CGMSA_COPYNEVER</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga2ad26c32c5a392cef3c66fa6ed1e6af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga45c64614e861149f9299a6a1321d1e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6fceafba38680f014805858c2af5ca62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga993c2caeaf46c6b9cab87b0e4bf251c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_IEC60958</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad76f265a55d91d115645be651964cf32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_AC3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga41fe4e683e171406cd47946402e385ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MPEG1</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga014612f4d4dae9860a22e1a5df622831</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MP3</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaecfec4ce55ceeb6286886849f07d92ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MPEG2_MULTICH</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gad62aa7f1c9cc11d6d60fbd7cad125762</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_AAC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga58a401207154e5e77d68fa9350a90486</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DTS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6b5f146df336ec846754b71b61fc9fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_ATRAC</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaf432c0b35c71744a5032c9b400fc48fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_ONEBIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac43d7833f2c011fe293adda349bc7edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DOLBY_DIG_PLUS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab5c9ad651feb9c74dcdee87655ad09cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DTS_HD</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab189bbc6a61403483f05aead2c97b6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_MAT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e28bd68dd6b36b35a3f949ef3053393</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_DST</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga8a321715e7c870ef20f14e33656faa6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB1CT_WMA_PRO</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gadfb4ca00a7e85cdd6d34208709fc1f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gacf8e432eb4fe55d966586640bd92978c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gab3ecc4e2bf136e590f14f6b60f8f7241</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_32000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga33679f1883c96a31f419d5af66af8183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_44100</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gafd7b919aaf615dc3c5805434d12b5d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_48000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1c9a4b7c50c4f3b8c62a25bfa400304e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_88200</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae1f95540d9d0c2c7b86ae4ebece7f9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_96000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga0af799ff15bcb723384a3b226b0a4cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_176400</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga99bf81e57a25c751e57d24aa9217e973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SF_192000</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga156520e6b8425fb44e927aa978465030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga1144fbf8f1139a4007f8df69431b4fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_FROM_STREAM</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga6e9188c5617dc3884382287ffd232540</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_16BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga09d479eafd6b86f36f1da42cd4861ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_20BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gabc15645324b2db6ce5d5bebb04a0526b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB2SS_24BIT</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gae995e3c17fd3a49b300bf114fb416194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gaded9605e39999103c8fc5fbbb4fefc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH_PERMITTED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga4adef6e38757164bb6223b440a6b7878</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_DM_INH_PROHIBITED</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>ga27c514dff93f90c60d841216ac93c151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEA861_AUDIO_INFOFRAME_DB5_LSV</name>
      <anchorfile>group___digital___audio___interface.html</anchorfile>
      <anchor>gac020dc308426ed5a73dfdb4ee393a4fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MIDI_Interface</name>
    <title>Constants for MIDI v1.0</title>
    <filename>group___m_i_d_i___interface.html</filename>
    <subgroup>MIDI_Commands</subgroup>
    <subgroup>MIDI_Controllers</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CHANNELS</name>
      <anchorfile>group___m_i_d_i___interface.html</anchorfile>
      <anchor>ga853f116aedf96740852e0729dfff46dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_GM_DRUM_CHANNEL</name>
      <anchorfile>group___m_i_d_i___interface.html</anchorfile>
      <anchor>gabb2734ff657b26036f4c232818f1921c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MIDI_Commands</name>
    <title>MIDI Commands</title>
    <filename>group___m_i_d_i___commands.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_OFF</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gafb4313c1ed19a4e91ebf7baa2b64b4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_ON</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga837edb2383446176b3cc7894653ffaff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_NOTE_PRESSURE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga0c11a776c4031db664b3f95dea6fac26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_CONTROL</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gabdc476e199b757e06d94cac18734e423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_PGM_CHANGE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaaea4cbac7d447bba2b4d8fdb9d7c7c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_CHANNEL_PRESSURE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaf74bf6a4f7d689e0cea7f4c9d733fa8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_BENDER</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga9c7761339374918c7aee48d8a4d9bb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SYSEX</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaa638aafe78574c77acfeed7cef777dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_MTC_QUARTER</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga9f99648472bf5144fe98c21e7102b229</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SONG_POS</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gae5eadd56cbd44b03d56abf0b34b1f3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SONG_SELECT</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga7548ca8555174ae0bd7146af9118c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_TUNE_REQUEST</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gad0c86118dcadf84393dc063a02c28feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SYSEX_END</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga1ebfef94aaefeb67343e8ba03d714db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_CLOCK</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga30fe06aa54e1d2706350227a7bf89d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_START</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gac31229378c6f7622ef52464d2c755cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_CONTINUE</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga0d5702548b66077ffe89cda211ce8032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_STOP</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>ga24f8716f924930edb61521e334a8d9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_SENSING</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gaa0e4e48484ea0ad2a96be8e5bfd436dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CMD_COMMON_RESET</name>
      <anchorfile>group___m_i_d_i___commands.html</anchorfile>
      <anchor>gab723772ef26d943f583897803d9e4838</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MIDI_Controllers</name>
    <title>MIDI Controllers</title>
    <filename>group___m_i_d_i___controllers.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BANK</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga400bb0acabfc671553315a2e481cd73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_MODWHEEL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabd7dc0a357a298183546380c2616ae20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BREATH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2eedb2828f216795a53980f585326ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_FOOT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga87018deff0362e3f0c983fb171224d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_PORTAMENTO_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2750f10696dcc8f4e7b2cee97a0568b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_DATA_ENTRY</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae877503bd7e696ef065be7b50e6f9bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_MAIN_VOLUME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga44c99a6da1d1e8ac1a842283f081c530</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_BALANCE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaff20d0ff956eab3bb6057caf16757059</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_PAN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gacf3587c5a1297acbe3be9bf8fa6863bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EXPRESSION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaca32fa7d9b65e7dedf52a826eb348abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EFFECT1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga0538d196af1bfad5d53baccf2ad88008</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_EFFECT2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga7d71d4505c3e3a2832a4e324591746d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga037dca38fd660866630669309c2f6e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga782d5a57791a7cb822f2c806e9a386ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE3</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gac26f70d8fd39a132355abe2f9782fbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MSB_GENERAL_PURPOSE4</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab2be5312a07276e19f343a5dff6ef63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BANK</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga950baddcbeb06eb5a7aeb32421ddddb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_MODWHEEL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadb2907bb40bd51d2d10575278e87d4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BREATH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaccb65fb1c7c2eed062dc29222ba3294a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_FOOT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae64ae19be43985ecebcff56ba342028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_PORTAMENTO_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga13b30a34853b14d2b5ae6b2812261200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_DATA_ENTRY</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4c4520fe70087fe5362fb997f6944bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_MAIN_VOLUME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2268d5b7a8c55e19da862a02181d12a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_BALANCE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga324facba0ed095532cfcb9d5c5c8b8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_PAN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa37a796d5de51bc1991449a0e4ac7b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EXPRESSION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaacf10541517b4190670a51d0a790304d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EFFECT1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga81bb32b94f06396ab7b8ae4eb527398e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_EFFECT2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga72de57abbcfaba1f44661938977620df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab6e92effa93bf92d65f0719d1814c8e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga11850784d58515870a4f6b759497ac7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE3</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga997a1291a8b77f721259170493012b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LSB_GENERAL_PURPOSE4</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabcd1808f4511293ee6f18bfacec083e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SUSTAIN</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gafe6cec069df7dc4fac5dfe2e2f72c1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_PORTAMENTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga9ffc2cf5ee42ef664675d21b4d4da4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SOSTENUTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabf81a9dfc98f01368e68f441607ee345</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SUSTENUTO</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1f474cac456cd3842df188d389f7d7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SOFT_PEDAL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga83f2a22850c2afdf51d58970762751fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LEGATO_FOOTSWITCH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadcfb9780249ce4be4232ca24eb332a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_HOLD2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaccbcf812ed213a81945c5b111dc7968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC1_SOUND_VARIATION</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga7ebc926a176d5e78853d6e05a51cefbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC2_TIMBRE</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga55805bb1d899cce61a3db60934e2eca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC3_RELEASE_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga19b65e3983473227b272be82ef9df447</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC4_ATTACK_TIME</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gae5788e18205a6bd861f05e241035e06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC5_BRIGHTNESS</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4b92f34f5f4d97953086fad1bac52998</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC6</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa118fa77cdeacf4230f14a8f5f49634f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC7</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga82f10092ea135e74586bb970fbaf3176</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC8</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga8781fce1a79c134bf8c41bb73505d551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC9</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga09779ad81ceda34040afda81decdcbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_SC10</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga977a4356b53235b1abce324d10c086af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE5</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga34cb95b6e734f85b53d431b851f968ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE6</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaebec579f20f016bf00f6f26ae49a94e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE7</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga525bc92d4872a61463de275560517214</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_GENERAL_PURPOSE8</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gabdad6c045138c8be35ebb30f39bce6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_PORTAMENTO_CONTROL</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gafa6ca4aa4767eca95b82cca711ac0168</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E1_REVERB_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga6edb7c38930622917c9d7766b635586b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E2_TREMOLO_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga85dc5d768eea982af8524057a16f4cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E3_CHORUS_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga4d5816aa31ddc4eedcfef887adc0dd5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E4_DETUNE_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga21221aeb674302b8b48ba501d58bff36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_E5_PHASER_DEPTH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga0036583bf655c8581a856821bf470c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_DATA_INCREMENT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaabd8b650e9dde388d45c5fd340760426</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_DATA_DECREMENT</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab348887903ff8d56b0e4ae38aba8c344</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_NONREG_PARM_NUM_LSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1a07fa2ae318897f2d95f65bfdaa5677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_NONREG_PARM_NUM_MSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gada9a33bd765b94ce284ab63299521b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_REGIST_PARM_NUM_LSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gad5995b27c8552e8bb7f8301d617daa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_REGIST_PARM_NUM_MSB</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga19357e16a700d5859167f17c23510ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_ALL_SOUNDS_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaf2682a48d9360382eabd9428ea12b5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_RESET_CONTROLLERS</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga2dfa1eb44ebbd441cc0f10f972a77578</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_LOCAL_CONTROL_SWITCH</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gac9043790ce09c428e13a7aa391b69750</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_ALL_NOTES_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga1187405eaf1c2321494503670afc5b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_OMNI_OFF</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>ga739706673188dcfc5818f45e141fc328</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_OMNI_ON</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gab818d1d0cf1892596ea0c89723fd2e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MONO1</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gaa193f9a81e9cb798f62e9e3b9850d092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIDI_CTL_MONO2</name>
      <anchorfile>group___m_i_d_i___controllers.html</anchorfile>
      <anchor>gadef1b23fdeb9712a669c7a52e7bfd490</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Input</name>
    <title>Input Interface</title>
    <filename>group___input.html</filename>
    <member kind="typedef">
      <type>struct _snd_input</type>
      <name>snd_input_t</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga39165553a2907c5a27f325e3ce4e8301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_input_type_t</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga95856616f8604ef37e7f5e6738ffad8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_INPUT_STDIO</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga95856616f8604ef37e7f5e6738ffad8aa2d48649c7cb19e419a82b2c4bab68515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_INPUT_BUFFER</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga95856616f8604ef37e7f5e6738ffad8aa0d269e19ac019b61ec5e3afa4a1d9b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga68ff91aaa391b39f5a3082e202fdd2ff</anchor>
      <arglist>(snd_input_t **inputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_stdio_attach</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga70e6704164f80072bfa118160ff81d54</anchor>
      <arglist>(snd_input_t **inputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_buffer_open</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga3c7947884b1caf50117bcecd23a3cc22</anchor>
      <arglist>(snd_input_t **inputp, const char *buffer, ssize_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_close</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga4c86d6c288e2b1be3fe2efca6859cdd6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_scanf</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga079ba3d8ad9cfba4003c28520c2f8121</anchor>
      <arglist>(snd_input_t *input, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_input_gets</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabc17742247f4733f1891c2caec453988</anchor>
      <arglist>(snd_input_t *input, char *str, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_getc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gafb9476884661a2d685e59e58740cc9e6</anchor>
      <arglist>(snd_input_t *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_input_ungetc</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gad665d319d2d0a4127110c141ef99a02b</anchor>
      <arglist>(snd_input_t *input, int c)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Output</name>
    <title>Output Interface</title>
    <filename>group___output.html</filename>
    <member kind="typedef">
      <type>struct _snd_output</type>
      <name>snd_output_t</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga49729cc6454539495c1f5b6e95cd474a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_output_type_t</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga7217dd8d10e2491388e866d3354a4b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_OUTPUT_STDIO</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gga7217dd8d10e2491388e866d3354a4b29ad8291a0da96f6bf0cc0352e256fe8c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_OUTPUT_BUFFER</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gga7217dd8d10e2491388e866d3354a4b29a5630f21823bbe05e6547b8cc27af4e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae7b87e8cfcc2d46b124b2ad221ed6435</anchor>
      <arglist>(snd_output_t **outputp, const char *file, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_stdio_attach</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaca78d01bf6d081274650794861373c7d</anchor>
      <arglist>(snd_output_t **outputp, FILE *fp, int _close)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_buffer_open</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gafb4d1ae52ed7148b0abab0de3257fae1</anchor>
      <arglist>(snd_output_t **outputp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_output_buffer_string</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaae66e163bd719593b6787d922546a055</anchor>
      <arglist>(snd_output_t *output, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_close</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gab4be4e572d2a0d0f2f46faf8d45aa35d</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_printf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga5dd8e7d3089a82d8449a9dff221caf1c</anchor>
      <arglist>(snd_output_t *output, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_vprintf</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gae01572ae47fd3ead25ffd6856118780f</anchor>
      <arglist>(snd_output_t *output, const char *format, va_list args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_puts</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>gaa370cff392c8fdaf03e08c667561d4ec</anchor>
      <arglist>(snd_output_t *output, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_putc</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga7b2b8c27042964a5b57acabe0af6e30b</anchor>
      <arglist>(snd_output_t *output, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_output_flush</name>
      <anchorfile>group___output.html</anchorfile>
      <anchor>ga9d188a05400c944bc1f70d757c179226</anchor>
      <arglist>(snd_output_t *output)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Error</name>
    <title>Error handling</title>
    <filename>group___error.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_BEGIN</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga4e74ed65daac8e1737b7ec7b38d11ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_INCOMPATIBLE_VERSION</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gae24d4fe06c0a7478ebdaeeeca55d34c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_ERROR_ALISP_NIL</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga07b06f3c54db1c1d382e02b59b4fb652</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>snd_lib_error_handler_t</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gae71d39953bf482ba487d811a69a9175c</anchor>
      <arglist>)(const char *file, int line, const char *function, int err, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_strerror</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga182bbadf2349e11602bc531e8cf22f7e</anchor>
      <arglist>(int errnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_lib_error_set_handler</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>ga6ba1f0aa6c6bc5d335ab297d6019cb03</anchor>
      <arglist>(snd_lib_error_handler_t handler)</arglist>
    </member>
    <member kind="variable">
      <type>snd_lib_error_handler_t</type>
      <name>snd_lib_error</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gad6a605072dcc056de5f86d67687d90a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_lib_error_handler_t</type>
      <name>snd_lib_error</name>
      <anchorfile>group___error.html</anchorfile>
      <anchor>gad6a605072dcc056de5f86d67687d90a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Config</name>
    <title>Configuration Interface</title>
    <filename>group___config.html</filename>
    <class kind="struct">snd_devname</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONFIG_DLSYM_VERSION_EVALUATE</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga96fd234b2ce9c03a9e82f4e854cc65ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONFIG_DLSYM_VERSION_HOOK</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga948b35b3df554e2e06ba5bb9f5452704</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_config_for_each</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac3f21333e1f9b602cad9b06cb418fa80</anchor>
      <arglist>(pos, next, node)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config</type>
      <name>snd_config_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga1c20905af775ae77d04d1a5696f67985</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config_iterator *</type>
      <name>snd_config_iterator_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6c621ab8875a222e1fcb56e9feed6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_config_update</type>
      <name>snd_config_update_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gab10b229189a94e3fcbac7f6ca5794cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_config_type_t</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa41083e55d19c7755c5d624030e06887</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_INTEGER</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887aaa9d6e02cd0eb42db96122c925c023e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_INTEGER64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a710f962ebb93e3824ddee2d833f735a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_REAL</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a0a938daae4006e204150082ab9c73508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_STRING</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a99eed49f50d4f62a7fc0c95301918f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_POINTER</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887ab0b5d34e2f16e81d4eb5f933c30158fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CONFIG_TYPE_COMPOUND</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ggaa41083e55d19c7755c5d624030e06887a82b5c1a9dbadaa4e36815fc1f01fc2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_top</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf563d57ea9d576a94578368a3d2382c3</anchor>
      <arglist>(snd_config_t **config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51f79d1f24a519e126415c72210525b0</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_load_override</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga27334922bab8391aa2ef1813f48f4d70</anchor>
      <arglist>(snd_config_t *config, snd_input_t *in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_save</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafac08a29a1e04b03a22028a8c70f78bd</anchor>
      <arglist>(snd_config_t *config, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga41a3d2202cfb9016e33aa85ea70a4c9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_r</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga06e80976c3c00fdc786f9b213e5c40f7</anchor>
      <arglist>(snd_config_t **top, snd_config_update_t **update, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f781ac635a0233fb2f58766a83d65cd</anchor>
      <arglist>(snd_config_update_t *update)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_free_global</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga51dbc0ff1d9b34d753706d09d768116b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_update_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga568fcf6f45808319725ac066714b25a8</anchor>
      <arglist>(snd_config_t **top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_ref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae8baa15082818d721607932bb99f318d</anchor>
      <arglist>(snd_config_t *top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_config_unref</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac87538403cb6f8125468a1af56f42e33</anchor>
      <arglist>(snd_config_t *top)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabafb8cac2181c4c1e34b99f54421d1c6</anchor>
      <arglist>(snd_config_t *config, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_searchv</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7b2f5723e44a1b69f2a8555d469803d1</anchor>
      <arglist>(snd_config_t *config, snd_config_t **result,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_search_definition</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad7c23084ee4052ad33d77db6278db46f</anchor>
      <arglist>(snd_config_t *config, const char *base, const char *key, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_expand</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga7759f41c3757ce72ee9bd118976071c2</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, const char *args, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_evaluate</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga1a51645a07e204d4e814d890452da558</anchor>
      <arglist>(snd_config_t *config, snd_config_t *root, snd_config_t *private_data, snd_config_t **result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6f011f2a8063dafd80bd8af506dd621e</anchor>
      <arglist>(snd_config_t *config, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_before</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga3bd36661e3aa30c51e836fa7b44ca2d5</anchor>
      <arglist>(snd_config_t *before, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_add_after</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad8cc6279c458110f47d7759e308c4ea4</anchor>
      <arglist>(snd_config_t *after, snd_config_t *child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_remove</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d69b003662e09e8206a7892e849d27</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2a006b942faa3335a958a7df7bcea17e</anchor>
      <arglist>(snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_delete_compound_members</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaec120883e56ecb510e064151e0b11d51</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_copy</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga30f30bd27d13fbb3527270b3fc9e1676</anchor>
      <arglist>(snd_config_t **dst, snd_config_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac570ecbaba611ccc12bc235a1f4d0181</anchor>
      <arglist>(snd_config_t **config, const char *key, snd_config_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga838fac581e115574acc3711cad9f5877</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2c27175c162fe5027e3f1b3d5420afbb</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga8f175813bfc2556bd08fd580f05d36e6</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6764115f489629be027b434c4e323cff</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gadbcce71d8d3a78709fc2a78d6f543584</anchor>
      <arglist>(snd_config_t **config, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_make_compound</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga2ce24133c1d6828e2afe366284c61e01</anchor>
      <arglist>(snd_config_t **config, const char *key, int join)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafeb0552cbed09a3badbb5e74c7a7973d</anchor>
      <arglist>(snd_config_t **config, const char *key, const long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga04cfbfda89dc17c19a5a4076271a4d07</anchor>
      <arglist>(snd_config_t **config, const char *key, const long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga968e5bb773dfea922b5272636b26e9c2</anchor>
      <arglist>(snd_config_t **config, const char *key, const double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa83035f79027a464bf9d5d31e0a20547</anchor>
      <arglist>(snd_config_t **config, const char *key, const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_imake_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac7c6ce28a676169fff594aa4222705b2</anchor>
      <arglist>(snd_config_t **config, const char *key, const void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_type_t</type>
      <name>snd_config_get_type</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6def4c43ce325abaa3ddfba5a4f4d138</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_is_array</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae369d6f289748726617834b5d02047ff</anchor>
      <arglist>(const snd_config_t *config)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga550948931d44695b6d8e8f148f87cb54</anchor>
      <arglist>(snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6fd3be48221cae9cee9c7245a0804d73</anchor>
      <arglist>(snd_config_t *config, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gafdb63c78c07e11194a28d591b0fbffc4</anchor>
      <arglist>(snd_config_t *config, long long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga46c71d5d36c64f0a06ceae956a39fedc</anchor>
      <arglist>(snd_config_t *config, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga0f76f8ad47dce7f90580c8d59c6e44f8</anchor>
      <arglist>(snd_config_t *config, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac1810a11f576fe339074502f4fed4a91</anchor>
      <arglist>(snd_config_t *config, const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_set_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga037c3bf96326bb6f5dfd340475b34fbf</anchor>
      <arglist>(snd_config_t *config, const void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae366751e8ea98aeb69f9ef876f7b949c</anchor>
      <arglist>(const snd_config_t *config, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gabfbc36060fd4f5d1d929938443f95559</anchor>
      <arglist>(const snd_config_t *config, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_integer64</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf4d9e68918f7d49d7b4b14ffbe94afc1</anchor>
      <arglist>(const snd_config_t *config, long long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_real</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gad4d23c0bf941527d80aeb6f991bf88c9</anchor>
      <arglist>(const snd_config_t *config, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ireal</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga79738baffa6fa7722b1027ab84ac61bb</anchor>
      <arglist>(const snd_config_t *config, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_string</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5ab99983d1d93ddbcde9bb69a1e4f9fb</anchor>
      <arglist>(const snd_config_t *config, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa26f97e098a0dd2cd5e28299b6b6c132</anchor>
      <arglist>(const snd_config_t *config, char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_pointer</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga54868e0fa30458ef1c259772a8e7c6d7</anchor>
      <arglist>(const snd_config_t *config, const void **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_test_id</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaeec157fd161a138e402c9bd243bbd408</anchor>
      <arglist>(const snd_config_t *config, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_first</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac8965466674c10b9a119d591ed484cef</anchor>
      <arglist>(const snd_config_t *node)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_next</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga10c27ddc83c78680d91a167dd2f0a3cb</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_iterator_t</type>
      <name>snd_config_iterator_end</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gac08a30bc630481f69feb2170fed4afda</anchor>
      <arglist>(const snd_config_t *node)</arglist>
    </member>
    <member kind="function">
      <type>snd_config_t *</type>
      <name>snd_config_iterator_entry</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaa91fe1d926d88041ed516a6a7293f606</anchor>
      <arglist>(const snd_config_iterator_t iterator)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga11dfab861b537b564f0c76d9b1eb2935</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_bool</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gae5d80ee31e779992fd14672fd850a3d1</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface_ascii</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga5759c972706da4bd3be35c9336568bfd</anchor>
      <arglist>(const char *ascii)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_config_get_ctl_iface</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaaf1c1ea4801961e3107ca23ba89bd429</anchor>
      <arglist>(const snd_config_t *conf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_names_list</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>gaf35b51ab61fd7ea628ab088a1b444aa4</anchor>
      <arglist>(const char *iface, snd_devname_t **list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_names_list_free</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga665741321b3c1c3f07a6eeb969406cb8</anchor>
      <arglist>(snd_devname_t *list)</arglist>
    </member>
    <member kind="variable">
      <type>snd_config_t *</type>
      <name>snd_config</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6cf7955d3a072d354dab4d7b536c7831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>snd_config_t *</type>
      <name>snd_config</name>
      <anchorfile>group___config.html</anchorfile>
      <anchor>ga6cf7955d3a072d354dab4d7b536c7831</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Control</name>
    <title>Control Interface</title>
    <filename>group___control.html</filename>
    <subgroup>HControl</subgroup>
    <subgroup>SControl</subgroup>
    <class kind="struct">snd_aes_iec958_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CONTROL_DLSYM_VERSION</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2dc20c3f1d96252ba1f5563cfede392d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_REMOVE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2648d4242f8d5be01ecc6e36bc2cf335</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_VALUE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf271a6ca621f746c45161f7106752e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_INFO</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3ece7e72b3f4260f9ddd97aca2e1647a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_ADD</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga10e8cc806d014989e7b162f24714e19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EVENT_MASK_TLV</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga68f2f8b90cf059427f9ee9864983e68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga172526f45150a21251b3421925641ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_PLAYBACK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7c81ecb5b075437d0612bc33e5ac3131</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_CAPTURE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7cfec74a12a6730bb37cd567ab66452e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga72c88b2e8c9a136e34635dcc5fc65fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_SWITCH</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa8afe0cd1e7e65507a3f19e3a3f3d293</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_VOLUME</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga530cf8baa305078c23ff8fe1cc2f612e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_DEFAULT</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga671b467ee6f577d9408dbbadfc90a404</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9665d8a918307b0b2387d253c7580abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_CON_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabf837ecf1bc3539b6beb1b58ecc1e5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_PRO_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga662f187cdfe6e85da2a5d820fac40d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958_PCM_STREAM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae49d00de709820b4a6d8b9b343e2a407</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NAME_IEC958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88837fca9c81a2ede579c78bd1354475</anchor>
      <arglist>(expl, direction, what)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_MASK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad11798fdf0ca20181d793660a50938a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D0</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae4dc79ea76d20b9e84ca0564972db99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D1</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga137b1c440315c12a17f938ba4c0bf38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D2</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga01abf56e8703ef464bb271e8958962f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac8cc37202adfe9a740580ac1036c482e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3hot</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac6bf5540f88d153cb2b4d96cfa2e65bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_POWER_D3cold</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga029a112452f29d70c25391ea4e6723b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CONTAINER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf5319578d0088b10c67339c8b1f644e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_SCALE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga59b987c8f3cd26be848cec7171b7fb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_LINEAR</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3e80cc7e80dd6c56e2d9267d6a6ff9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_RANGE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9eff63d56cfb81df6d25d297270d6b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_MINMAX</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga779ef3d3fd0b658cef588fdbf6fa52be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_DB_MINMAX_MUTE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7a2bb21790739c2cfdf499d5c9748104</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLV_DB_GAIN_MUTE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5c4958da9d46cc400b24a6c47a413cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_FIXED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga59ee428ba00f0595d867a74fb304913e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_VAR</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4a7450784b51c2d5ab51edd65279d1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_TLVT_CHMAP_PAIRED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga63c3b7754a51433fbe10d7ad15c7c264</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_NONBLOCK</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae8a46558414be5b5b3b7bed127ad4574</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_ASYNC</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gadcbc5a476ffaf2b8d4dfd29a2cfaab3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_READONLY</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabd6e339ba7222d43f280abef3d3d47aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SCTL_NOFREE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab1b68b9d8582822395782038025cb0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_id_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88b300eb8aa146d1eef29fbb6d8cb83a</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_card_info_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gafcb7ab1577c3963e0751365dc983a4cb</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_event_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad7f958811a01272454badce1cf5bcbe7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_list_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7ec1d6cea34670d5e43a841af212962f</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_info_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4003d15d8c84d2405e922ba834d234f7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_ctl_elem_value_alloca</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga262a26fa78978597c0baa7eecc5cb5fd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_card_info</type>
      <name>snd_ctl_card_info_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga61aa15d40e16100bbb980bd062f5f220</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_id</type>
      <name>snd_ctl_elem_id_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad6c3746f1925bfec6a4fd0e913430e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_list</type>
      <name>snd_ctl_elem_list_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga952c52ef86124847f9bf12ee3dbfa5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_info</type>
      <name>snd_ctl_elem_info_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2cae0bb76df919368e4ff9a7021dd3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_elem_value</type>
      <name>snd_ctl_elem_value_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga266b478eb64f1cdd75e337df4b4b995e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl_event</type>
      <name>snd_ctl_event_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga95f16cb694185b2ee106afc53d1e3a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_ctl</type>
      <name>snd_ctl_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga06628f38def84a0fe3da74041db9d51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_sctl</type>
      <name>snd_sctl_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga89e065287b9deb65125cc5f1cfb48e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_elem_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac42e0ed6713b62711af5e80b4b3bcfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_NONE</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca4721b8bec7a22580ce81b91c6b7a0ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_BOOLEAN</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecaa4ff1a96936c11b81e12ecd5a9dfa307</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_INTEGER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca4248a1a1ea07ebfaf61f3b6675868519</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_ENUMERATED</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecabfb38dcb8ca021f3f3a09261b3b8cb43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_BYTES</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfecade553acbddf022bcdd9123e71c942be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_IEC958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca7fb78bfbbfb14c7653e1dcc3c5706454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_TYPE_INTEGER64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ggac42e0ed6713b62711af5e80b4b3bcfeca49b30ff41d10d784a98b9bb8636dce81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_elem_iface_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga14baa0febb91cc4c5d72dcc825acf518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_CARD</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a13ed37a91e6ea81175f9bf61411eccca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_HWDEP</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aebbef1ae0db15ec3c2f4f2afd63c4a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_MIXER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518af7d7a7f5af771a7cdbec7424b2510060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_PCM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a701d786e4a50e0931c27660a877ee7ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_RAWMIDI</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aeb930ace203532c3a8ca399a3f3b03a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_TIMER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518aed953d644672e4e2d36e5d77607cea28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_ELEM_IFACE_SEQUENCER</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga14baa0febb91cc4c5d72dcc825acf518a86942df032bda20d3b14d8d32d95ca6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_event_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga76f2458eb5cde785a8fcdb555ed7fd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_EVENT_ELEM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga76f2458eb5cde785a8fcdb555ed7fd57a184c89f6a16a9b9e9a5ffd94b0aa9c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_type_t</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9d0e18b3c1b8cb729d4561b968296a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_HW</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a94bec3f8cfcb14bd7dd5b0f243e039f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_SHM</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76ab304ede71aad4a331d3532bc9dc39668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_INET</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a7697d758fab4cb3c23aa87ce4149a621</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CTL_TYPE_EXT</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gga9d0e18b3c1b8cb729d4561b968296a76a7c74ac3b8c063b460a5e1f74ae8a377c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_load</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabb7a76fa905fbae6481f78d1eea4feb1</anchor>
      <arglist>(int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_next</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6fccc8a2d7d5ebd072a552a05855c145</anchor>
      <arglist>(int *card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1881c5c04a532f5b9397745731ce7730</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad48d44da8e3bfe150e928267008b8ff5</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_card_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga547dcead4a72f24db4a0f9f530f75228</anchor>
      <arglist>(int card, char **name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_device_name_free_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad4cacf29df4616c2458fc84c1fde708c</anchor>
      <arglist>(void **hints)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_device_name_get_hint</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8546500ca828392f03f5bba2e7813874</anchor>
      <arglist>(const void *hint, const char *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga58537f5b74c9c1f51699f9908a0d7f56</anchor>
      <arglist>(snd_ctl_t **ctl, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_lconf</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4a49cc71db1a7021be6ad880fcdbe4c9</anchor>
      <arglist>(snd_ctl_t **ctl, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_open_fallback</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga016fcf47dc9c17c06d6e0846ac0bba17</anchor>
      <arglist>(snd_ctl_t **ctl, snd_config_t *root, const char *name, const char *orig_name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_close</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8510057afd178d7206221d85440ba5f</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_nonblock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0898e6fe7a63a1c301794357a160587b</anchor>
      <arglist>(snd_ctl_t *ctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_ctl_handler</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga23813430fb81fecb0e95d1dfd688337d</anchor>
      <arglist>(snd_async_handler_t **handler, snd_ctl_t *ctl, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_async_handler_get_ctl</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa693260ccd944d874229257e54dee404</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad7761be890b679d7e7bb3a3e4453818b</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaae9e775c251024e253a4314b76c3c1f8</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_poll_descriptors_revents</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab4f2ac44c01f4ec3c02dca1945bf9155</anchor>
      <arglist>(snd_ctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_subscribe_events</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab56450393817e8ee1959fc4bcf5d2d15</anchor>
      <arglist>(snd_ctl_t *ctl, int subscribe)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa78539d04df0f1642d00c07a86d0fe8</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_card_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab631f366b743f5afa0bb0344b42aad4b</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_list_t *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa41caec9e14ea618fecfacfe68f1f7d7</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6577ee280d090136288fc5dd734867b9</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac98376a37556e0d878b6aa43e7e64e27</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_value_t *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_lock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1fba1f7e08ab11505a617af5d54f4580</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_unlock</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf8b3191516b8b7debeb57192b71abf66</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f9ce14ec4227de4f3a6b573f069481</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_write</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa2c2da0a41904db5809dd4eade24c9c</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_tlv_command</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34d5e31c5ff25ab780893ab7534ab2d2</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_set_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11ec9933829235513853f89bffdfd4e1</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_power_state</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae554fc52f0371161471520aa60e970c6</anchor>
      <arglist>(snd_ctl_t *ctl, unsigned int *state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_read</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga392a8f4afa2ba60e0ce6817f2a4f5e74</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_event_t *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_wait</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7df5807d1853b39781078793afa7b895</anchor>
      <arglist>(snd_ctl_t *ctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga202bfd5f82126770a2a7f79fe75501b9</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_type_t</type>
      <name>snd_ctl_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gafc6b41bf8de224f7b961cff768e41cc5</anchor>
      <arglist>(snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaca10189720995695e836e7bf39cce570</anchor>
      <arglist>(snd_ctl_elem_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_iface_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6e85042ad0ecb60292c3d06cfe7b2a5e</anchor>
      <arglist>(snd_ctl_elem_iface_t iface)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_type_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab06ee7470afa8d6ae55296d19bff1455</anchor>
      <arglist>(snd_ctl_event_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_mask</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1a71c2546aef7d240185fd203240d890</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae1ecf3bdec2397722eaebbb2730de9d4</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_elem_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga84bad7e515406d566484e4faaa41962b</anchor>
      <arglist>(const snd_ctl_event_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_event_elem_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaed43a3e150a98463b99993c8a4646595</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf96e6732e7d7d7d95e868518b7c47316</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaaa0de2acc99d1aa07aff9e0542134a9c</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_event_elem_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga79ef06a1957ccd0b784e1153e23ce25f</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_event_elem_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae69f9ba6fd89ac22af2421b801e69bbd</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_alloc_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga504ad392b797b7f5277cd184aee96e66</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int entries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free_space</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e8106e3e2f64d84d1c03ffe36bed388</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_ctl_ascii_elem_id_get</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4e4f251147f558bc2ad044e836e449d9</anchor>
      <arglist>(snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ascii_elem_id_parse</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2f530217bd896e3c0498b3e46624977a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ascii_value_parse</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga05d994f242e8a524a94ea482689fa2c0</anchor>
      <arglist>(snd_ctl_t *handle, snd_ctl_elem_value_t *dst, snd_ctl_elem_info_t *info, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_id_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7047bf3d0336f2ed1bc876e512bfef7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_id_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa261f3721050a0ad4a43f28bcd6b082d</anchor>
      <arglist>(snd_ctl_elem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0bb98b09bc352074219a7866d20f5816</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad21c1d92e9f82b41330dba1146c88734</anchor>
      <arglist>(snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga411575334b5f4d6602206df72c6ac01a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const snd_ctl_elem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga543f3de35c42f53f2ec2d24217fd4a43</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_id_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6932a5e3485140cd120dd8a9be8e6770</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54c863a0cdc7c501b3e1d520137cfc69</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5f3bb5a80842261a07c4ed99b05921b8</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_id_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa6cfea3ac963bfdaeb8189e03e927a76</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_id_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaebca4d84c661a50504b01b847f89289e</anchor>
      <arglist>(const snd_ctl_elem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga212d5ffe15e223dee2ebc58e3d57a7cd</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga33855eaf0261c321cbf0a88baf290418</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2c893cc444dbc0e4293e3a6fec7b27a8</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8eb060cb64d7cce2c82d04560bf675eb</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga813d02a44a9d01a4a2fe81eda7a8670a</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_id_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga65af30a51becd092f6da1e357fc46094</anchor>
      <arglist>(snd_ctl_elem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_card_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5cfad24c04eb3576a1945757ff420944</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga518166f64f41361629ee7bfe0caca9fc</anchor>
      <arglist>(snd_ctl_card_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga62360e5fdd3c5644ca7e260099fba67e</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3a4851500ca8a98927b16b772cda8787</anchor>
      <arglist>(snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_card_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac2afd00836fb59d31cf759a8e48a622e</anchor>
      <arglist>(snd_ctl_card_info_t *dst, const snd_ctl_card_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_card_info_get_card</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga14863e13659cd0a02d3716923512dd85</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaadadbd2d4aef000a30ec4c1c949326cc</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_driver</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4abf685f77a8fa8dd14232397cab6f71</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae71617c9deadee635b0ad38ca9aaf746</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_longname</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54a54f4b1cc3740eafba54b1cc1b8111</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_mixername</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae2a4719572de955480043dd34840579b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_card_info_get_components</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2181aa6bf919fd1342b259d2f3af755b</anchor>
      <arglist>(const snd_ctl_card_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_event_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga56f526a146d913e36802b6c4a0daf86b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_event_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b38df9f5233dd8290a80682011f7907</anchor>
      <arglist>(snd_ctl_event_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga63ff10dda4a7e6b4055a0f3438c7781f</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga784c560c92df4179019bb3a29e1a4791</anchor>
      <arglist>(snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_event_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d8375f54af11001b829f1e3054eccef</anchor>
      <arglist>(snd_ctl_event_t *dst, const snd_ctl_event_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_event_type_t</type>
      <name>snd_ctl_event_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2a7d413bb515e07dc4f933aa187324d9</anchor>
      <arglist>(const snd_ctl_event_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_list_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6a2a5b5258da9959ddbcacf94a0619f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_list_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab57f2acf2e5abdc9c46c19fe2bad9397</anchor>
      <arglist>(snd_ctl_elem_list_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9141e579ac00e56fa01af4cd710acef5</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0aac385223908ae12a8d2f68d6105990</anchor>
      <arglist>(snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab945b6a9107a41d5cca414098711511e</anchor>
      <arglist>(snd_ctl_elem_list_t *dst, const snd_ctl_elem_list_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_set_offset</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gadc7b2d590c27c684ad2a076f11a8b31f</anchor>
      <arglist>(snd_ctl_elem_list_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_used</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2462c05a56bab424686f3d442ba8820f</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a1206d8f19aa67a32577f523ee92c12</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_list_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga73fe33f4f45b80d36137dd1371e34ea1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ee1e4b5b790f08bdcc78f3a2685aa5e</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_list_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga72a7235ee8e366a4b8e7c63b0189f512</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae906aa0c657dd15300ab451436a318b1</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga809aec8df62a6cc5a289829e4171f5b3</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_list_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga819a69351b60fd868a09ae41323deb22</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_list_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d2c5fea3dcdc132d40dce39e9ca9f00</anchor>
      <arglist>(const snd_ctl_elem_list_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_info_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0758621321c3b86a5bcb542b8b931236</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga54387df99f25dc01635568fbc6bf6ad0</anchor>
      <arglist>(snd_ctl_elem_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c55080b76401a03eede7d92e4e1cc4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4b7173cf1df342a66dbc44dc9ebd07ec</anchor>
      <arglist>(snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga763d0832ab8b9096e96f5a15021f73d8</anchor>
      <arglist>(snd_ctl_elem_info_t *dst, const snd_ctl_elem_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_type_t</type>
      <name>snd_ctl_elem_info_get_type</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0fec5d22ee58d04f14b59f405adc595e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe355f33a84b3c3d18b3c72f5981dc6e</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3289cc7acb4fc4de184cd67c295f1866</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_volatile</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d191b706824318c943a6b172a7531fd</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_inactive</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga387a4cb6a4d80b3ca2b4d734368eb219</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_locked</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga1d37f2ff9ff7b1b367b7d804f7b2b7ad</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_readable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaac6bb412e5a9fffb5509e98a10de45b5</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_writable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacfbaae80d710b6feac682f8ba10a0341</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_tlv_commandable</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7625ff65bed60802f15bf143de4860a6</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7d40439e43a49e1ac6c694b7b617329c</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_is_user</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34dc2e7013fe367a5acac79a1a13a814</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>snd_ctl_elem_info_get_owner</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga934e489d5d48a24575a425d64e0f2db0</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_count</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa75a20d4190d324bcda5fd6659a4b377</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_min</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac8bcc954ddaae99174f97adc6116a6a1</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_max</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6d9da5653ce5d149e1b9ed0b26eaae22</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_info_get_step</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga871c7c81aae5c41c2368a85c1ca1f407</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_min64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5e6bb136caa4d8c9a43e8d8f8e310893</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_max64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7e74e6ecf31560bd4c4b85464f7ba54b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_info_get_step64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga35177e37f86eeb8c9fe31c3a8438c9ce</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_items</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gabe5a218f256ac95ec295a175ec544453</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_item</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3cc2ead5a5628661976507fed4c38182</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_item_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf54afbedeb76d572bd6c6d064ce4b51b</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimensions</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga163546600efa29d822a4567706a8443a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_get_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga221900fb2b2c68e8cefda697874b83ba</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_info_set_dimension</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf2af53f06728255d07a1456fe51303c7</anchor>
      <arglist>(snd_ctl_elem_info_t *info, const int dimension[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4bf366ee3700fdc6073dae01724c2119</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0875375abf0477b84b6022faaa683f4</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_info_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac0de27f217d38543ce1b2d5902766a46</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344f683cf6fac46e0ce8fbdf45ada99a</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gae53373c67b013e3473caad0258c3bdc3</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_info_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3af223c6ba6185a7326f852390697914</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_info_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d0d01aca3e2c61ca7cd7baa295d0ee</anchor>
      <arglist>(const snd_ctl_elem_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8aa6f699266b217b21c75b04dbdbe2b3</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga13dcca5b02535c50c3f5efa2bc03c736</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga49d7a2129b74609a8865e835e154d454</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga87d5d9c4fe092f02267e0b36397fac88</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab22e8223972fb7aa8a6e6abe49306b4d</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga40fffad33e859d27314dde76d9dffebb</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_info_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc80a95a945e31f3125a3ab4d908a464</anchor>
      <arglist>(snd_ctl_elem_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gacc94fec73b3b56f87872e8fec0c3e9f1</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long min, long max, long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_integer64_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ab4992e6c9506bc8b8c0581808c2324</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, long long min, long long max, long long step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_boolean_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaff7e95b329528fac338d13f428bec02c</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_enumerated_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9e9bf31020e6c2e7185612785eca6098</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count, unsigned int items, const char *const labels[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_add_bytes_elem_set</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf725d3e3411b236e5434150268c80294</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_info_t *info, unsigned int element_count, unsigned int member_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga9f6228c0d0bc751596cc04c6dcd00083</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, long imin, long imax, long istep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa9ff49156010b3931cd3d163e62cc43f</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, long long imin, long long imax, long long istep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5f640f1d836b532b1c18d7604a90bad</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga273d2d5c44e97d045c48dbaa734ae23e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, unsigned int count, unsigned int items, const char *const names[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_add_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5511e7e65b773abf8eb8413ddb701f3e</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_remove</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga715d20513768cf33f10a0f9340b7baab</anchor>
      <arglist>(snd_ctl_t *ctl, snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_ctl_elem_value_sizeof</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0514e7dde0594c4bd909e2306acb4bc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_malloc</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga34126639664d2c2d91a4b4bc6494a536</anchor>
      <arglist>(snd_ctl_elem_value_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_free</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaab6bfeb2206c9de88778890fe527cd53</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_clear</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5dc3556ecf7f1b6b90a751f68e298aa8</anchor>
      <arglist>(snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_copy</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga5631893dd087d73c223b7787222b7f9b</anchor>
      <arglist>(snd_ctl_elem_value_t *dst, const snd_ctl_elem_value_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_compare</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5ee4dee86e48095a8eb74379c933350</anchor>
      <arglist>(snd_ctl_elem_value_t *left, const snd_ctl_elem_value_t *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad5c2ecc35d664aff974a244478496239</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4506b9e0ca143a5e78e755ee4e285fa9</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_ctl_elem_value_get_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa3c2abb83ed61f20350d056615bda48d</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac1ec603a65de11b4661c04e6327f7647</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga81ad9e08fdd64b99dd6562b698ab7f85</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_ctl_elem_value_get_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8c39c251d773d70ee8da07af4f5bdf0c</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7bae3a71028550515183e945040069df</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_id</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab009ec5ba8cd90b434beb4294bff5d62</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_numid</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8ade8618025754cd6b0baebd54bd5773</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_interface</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga052fb24927d60936cabfb29303595790</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, snd_ctl_elem_iface_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_device</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2ff78ac05ab5efbe82f3eafe799e050d</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_subdevice</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa49c82aaf7052043c69594e3c81204c5</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_name</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga7cb4db71bdc890579aa8bddbc88be7df</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_index</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3b95f6d57955c7648e12023d53ce3faa</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_elem_value_get_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa4409f368b375cb2ceb6d4108dcd2fc8</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_ctl_elem_value_get_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga88debd91f21f40b237d22d7255b4a5fe</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>snd_ctl_elem_value_get_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga3f1d6202c02a34e973b87a2c580abcef</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_ctl_elem_value_get_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaf7a9a86cb477166bc3922bd722afb296</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>snd_ctl_elem_value_get_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga594a9762366355ec131e9fda92243305</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_boolean</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaa246c604f97c7a05d125314f0fa72946</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gac022b948fe93bc744eb8b24839091b5b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_integer64</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaef406a6ab97925a9df646022800e815b</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, long long val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_enumerated</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga89a5b646d118cd73e7ca7d861bb6de26</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_byte</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0a0d53d2dd752fb1aa39c97376d02547</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, unsigned int idx, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_set_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga2b78601c4c56ecb4a6e3556137d61af6</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, void *data, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_ctl_elem_value_get_bytes</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga11729138fcecfb37f9b7c744c4743fba</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_get_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga8970ed4dd76ece274e27f0b0429895c1</anchor>
      <arglist>(const snd_ctl_elem_value_t *obj, snd_aes_iec958_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_ctl_elem_value_set_iec958</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gaefa891d2ff7ceb075aecfa8bd89fb340</anchor>
      <arglist>(snd_ctl_elem_value_t *obj, const snd_aes_iec958_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_parse_dB_info</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga4fa0bc99458acc08a2c59e6ed84bc94e</anchor>
      <arglist>(unsigned int *tlv, unsigned int tlv_size, unsigned int **db_tlvp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gad1feefed923fc08f309c4fec2b0973e2</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga625c16724bddbb21b18ae3b2cbaefcda</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tlv_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga0ef60f47c8c82dd84816ae66346359a6</anchor>
      <arglist>(unsigned int *tlv, long rangemin, long rangemax, long db_gain, long *value, int xdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_get_dB_range</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga6ebf9a5917cdc2fee40245cdbc83a0c1</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_to_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>gab44202cf8247874df15212d684a2b6ee</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long volume, long *db_gain)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_convert_from_dB</name>
      <anchorfile>group___control.html</anchorfile>
      <anchor>ga344c48d48be3f61d08ce911c462a3bf4</anchor>
      <arglist>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long db_gain, long *value, int xdir)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>HControl</name>
    <title>High level Control Interface</title>
    <filename>group___h_control.html</filename>
    <member kind="typedef">
      <type>struct _snd_hctl_elem</type>
      <name>snd_hctl_elem_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaddfb152863e87857d463c7008d72ad74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hctl</type>
      <name>snd_hctl_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga13c9ad52c57ab7db06065a7f806b2369</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_compare_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga612e7c59d360ecc9334f7fe71377f9cc</anchor>
      <arglist>)(const snd_hctl_elem_t *e1, const snd_hctl_elem_t *e2)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_callback_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga5e2b26a2cc8d696e2a9eacb6bbb2f417</anchor>
      <arglist>)(snd_hctl_t *hctl, unsigned int mask, snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_hctl_elem_callback_t</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga64ce2446d79c992547d3db8c7faa6143</anchor>
      <arglist>)(snd_hctl_elem_t *elem, unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_compare_fast</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa17b28ebe0f1e0e4443182312af7408</anchor>
      <arglist>(const snd_hctl_elem_t *c1, const snd_hctl_elem_t *c2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2a86455eaad4f2730a936d06c62cca29</anchor>
      <arglist>(snd_hctl_t **hctl, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_open_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga48b556b219e99c36d65efc6b8a97029c</anchor>
      <arglist>(snd_hctl_t **hctlp, snd_ctl_t *ctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_close</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae9537f6a56d663aa9714ccc82689ff1e</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_nonblock</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga3c3e66e230fc93c15f18568342725a43</anchor>
      <arglist>(snd_hctl_t *hctl, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga32238dba8935b2cb91fbad73aae9e3d4</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga7dd3894b55740cbdb8b2a0bef15af295</anchor>
      <arglist>(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_poll_descriptors_revents</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga704fd06286869e793e223956b186bfdf</anchor>
      <arglist>(snd_hctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_get_count</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga098944f4f2d7722550901bf6f80ee91c</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_set_compare</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga5917b8cbcdf5d44d8730027b18ff6172</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_compare_t hsort)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_first_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaaa68ce403d30e4d152fe4ce82b6c02db</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_last_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga8b7270503d275040a391e05c991ec569</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_find_elem</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaeee7f3f76cb71fd4b3456a9566529bd5</anchor>
      <arglist>(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga9c0abde0c53cafb640bbd6e3b1c3d6c6</anchor>
      <arglist>(snd_hctl_t *hctl, snd_hctl_callback_t callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae678856658731969c884a4c9c810d799</anchor>
      <arglist>(snd_hctl_t *hctl, void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga60c1606f4d423301355344e5373d5ccc</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_load</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga700017b7d9b8decb775702d5dc6fef85</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_free</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga1b3e936bba7a6127459af1244c7da454</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_handle_events</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga02d9dc1cdbdfe11880e3fe774f2034bd</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabd1208fbbe2061021494ea21ab382088</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_wait</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga2f0d0548f5d848b6557b2967d0e73494</anchor>
      <arglist>(snd_hctl_t *hctl, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_t *</type>
      <name>snd_hctl_ctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga93f19c0fb16337f72b6c413512b79f1a</anchor>
      <arglist>(snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_next</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaf7c6b19c5feb2392f2d447bc3f54fd15</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_elem_t *</type>
      <name>snd_hctl_elem_prev</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga89a720775cb955ee4069a45074e4b32f</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_info</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae08b50b118461e6fcc55975e5530885c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga86728d69cc5de843ed46ffb4f3b98e2c</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gafaf6b88337fdc827c847e21a6fd0cd79</anchor>
      <arglist>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_read</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga45fc0e8b3dfaeb2dfebce4f613b21297</anchor>
      <arglist>(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_write</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab5611090cee93ace74db2e744718ae25</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hctl_elem_tlv_command</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaedec51e102fbf6161322553355439121</anchor>
      <arglist>(snd_hctl_elem_t *elem, const unsigned int *tlv)</arglist>
    </member>
    <member kind="function">
      <type>snd_hctl_t *</type>
      <name>snd_hctl_elem_get_hctl</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga98660b650e7c060be8a574402e2f2257</anchor>
      <arglist>(snd_hctl_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_get_id</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac1c0ce6f627f2f1560c5db03a93caf5b</anchor>
      <arglist>(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_numid</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae5e86d487c6c964be8a59dfeddb2f36e</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_ctl_elem_iface_t</type>
      <name>snd_hctl_elem_get_interface</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gabe8c46cbe8b6a2612fa0eaeb1fa8fefb</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_device</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gae933e61025507ee572408138e935c63f</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_subdevice</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>ga894c09354156fd12f8a089726449f6ac</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hctl_elem_get_name</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gab89b9d62f8575795fc52b86415373a49</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hctl_elem_get_index</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa2bad4d08aa1c8ea98f2a92435583e01</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gacc10c18b636db3388e9b6383058fc757</anchor>
      <arglist>(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_hctl_elem_get_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gac0aad0000d7eccde5d107b1b95f429e6</anchor>
      <arglist>(const snd_hctl_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hctl_elem_set_callback_private</name>
      <anchorfile>group___h_control.html</anchorfile>
      <anchor>gaa9d511449fc220d09e69a05ae65f1ead</anchor>
      <arglist>(snd_hctl_elem_t *obj, void *val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SControl</name>
    <title>Setup Control Interface</title>
    <filename>group___s_control.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_build</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga4bb43af9b662b97c70322fb2d9d8ff9d</anchor>
      <arglist>(snd_sctl_t **ctl, snd_ctl_t *handle, snd_config_t *config, snd_config_t *private_data, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_free</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>gad8e6a8c5d08fd8a7ddfcd55144dbd9ce</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_install</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga869e7add884017e9b18cebb9b9eb897a</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_sctl_remove</name>
      <anchorfile>group___s_control.html</anchorfile>
      <anchor>ga11ed2053b547dc1f86bbd4f526e4ba30</anchor>
      <arglist>(snd_sctl_t *handle)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM</name>
    <title>PCM Interface</title>
    <filename>group___p_c_m.html</filename>
    <subgroup>PCM_Info</subgroup>
    <subgroup>PCM_HW_Params</subgroup>
    <subgroup>PCM_SW_Params</subgroup>
    <subgroup>PCM_Access</subgroup>
    <subgroup>PCM_Format</subgroup>
    <subgroup>PCM_SubFormat</subgroup>
    <subgroup>PCM_Status</subgroup>
    <subgroup>PCM_Description</subgroup>
    <subgroup>PCM_Dump</subgroup>
    <subgroup>PCM_Direct</subgroup>
    <subgroup>PCM_Helpers</subgroup>
    <subgroup>PCM_Hook</subgroup>
    <subgroup>PCM_Scope</subgroup>
    <subgroup>PCM_Simple</subgroup>
    <subgroup>PCM_Deprecated</subgroup>
    <file>pcm.c</file>
    <file>pcm_plugin.c</file>
    <class kind="struct">snd_pcm_audio_tstamp_config_t</class>
    <class kind="struct">snd_pcm_audio_tstamp_report_t</class>
    <class kind="struct">snd_pcm_channel_area_t</class>
    <class kind="union">snd_pcm_sync_id_t</class>
    <class kind="struct">snd_pcm_chmap_t</class>
    <class kind="struct">snd_pcm_chmap_query_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_DLSYM_VERSION</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga32ccf47736036e86b0d787dc43e64d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NONBLOCK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6bd90de1d1527b5804090dcce51079ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_ASYNC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga9b22351abf6c85ced128e2088f6f6a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_ABORT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga06aa6da1ebeff70c83d9f6e18a91a3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_RESAMPLE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaba352dfac44ef1681f91d476ed781005</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_CHANNELS</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga64fa40b556374dabe40d4874242fee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_AUTO_FORMAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gacb997a23fbba62232101f730e9ae1e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_NO_SOFTVOL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1f67b4e05749f0d3dafe7c17e448518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_API_VERSION</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf79d447b5f5c0936cfbc769eee03078b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_POSITION_MASK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad6713109477a592274f92f85670fcc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_PHASE_INVERSE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad98b225c79dd92fc387b2e7884ef97da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CHMAP_DRIVER_SPEC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf3d1c438269afa0206fb9f2151c4fc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_info</type>
      <name>snd_pcm_info_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7dae86a468480ce8eb1c485446c51664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_hw_params</type>
      <name>snd_pcm_hw_params_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga65c737127994f0a980edad744e36dc40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_sw_params</type>
      <name>snd_pcm_sw_params_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7e082d9ea701709270b0674a0be23b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_status</type>
      <name>snd_pcm_status_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga902b87281c46910b469d5f7aaafc1890</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_access_mask</type>
      <name>snd_pcm_access_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7f9575bcc94c7c2cf5d688a45c16ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_format_mask</type>
      <name>snd_pcm_format_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0936aa9ac0051a3611583a2740915545</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_subformat_mask</type>
      <name>snd_pcm_subformat_mask_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga891b054202089747199bc3348b9d9630</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>snd_pcm_uframes_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gab01fcfe9b97382a8d3f2027c664b8b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long</type>
      <name>snd_pcm_sframes_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga71cdfa37e258d2210b8bd0216bf0c36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm</type>
      <name>snd_pcm_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga919e634deecd855b6e2e15174e70d3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum _snd_pcm_type</type>
      <name>snd_pcm_type_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaca6314f46f54a0b62536c403bbb62601</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_pcm_scope</type>
      <name>snd_pcm_scope_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3cd150b8aa57e634e1e1dd914940c765</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_class_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad0e95dc8a590d8f9915fec237d7a28a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_GENERIC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a3899ef7b0fa4a9717abe5587e9110514</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_MULTI</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a223f6ffeb72c72144f4f680998fbedb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_MODEM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a79cdb236d774a3a5e17cf4929a16936b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_CLASS_DIGITIZER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad0e95dc8a590d8f9915fec237d7a28a5a69f4d2c8aa3195c6fc140b6d4c2f25ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_subclass_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6a164917c35e2216f6e76beff4e4d0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBCLASS_GENERIC_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6a164917c35e2216f6e76beff4e4d0cba79a61939325a37b0fdfcf6e9ac0ce572</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBCLASS_MULTI_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6a164917c35e2216f6e76beff4e4d0cbaafd17e33fac6f3c2b7e9bb48473b8c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_stream_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac23b43ff55add78638e503b9cc892c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STREAM_PLAYBACK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggac23b43ff55add78638e503b9cc892c24a57a2b920dbc34173479fc9036cfc78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STREAM_CAPTURE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggac23b43ff55add78638e503b9cc892c24af07834f756b4f95cb61987f4811073c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_access_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga661221ba5e8f1d6eaf4ab8e2da57cc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_INTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa90a5dea527c5ae9a53f1448beb2dee6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_NONINTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa7de225785e05dd1d538203c5ece9036e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_MMAP_COMPLEX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa26a4f161364cb539df4de5eeb9949121</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_RW_INTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aa72a970ed6e676ab0fd9f3c3d36737e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_ACCESS_RW_NONINTERLEAVED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga661221ba5e8f1d6eaf4ab8e2da57cc1aae7ab128d10c32667f396933190435071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_format_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa14b7f26877a812acbb39811364177f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_UNKNOWN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab1e118ecdccf628639b5c85bc3a48999</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S8</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a5b78bf93eaed5f52cf16c582f04aa7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U8</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad5856f97113926836a7c6651cb8864a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8b66a29293c62df9d1678c609fab76c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9f6783e14d7cbb5023c86427263b0d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab2f9619da5d5062e612b2ee0929e8164</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aecc04aa997503c030a47fe5798514180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a04b3c3b9ad0106c9619a28b753d8fd18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a226d2f6a6bc53a6f75786ca8fad3fc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a33b2fb89235eebda4e6820d4a80a4c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a2c2effcf940fdee8eddf43a62360f7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aa99dcea38d9cd8ea3b8a6e9ea85bcc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad30a0d4bc893eba11d08d72b3916ca2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a4c9ee7d82e322009e85f7cd739bbb692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ac4d69a20b22df53a63ad8589bbdf6f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a083f32474a84d344e0da496470085c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ab24eac408b0d2ae6b5f68ed3a7cd2d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8e6d82461abbb8be043f8addd23f76c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9215cd0ab46e6db8668d8bfbb3cd76a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a4a51dcbdb981d0357447115d7ccf3b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a347bac4a7d9ac64e3019a2f3238e09fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_MU_LAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a1f71fdf666f5dea8b84d627ba84a9ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_A_LAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a9d1017ad6b2f73e97f20cf933a5d8a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IMA_ADPCM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a984ec5c790504560bfc7564cfeaddc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_MPEG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3705d4bd3266f3a68c276da9e7a65660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_GSM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a32ec1ed1e6bc5eafff1547e1401f679c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abeb8a83f4a3f685cf8051842ad40d25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a17cbdeeafef56a2e93719a1866c9681a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aed034cada192ddc4814c6ebf19f37bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abc818f93cee1a1602d808549ba5adfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_SPECIAL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a770a94546bff2f0d07e32dd22c5f9a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a1fd8c22f3dd45fc1b8e41b0b5e6107ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a531ede921f12bd96e02499f962fdb7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a76ef58eb516389000bdc678ca69515c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a26318cc44ae67775ccedc1f5ba07d925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8f23da6a6564831a09f079f4d0e7fd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a178dd8e9b92a0dbe80ae837979720fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a15eb6dc96e7940b06b2b40fd483073a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a8d4e75049c83e0b26493d4d149de5b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S18_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a89ba6879c39fec5ee33f2b760ebd7053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S18_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad49193efd29a9f7085ddcd08e3b33eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U18_3LE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3ab354cc702a7b9d651aec726bb8a68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U18_3BE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a0bab067dee022bd684b1015762a44663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S16</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8aac4470b6be81c22af0cfe528bee4a474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U16</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a032b33ad0fe643a3177be26148f026f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S24</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ad2eb0073f6d7ba800695c088b32956a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U24</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a036c86abc5151b9a1f19476d34120994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S32</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abccf973f2b6eba3481949a7b5b04f4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U32</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8abbdd76fc846d3a68c19727a44bd38336</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a7d9fd83c6ff5be7a9cde4b0673b64bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_FLOAT64</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a0ecea6572fd04ef25ae24cde617eaa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_IEC958_SUBFRAME</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a7ecefcb13f1fbb3ffb24f9b6582d53cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_S20</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8a3a80019ca0ede6cc2278ed13f03ce3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_FORMAT_U20</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggaa14b7f26877a812acbb39811364177f8ace45a12e077ffb0be4df727cc23ea099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_subformat_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1e5fe73a6bdf881e2f91921d5e5327c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_SUBFORMAT_STD</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga1e5fe73a6bdf881e2f91921d5e5327c7a09a538c9147dae5bb19df88198f0ebb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_state_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga61ac499cb3701ce536d4d83725908860</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_OPEN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a56cf8033b50561b57437232e243f3007</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_SETUP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a58d9a0501aa1b2bd2607e1084c335672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PREPARED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_RUNNING</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_XRUN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860ab63b5b90201110cd586b686355fd5d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_DRAINING</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a86f88c2a4c8eedb5c91f3b6cb4879cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PAUSED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a9fa0c5b43e5c924f87b50e22878a8952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_SUSPENDED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a79a05b6b619f88e153d50d9daf2e84bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_DISCONNECTED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860aa0cbad634a40383eed6059d1b49c215a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_STATE_PRIVATE1</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga61ac499cb3701ce536d4d83725908860a5003a732bf308c84259933c64ab02f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_start_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0eae9150f4f207ed05cb629cc3a3673f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_START_DATA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga0eae9150f4f207ed05cb629cc3a3673fa1784d28a1a0b6d0dc9726e8093fef095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_START_EXPLICIT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga0eae9150f4f207ed05cb629cc3a3673fa3f7514d50731fbec3bf3963f8f50e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_xrun_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga67c10983b5cadd8b3eb3163489655784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_XRUN_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga67c10983b5cadd8b3eb3163489655784a2041251f57b2d807a87dbb33de4a0299</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_XRUN_STOP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga67c10983b5cadd8b3eb3163489655784a79be5aacb29e5eb3cea538eb7a24c57c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_tstamp_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga695a9755880cf886c13d07938f92ea77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77af49a1c378583854b22ed6f6490f3b1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_ENABLE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77ac62f4ba2b203d59b8f11074fb12788ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_MMAP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga695a9755880cf886c13d07938f92ea77ab09196ab367636c4d365b5b6bcd391d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_tstamp_type_t</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6e7869809e23ed1a3595e94fbd9a275c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275ca363906e727cdee56da82cab964ac3ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_MONOTONIC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275ca649eaa23a8ba59ef31b7cb1582a9d2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga6e7869809e23ed1a3595e94fbd9a275caaf1a88d034848bf2154be94ace1f8cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>_snd_pcm_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga060d5b81f2fc8efcc35ff3e1de6e9fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_HW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a09891cdb0b9282c37c41941b922b12c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_HOOKS</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a2e332e4a85ab27030c8504a2becc02ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MULTI</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a568ddf1cfbafe64782e3073b235ff5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_FILE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a583a91928c037820337cd8915cd85e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_NULL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a1fd5236858488b6bb1c565ae83ba451d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SHM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a7af39420542c41f72a62551b2ae8db6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_INET</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3b07a18a1c2cadfc4e2eec2d62aef57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_COPY</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af09844304be19ee3a81ba5e2165e00bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LINEAR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3a89f56e7151dba7ba93e392fe709222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ALAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aaefed6aee6ad9570fa3fdd5943702e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MULAW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a225a22f28b83348c81b9962b53f68419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ADPCM</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a8b358976321af44871bfd4f5743eb7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_RATE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ac551ab5a7b8c32d4a79a9f605287c4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_ROUTE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a25b8c982e260c67fdf3da22a7d68bbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_PLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af03892219cb4ca4f07025b7a67d3890e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SHARE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a5f90c13d40f32cdbaa24304f1f4aa260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_METER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a415afb5482d35b38837035a6dd82b39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a9d46de594d5885faa0fc4c3075eade76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DROUTE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ac48d9a315b2094989b303b62939f4d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LBSERVER</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a819e90fe76ad9b1f8615cdaa76d47606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LINEAR_FLOAT</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af99ee7d59e1195c15440b7688e36b4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_LADSPA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4af3096430cd38726e8dd3751c611af13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DMIX</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a1345bfdf8c4052ec4eaea99ddca5b25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_JACK</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a3c059ea48c0ecb784421997aa302ff44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DSNOOP</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a4fd7bc5c326b81d47841dc3133c6a154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_DSHARE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a02bca0b5efdbdfedb0983dacac599977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_IEC958</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aa94a5d305b7803cf7ccda2ca0099a954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_SOFTVOL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a80dcbde2dd52a423f8c5b055aacaa17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_IOPLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4ad4b0a23cef67fe330cce313c4f9e242a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_EXTPLUG</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4a876553cf6a0650a8adcb17c3e768a8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_TYPE_MMAP_EMUL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga060d5b81f2fc8efcc35ff3e1de6e9fa4aa426bf738261ee3cd1ca3a25d8cbed12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_chmap_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad77f16d07431203bacc8694d28814506</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_NONE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a0d5c1dab935398488b798934515f1fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_FIXED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a223cda2f0c432fc4706089304b550e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_VAR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a4c6c131c3ec7eabf1073244c9765a3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_PAIRED</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a7f52f1c242f67d876d2bc920aba932b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TYPE_LAST</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ggad77f16d07431203bacc8694d28814506a19c6886e5e3b457e1a6f055f124f0fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_chmap_position</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga07f09c302588b9758946fedf97772975</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_UNKNOWN</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a5013bd25392cde7881a00bdb4ab030ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_NA</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a757ea8c2af5fcce95adc50d1faf12956</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_MONO</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a57f7b8aa28a96384e75d6a75c7f2728c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a583e5b3018a572266dff31ceb647173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1199db6603bfa8756b109720d6f47b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975af55c7cf1772be450187b9c733e5a4601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a2de6b761ffe69645bdc84dcc154ca704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1b986f167d0af5a2993688f0dc4f7ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_LFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a2e02fc34fc3156b9b651ddafe9430e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_SL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975abef51a1484c1b62ba57abdbf4c319018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_SR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a99a126ad5674edde88e274247cdc77b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ab826e0b6dc51913bed17b9c9cd501b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a899724c4ba10d58f489aa95b1be85707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a715eee05d56adb21c32f04a2dff32f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a792ec89e7ed77e517fca9a042030cf91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a01bb8ab068f1ad7ea82201fda13e7351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a0aba5e9499f8c439d7af5aba4eea7013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRW</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a866fd0a5bdacb87f672c06b19c95e3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FLH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a0ebb60cbf70f6bdf44f23ca53f27a48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FCH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aa6fc16c41ed3c77d03d5338b71767dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_FRH</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aedc57856e5d15e089ca997bb2517e558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975af92f549344923b13b3f988a8bd411248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ab408982aed624e7895a88a70d3cad9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aac94c3e49e00cf6ddc8277be9211af8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a8afc5e5e7278cd11e275c353f7debb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a9801a726d1ef900db691fb3ee766c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a8f2b99c9f99b964305e7b20a24205845</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975aa38f97720df84f0d0a729a2977a7e96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a056a6a819e4f86531c2f72f2cca30a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TFRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a1901ba205094fa4d78ae1b6ccba2a0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TSL</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a37e4efa8f78e28245172e609b3e2edb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_TSR</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a002352cd72d1a7bb12a371c0a700368e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_LLFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a98412e4b242d63dd0f6543d7979f65d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_RLFE</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a5a90ba518606bd795133b7464e297037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a6bdb9ff785f20a01942c51f5306f1b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BLC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975a64d185c840a6c5a85b373c7b4c24a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_CHMAP_BRC</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gga07f09c302588b9758946fedf97772975ae8657844c743e6303622c8a5db01f9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8340c7dc0ac37f37afe5e7c21d6c528b</anchor>
      <arglist>(snd_pcm_t **pcm, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_lconf</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga88164d313d8ff9dc33c94815869cb677</anchor>
      <arglist>(snd_pcm_t **pcm, const char *name, snd_pcm_stream_t stream, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_open_fallback</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga189a69e31cec0aefa8c124764e99e0bf</anchor>
      <arglist>(snd_pcm_t **pcm, snd_config_t *root, const char *name, const char *orig_name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_close</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga042aba7262a4cbb4d444b6fc08cb7124</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5031edc0422df8db1f70af056a12dd77</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_type_t</type>
      <name>snd_pcm_type</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa7cf89c3f83d83aaa0248055a783b632</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_stream</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8eea4a021a114ecc3e8f6d80901faf46</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_count</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac7f4cdb1c930b8d343714f60afa02fc4</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga742e8705f6992fd0e36efc868e574f01</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_poll_descriptors_revents</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7e561f305702c6f52dab49b6c84f7df7</anchor>
      <arglist>(snd_pcm_t *pcm, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_nonblock</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8d9ed4a62c17402de0389fd31fc7dc1f</anchor>
      <arglist>(snd_pcm_t *pcm, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_pcm_handler</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5a0c0da6d0d35a3ac9f6a97567ac3b63</anchor>
      <arglist>(snd_async_handler_t **handler, snd_pcm_t *pcm, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_async_handler_get_pcm</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gace4920d5943820c395dab8d9cd4fed0a</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gadd9467ca75884292234e4986b329a17f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaf8cd01c4c6b79c4a45a2c816fb8fbc5f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1ca0dc120a484965e26cabf966502330</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_free</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga242ad0a269c272830d30666220edbc2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_current</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga61c5495ffb44c75aaa595e85512d28de</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga891ccaeea2c685a533b61b5fa0493974</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_prepare</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga788d05de75f2d536f8443cb0306754d0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_reset</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga390e084f13d24244196aca64262ce3fc</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga32891eaac37741728a9b23027012c892</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_start</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6bdb88b68a9d9e66015d770f600c6aea</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drop</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga7000ca6010a1a2739daddff8e2fbb440</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_drain</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga49afc5b8527f30c33fafa476533c9f86</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_pause</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad711b582c7066bd4fffa1d08a04316b5</anchor>
      <arglist>(snd_pcm_t *pcm, int enable)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_state</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga87896f6f17020fc19835790369e7ce75</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hwsync</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3b71a41f6b300bf63ad374013f19d8d7</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga012e8b999070e72ab23514f25e7d6482</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_resume</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga13083ce2209aab9ea73831610bc61ab1</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_htimestamp</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga3946abd34178b3de60fd5329b71c189b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *avail, snd_htimestamp_t *tstamp)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga577b4d51e08d94930a05bbe73291ed2a</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_avail_update</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga8bb836bd0c414b59789d51a5f5379c08</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_avail_delay</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga170bc44da2607b5583cff5ab5a985d98</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t *availp, snd_pcm_sframes_t *delayp)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewindable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0ea7a8aade4e6e76f2cdfd8c85f37bd0</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_rewind</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga6c66040dbe01797379436fdf36268fec</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forwardable</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gaa2f506e03630a074130443d7b9c1a27e</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_forward</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad0774fa8991248c6f1c264aaeb0b4207</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writei</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gabc748a500743713eafa960c7d104ca6f</anchor>
      <arglist>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readi</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga4c2c7bd26cf221268d59dc3bbeb9c048</anchor>
      <arglist>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_writen</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae599772ce3d0aa6a70de143abcf145e7</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_readn</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gafea175455f1a405f633a43484ded3d8a</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_wait</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad4d53d58b996a7cd9a5cbf1710b90375</anchor>
      <arglist>(snd_pcm_t *pcm, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_link</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac6c33091b049985baa6466e8fe93917e</anchor>
      <arglist>(snd_pcm_t *pcm1, snd_pcm_t *pcm2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_unlink</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0d3af5e30593dae857b4308aab5035cd</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga675cb6a0fd5470345105574216a652c2</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_query_t **</type>
      <name>snd_pcm_query_chmaps_from_hw</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gae766a086ec64ec1189a87da3e54b8441</anchor>
      <arglist>(int card, int dev, int subdev, snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_free_chmaps</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga0a131c274594f6266b9a3f980e479e49</anchor>
      <arglist>(snd_pcm_chmap_query_t **maps)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_get_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac3150e89164f6cb1276abda84b399c72</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_chmap</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga60ee7d2c2555e21dbc844a1b73839085</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_chmap_t *map)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_type_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2c559ecbc8f79457c1d7be5d08365739</anchor>
      <arglist>(enum snd_pcm_chmap_type val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gac13f471d76d025798a25f3b422a07b91</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_chmap_long_name</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga5dc94582c2356ad6f214761de888bf43</anchor>
      <arglist>(enum snd_pcm_chmap_position val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_chmap_print</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga1e10b4d6db07a3ef3a1105e703a38629</anchor>
      <arglist>(const snd_pcm_chmap_t *map, size_t maxlen, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_chmap_from_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>gad3e0c4157e5f491ba448bfd4d4dc0177</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_chmap_t *</type>
      <name>snd_pcm_chmap_parse_string</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga77973afbe7ab02bfde38d574d4879355</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_recover</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2157aaeb6fc14da3f040d76591f9d3b1</anchor>
      <arglist>(snd_pcm_t *pcm, int err, int silent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_set_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga45d50841b307f2156fce1857bfac228c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_format_t format, snd_pcm_access_t access, unsigned int channels, unsigned int rate, int soft_resample, unsigned int latency)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_get_params</name>
      <anchorfile>group___p_c_m.html</anchorfile>
      <anchor>ga2827b8fa77ca05717df9b0447b99d1cd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Info</name>
    <title>Stream Information</title>
    <filename>group___p_c_m___info.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_info_alloca</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gac60fd444f9e73bd12bde83b783f9b4f8</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_info_sizeof</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga782831adf8ee2ee52892479ea0222e67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_malloc</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2386bb8f334424c1ff2b8854ff29ac0f</anchor>
      <arglist>(snd_pcm_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_free</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaa919792762d0bf606f9fe45872231f28</anchor>
      <arglist>(snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_copy</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga139884ae6fb3cb5621591f2d6e044a42</anchor>
      <arglist>(snd_pcm_info_t *dst, const snd_pcm_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga137b0bb60ad14009b9da04fe53849553</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaf0e6c1ec0443820d5c14c48ecd1b698e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_stream_t</type>
      <name>snd_pcm_info_get_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gacf9b5a69f2b0ed9aef5b9b0d2ed61aae</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_info_get_card</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga3a632a14559c1ea0d07b27b0596c4e41</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_id</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4ce080eae74ed95baa79ffb80a91df81</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad48dd79e45631811c297ee7080681bc6</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_info_get_subdevice_name</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gae2ce3c55d4439ae423b854358ff08aa1</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_class_t</type>
      <name>snd_pcm_info_get_class</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gada845e969b0b9c959134f42b98d73c5c</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_subclass_t</type>
      <name>snd_pcm_info_get_subclass</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga30670ad0d94f4358c3f16cc80ff3ba85</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_count</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gaeccf5d684a23455aa9fc31f8756eb222</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_info_get_subdevices_avail</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gad78bccdeadd378461073b4e6bfa5272a</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sync_id_t</type>
      <name>snd_pcm_info_get_sync</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga4a46693c8a81912de84f814c3eecd06e</anchor>
      <arglist>(const snd_pcm_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_device</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>gab9fe6f542c830c516f78ee9124606430</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_subdevice</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga2a1aea3ed02b14de6535f59d2cc80148</anchor>
      <arglist>(snd_pcm_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_info_set_stream</name>
      <anchorfile>group___p_c_m___info.html</anchorfile>
      <anchor>ga6bd83454c365f212e47f42ee84db06ed</anchor>
      <arglist>(snd_pcm_info_t *obj, snd_pcm_stream_t val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_HW_Params</name>
    <title>Hardware Parameters</title>
    <filename>group___p_c_m___h_w___params.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_hw_params_alloca</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga06b83cb9a788f99b7b09b570b4355cee</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_any</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e2dd8efbb7a4084bd05e6cc458d84f7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_mmap_sample_resolution</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga53b3b351bc5db48da18d5f36b98f79a9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_double</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bfe71142e72dffb274f8ba9ef7edeee</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_batch</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga366395c87f811d8ab8df83dc8a8a8124</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_block_transfer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac511eb0d4db6f1e8303161486061fe14</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_monotonic</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7a129f7671fee8c0ced42d64a6c2379d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_overrange</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacb214bcb2af7462195da73b060206800</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_pause</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad4ba98b2f66baa5360b9a85f064a3e9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_resume</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6b79539a34e6f51972f4c32b3296585a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_half_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabaf7b36cfb700973fe8d89971f0f967b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_is_joint_duplex</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae8768da025e34e3c3c6b5a5dfdcd2ad4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_sync_start</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafcea258e7d9b6094350699367f2ef9b5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_can_disable_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0f8922537619c70e41bf07eb740e54f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_wallclock_ts</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafd935dde74ea0da6824b204eb78eb620</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_supports_audio_ts_type</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2071d14dbb09232ecddf2e236bdfdf7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_numden</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga556ddf9731e184cb635994f739a6efe3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *rate_num, unsigned int *rate_den)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_sbits</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8bb1180b62a4225f0e094b95ac5d3674</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_fifo_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12fe3e1ca110fd61cff685890366c743</anchor>
      <arglist>(const snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_hw_params_sizeof</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga092e6c110ad7b4e52855b9522e437ed9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_malloc</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6e53d09a9c7cc3f2a692c0af99886237</anchor>
      <arglist>(snd_pcm_hw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_free</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8c094063e7a13be0b9a043be8616a181</anchor>
      <arglist>(snd_pcm_hw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_copy</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9bcedf4bb4b21527a584846a5986a1f4</anchor>
      <arglist>(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga752e62bb419c7ebe151f8023f5eed1f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab56553ff541e6e9ddae397f6faba840f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4c8f1c632931923531ca68ee048a8de8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fd545bdf469d54cff6a038e31ce56ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga172b949e37f28da5a102e56b04f69be3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad54808a277db646cbc21be07efc31000</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_access_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga20079e218c9307e4e683f0743f3af38c</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga66b28dd4f26d603e923a3577d1a2e98f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_format_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga64e1a5143bbd72c8f5cffca828d506ef</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6014e0e1ec7934f8c745290e83e59199</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga762ee356cc687c81c206df3c18245e4a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4a643db96742a3da0287eda6cc3eafa2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33261bd41636eb28fd42493e4ea4efba</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_format_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga43bdf7596f8722fb6b8edbeaf1aebd90</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga77a934515c24e17cfb0af21a8b2e0690</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf5062e723956551092db201f34c99495</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga08dfde7d1fc6a0a56609f3ec40ed26e2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga12b745bdf119127f2216d61a2bd28688</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab1a02fff3ef394da274d2b2652df856d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ebc4625b258df82164dc9220a9f9117</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hw_params_get_subformat_mask</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaafee81722f5bcba41e16e4c7a77059c2</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae27e04757272070197e00c0dfec5dc97</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga93326349bbb91840a3e0bafef0390cb1</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac6c37a5da7dc8cb19fdd8e9cf1bd673d</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8fabc38d770ad922e5b4e0338e7fb242</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3a5b2a05c5d9869cc743dac71c0d270a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga155b8ac646b90560cd00f195086ff464</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga739d51d0822f182a6583a5436f410b34</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga24e507c965aff4984aa4969cc896e830</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga59aa9e1a02f4ce616fe92c605a833f8f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae08e3371d3d2e8e512537630a59f9a55</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_channels_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga54846380c1dc99ee9124d45232931ebd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga4279c4b45a15f7e282e436e75d6ba13a</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf7801fdf88fa51ca96fe97d3211db3f7</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6770c2b988c8dc91eb51893cc145aa2c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5f09b37dd6f4c213029f8f39e00137a3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga29cd2571738847813af1489043d1af5a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga89374ae29dd924915ada6f26cd9a3292</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga8701776750b18b2dad19a4115791c2f0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga03795a2ee03be25a30185b26a1bc3e21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga39124280d06ce63092a77e3f25ddd6ee</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac0ded856c76459608fdd5ea0f254349e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga5d90a5204061482be45ac4e0d2b10e49</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga82eecc0e27a94ce0caa195cc3765536c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_rate_resample</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacaa53b05cd5e4f55eeb4d5ea64129c21</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c0b6b22bbeed5da06293608f3be844d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_export_buffer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gafec078cf053a87339ba91c0f605dca54</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac2761ded0a51cabc953beac44f65972b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_wakeup</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga426a657640410a4c6a652ab15eb57acc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga71f5d43bf63dc7292b8b58f17acccf89</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gae68d4b168ef5d40f644a1a4ed854689f</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga74b510f4958e90a83a631a1eeedf13e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf1f6452ad189be5c4e1ab3bd86f2f6d2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2bc2a32d3971521064741a30e10c92f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2dc9fcdb1b30126a20d96a65c7826d9b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaad53e3af1f1fe522c3d902f5403954d1</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga993e05e43a31a6151427ba1f793c0b3a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa22d4f917c300b0c1f47b348c23705a4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga478e50e1fa7395af70100b906c31cb67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2d48b4bee369912b0fc9b245d6c7a52d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaba48ea189171536f9793e0d99e6db5e0</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3f6fe37605b54d0a25e8bf1d10f71ae4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab5c16621ae697e5ee6f442ec7b7062c5</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabc8712dab6cb135176de77f374d7ee17</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga874c977dd9aac275c87a7b1c33a0dec0</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga58e0468994d935f08080d9654f1b48b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga909f442c3d8c20b79de2edf6cc5ded41</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga33c901f8364cb2533d6cdeba732e0e4e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9162045265f283c532634506456cab09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf74bbb66a71ece8260be20502822335b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gad0bce0ad23b3b708858bb20df81e09a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_period_size_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga13bc85ca5fe34b19112579a7e27cf41a</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga7242d7045ae23a9ae736c191030c25e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga17f3826360b0fe1f47c696388d25ac93</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga60417687267cd6ddc56a9c15179fe275</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga0de7350f433935a995d439fe38f55088</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga472aa3f2d8ce4040caa874fe60aba961</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa2642b54ed1c2e26e595ecf3d5b29edc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga636d1d9a6333fb2acc8a6e84391ea0a6</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaf638d94e53872415d3bb6d9169104891</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2fadb73803f58b900ac34846c14894ca</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa8fbd81ce54fac30f60768fb36210a6f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga1366dd00b920ef459d2dbf8a64408725</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_periods_integer</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab7356d30758dfcf11ff5874fd033913b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gabdea994550dbf7ab176e3c90baa3a30b</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaa18c9999c27632f6c47e163b6af17fa9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga67a33176f4f05231863b37b09527c0e3</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga9b6bf73e2a0b7f887f3d7d85a988eb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacad42b93e31bca4c9b4074d6ec236d99</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2a7cb8c29b2fb75b615366dd40a7dc13</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab80680ff70b72435addde58e88fc1d7b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga84964e55717a7db70b55f320b56f343f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3bc1b188576d6d2daae9c56024813d10</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga6a29e5f80671ca89d0c185416b5a6c2c</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_time_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec8788f14a0c5452dada23a49cdd4b71</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gab6556fcaaf926360d2064044a6f6cfb4</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga182adecca0ad204a34b27cdaa9d4f672</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3caf61ab086028067b602d48182df708</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga3ce81a7fe9f677849881f1cfd3b5cb7e</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga828cf9e11fe84137c2c8d4938a6fca7f</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_min</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gacc0d26a23389470eae502a3c9f4a2980</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_max</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gac36099175c6a85db4a1e51053d5708af</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_minmax</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaec830be678524b0a6a173896bc9d2c67</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_near</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga2c00cb635d374030595dbc27b7a983a7</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_first</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gaca09ba489988fe957fde43cb9dca56a2</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_buffer_size_last</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>gade5604a3fe1de55c76942ee4f4e41219</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_min_align</name>
      <anchorfile>group___p_c_m___h_w___params.html</anchorfile>
      <anchor>ga254712953cb8abe8b1d8478233863217</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_SW_Params</name>
    <title>Software Parameters</title>
    <filename>group___p_c_m___s_w___params.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_sw_params_alloca</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8e564553bdc89948c918729e3cc7beb0</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_sw_params_sizeof</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga7886ee5b3a48fb58ef8f70886472029a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_malloc</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga23382b62e7fc0de94b279c9f5dd08e5e</anchor>
      <arglist>(snd_pcm_sw_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_free</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga35af2df23ec46619a82cb52e3733d47a</anchor>
      <arglist>(snd_pcm_sw_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_sw_params_copy</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gafe9ebe9ea669012af58b728d55fc295b</anchor>
      <arglist>(snd_pcm_sw_params_t *dst, const snd_pcm_sw_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_boundary</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8bdb67600cf3c0705518b6c0a79c56fe</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gac2fba23ba6ac1636785e27f0f5381a15</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_mode</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga4caef7435210cd7f4878d55dadeed0f8</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga912bad749f6317000eede607bb0bc935</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_tstamp_type</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1cd956ea3dc0e32e32abc99af50f0819</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_tstamp_type_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga79b12cbbd309750156261e7f5a39167b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_avail_min</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga587ccbb0b025dc97d2af5db9516163d4</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaf62ce50d6242b4f4dc9d6534a97e5c09</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_period_event</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga0458a8fe480a7887726748052bd77211</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, int *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1d338f1f7e33b7a6d0f9a8f61f87f057</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_start_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga1ee7116c68bdea12606aab57db86a1d1</anchor>
      <arglist>(const snd_pcm_sw_params_t *paramsm, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a41bf533207d56fdb1ff10aeeac28e4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_stop_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga8a55577d7f3d8e4ce63a710921199c66</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga5a0158bf962f20bd9fd5ed2c52dd682b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_threshold</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga896ece8b418f6d6e92d2df5a4b59c3a2</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>gaeb4a335a16981b5ea3fa671946fbdca3</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_silence_size</name>
      <anchorfile>group___p_c_m___s_w___params.html</anchorfile>
      <anchor>ga6a197020c09c8a20e697d12e9fac3e11</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Access</name>
    <title>Access Mask Functions</title>
    <filename>group___p_c_m___access.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_access_mask_alloca</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga8097b3ae42fa4a2e5bece2ca95b515b7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_access_mask_sizeof</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga963ead3f1169f4b5e03a2968adc9cb0a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_malloc</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gafedd1f9c96aa8a93ab7f2c0135de3780</anchor>
      <arglist>(snd_pcm_access_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_free</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga965129493161fae3ab534209b7e6b2bc</anchor>
      <arglist>(snd_pcm_access_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_copy</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga4fc7338c7c0cd715ea384d4e308d5925</anchor>
      <arglist>(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_none</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gaa8202ce90275d6dfe2623cbacbc93708</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_any</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga76b2575826977951a862c5e78e81993c</anchor>
      <arglist>(snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_test</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga381ade7f78d8614b38dde36ba0393f74</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_access_mask_empty</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga224e84b7b1362aea503b0595512bac77</anchor>
      <arglist>(const snd_pcm_access_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_set</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>gadc0a0f989a9faca8b25b2c35d4b14e14</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_access_mask_reset</name>
      <anchorfile>group___p_c_m___access.html</anchorfile>
      <anchor>ga35c6aaf5b55ef8dd1c4939467869db86</anchor>
      <arglist>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Format</name>
    <title>Format Mask Functions</title>
    <filename>group___p_c_m___format.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_format_mask_alloca</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gadee8697e8c4f7fc018603fbcbd0a4b31</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_format_mask_sizeof</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaf260158e21491d2dfff62aa2b2ff06d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_malloc</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gace20f58f4a93c39b006fd13bfd642da5</anchor>
      <arglist>(snd_pcm_format_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_free</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga3a8b2f75bcf9e2b33602297123a6f3b9</anchor>
      <arglist>(snd_pcm_format_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_copy</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga5fa45349fe88454faac051f476629174</anchor>
      <arglist>(snd_pcm_format_mask_t *dst, const snd_pcm_format_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_none</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga42342f7e5dd7c1c8401482d8db9c1013</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_any</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga56f394e000ea4aadf73d1fb97fd994cd</anchor>
      <arglist>(snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_test</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaecb1d19be63a1b18456300eb4d07a8a0</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_mask_empty</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>gaa942122189c757a1178749cebeb73d48</anchor>
      <arglist>(const snd_pcm_format_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_set</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga03fa8dcc8da3dbecc164143b43d40056</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_format_mask_reset</name>
      <anchorfile>group___p_c_m___format.html</anchorfile>
      <anchor>ga60cdd13f69735c11cfaa0856b0f25a3e</anchor>
      <arglist>(snd_pcm_format_mask_t *mask, snd_pcm_format_t val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_SubFormat</name>
    <title>Subformat Mask Functions</title>
    <filename>group___p_c_m___sub_format.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_subformat_mask_alloca</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gaf450592f4db1a03f975a3c41011613a5</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_subformat_mask_sizeof</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gaab4db5767975e4c4e7a54fe11450085e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_malloc</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga4a9eb9095b23b4e338aa390e515d5eb4</anchor>
      <arglist>(snd_pcm_subformat_mask_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_free</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga1e0e09005efe4c7b34819defdb4d1308</anchor>
      <arglist>(snd_pcm_subformat_mask_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_copy</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad5f8e09819ff0d6d4175d794670703af</anchor>
      <arglist>(snd_pcm_subformat_mask_t *dst, const snd_pcm_subformat_mask_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_none</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga3b87315e56fed79bbf265790ff5f6e72</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_any</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad065ae392b7bdeb4b32708cc9909dac1</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_test</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga2070ce06de13f676eb925c28db92c8aa</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_subformat_mask_empty</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>ga642323afb10ecd348ebf4eacb1cc0ec0</anchor>
      <arglist>(const snd_pcm_subformat_mask_t *mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_set</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gab5a57e4ba0d3747ebc5b959460c0037f</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_subformat_mask_reset</name>
      <anchorfile>group___p_c_m___sub_format.html</anchorfile>
      <anchor>gad1033cc4c9d843e516833c222f2a570a</anchor>
      <arglist>(snd_pcm_subformat_mask_t *mask, snd_pcm_subformat_t val)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Status</name>
    <title>Status Functions</title>
    <filename>group___p_c_m___status.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_pcm_status_alloca</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga046c09e5d14b684d9fefd70a12cdde1a</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_pcm_status_sizeof</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6a8ae2a4786419af7853687a99436d8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_malloc</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaa97cf9bdc31e686fe491985486194a64</anchor>
      <arglist>(snd_pcm_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_free</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaeb0a7ff880647e7255cb58904270106b</anchor>
      <arglist>(snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_copy</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga307827ec2057b969520c7508fe41dd63</anchor>
      <arglist>(snd_pcm_status_t *dst, const snd_pcm_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_state_t</type>
      <name>snd_pcm_status_get_state</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gabaae998f0d374c50195b3206d1e43659</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga5eaeff98814e96c2ffd5f04c95b22c8d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_trigger_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gab1c832aedb25670d010c53d9081a4b31</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_tstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gaea54e0a110afa01dd42071a1ca43902e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_timestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gafa66bda27a6b914e66e053bb76571013</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga15d17e74f3352e189df5ccd4cc4c116d</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_driver_htstamp</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga6ee47c7a98005629ec691eae4b7f1b0e</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_get_audio_htstamp_report</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga79a7e633c36d79aab76c3b4ee39e1588</anchor>
      <arglist>(const snd_pcm_status_t *obj, snd_pcm_audio_tstamp_report_t *audio_tstamp_report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_status_set_audio_htstamp_config</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gad0dba60f0f312167755500cb49e24eb3</anchor>
      <arglist>(snd_pcm_status_t *obj, snd_pcm_audio_tstamp_config_t *audio_tstamp_config)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_status_get_delay</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga1fdce3985e64f66385a5805da1110f18</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga91c110525060b925ad4f0c21c205b757</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_avail_max</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>gac58d13e4d03c9420c57428ddffd94964</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_status_get_overrange</name>
      <anchorfile>group___p_c_m___status.html</anchorfile>
      <anchor>ga3f4bfd0a0327529abaa621b248b6b1aa</anchor>
      <arglist>(const snd_pcm_status_t *obj)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Description</name>
    <title>Description Functions</title>
    <filename>group___p_c_m___description.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_type_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1089d73f52de6e7b724f7453d6f48f36</anchor>
      <arglist>(snd_pcm_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_stream_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gafea7e7c65133faec1da1ef8b2d079578</anchor>
      <arglist>(const snd_pcm_stream_t stream)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_access_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga1406fe8388a612b8e44e5f3682d00e91</anchor>
      <arglist>(const snd_pcm_access_t _access)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga2ca258b8ac569ca35f283e48d2181e45</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_format_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gae201c92e3053c778bd7f2a4f5cc4d0e1</anchor>
      <arglist>(const snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga81beb8c430d897208269bd67bb3309b5</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_subformat_description</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>gaf4e162f7a059cbbf8c388cb9ed5e23fc</anchor>
      <arglist>(const snd_pcm_subformat_t subformat)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_format_t</type>
      <name>snd_pcm_format_value</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga59f99dd9647315a7312d1f2b6204b7bc</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_tstamp_mode_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga9a27f18595344de572cce51c4e52ec4e</anchor>
      <arglist>(const snd_pcm_tstamp_t mode)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_state_name</name>
      <anchorfile>group___p_c_m___description.html</anchorfile>
      <anchor>ga16ea2b82b7ea8f8c7b21e81aa6d28f1f</anchor>
      <arglist>(const snd_pcm_state_t state)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Dump</name>
    <title>Debug Functions</title>
    <filename>group___p_c_m___dump.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga9c5c879409c504e155e234905d031d8d</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_hw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga46dca88304617a198814f6cfc6ceafae</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_sw_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga97b72a21c2bb1ae553fa909c3d42c294</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_dump_setup</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga3ac87790f8cb642e7afe4430e510572b</anchor>
      <arglist>(snd_pcm_t *pcm, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>ga10c221dcb86bcecd0d6fce4b1231cb49</anchor>
      <arglist>(snd_pcm_hw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gad6f510a9b1be8d88115a1192f9a52693</anchor>
      <arglist>(snd_pcm_sw_params_t *params, snd_output_t *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_status_dump</name>
      <anchorfile>group___p_c_m___dump.html</anchorfile>
      <anchor>gaf2427b186609ad502666273342467a51</anchor>
      <arglist>(snd_pcm_status_t *status, snd_output_t *out)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Direct</name>
    <title>Direct Access (MMAP) Functions</title>
    <filename>group___p_c_m___direct.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_mmap_begin</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga6d4acf42de554d4d1177fb035d484ea4</anchor>
      <arglist>(snd_pcm_t *pcm, const snd_pcm_channel_area_t **areas, snd_pcm_uframes_t *offset, snd_pcm_uframes_t *frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_commit</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>gac306bd13c305825aa39dd9180a3ad520</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_writei</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga5a9ee8e1e764b12da6d54dfa195f7c52</anchor>
      <arglist>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_readi</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga24b6c538c8d7ddd0776ee65f8fb909eb</anchor>
      <arglist>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_writen</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga092b1a7f387e9fc2977649bfd43b0958</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_mmap_readn</name>
      <anchorfile>group___p_c_m___direct.html</anchorfile>
      <anchor>ga29ce9af60eafb67f0303418a176bf3ea</anchor>
      <arglist>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Helpers</name>
    <title>Helper Functions</title>
    <filename>group___p_c_m___helpers.html</filename>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_signed</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8b88181b11a026da55897a926d56034a</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_unsigned</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8cd4e3ecc963942457e3b1b6f7661a90</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_linear</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5a52bb63323f463198dea3f3c6aca571</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_float</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga36ae70bef5bfd5e7ecc743f6a4d46cb5</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_little_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga89537d0a972fa124051f6ba1a78c4bfa</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_big_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga3c0c224b8f67e73cf2447bee0110f760</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_cpu_endian</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaf950358cdbb26bab53f63f28443bd2ef</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_width</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga8d4e07f2d68cc16f607857ed8a222a29</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_physical_width</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaa3e0ff7560342e5af2b5c7bd2d63a307</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_format_t</type>
      <name>snd_pcm_build_linear_format</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5f5ab1ac13de9598cf05877e4894e0d8</anchor>
      <arglist>(int width, int pwidth, int unsignd, int big_endian)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_format_size</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga5953a58f024f8cf762a9e4dae6b09502</anchor>
      <arglist>(snd_pcm_format_t format, size_t samples)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>snd_pcm_format_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaba8e5060f74a9d91df8ea550bf8907fc</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>snd_pcm_format_silence_16</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gad5c4439da2367885c2a237ddf5aa1254</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>snd_pcm_format_silence_32</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga78c61e7eef7a20b24cf03fd2a664503e</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>snd_pcm_format_silence_64</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga2006cffa80cc83b99f6f33547be18f35</anchor>
      <arglist>(snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_format_set_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga82631361cf1c1d13af207beb59cf97ac</anchor>
      <arglist>(snd_pcm_format_t format, void *buf, unsigned int samples)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_sframes_t</type>
      <name>snd_pcm_bytes_to_frames</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaf42fb6af35d3d85006c1dea2e11b3e54</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_frames_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gac05ac2b7c6e25986a71792392ff90b83</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sframes_t frames)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_pcm_bytes_to_samples</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gaeed610ddb01120b01b5a2e5cc59aa35b</anchor>
      <arglist>(snd_pcm_t *pcm, ssize_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_pcm_samples_to_bytes</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gae3669a4326ce185f4261d7bf96900f3f</anchor>
      <arglist>(snd_pcm_t *pcm, long samples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga23e03a8b127764fff669240986b96b39</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channel, snd_pcm_uframes_t dst_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_silence</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga1c0aab2a2bb341f1b1d154dae2b7e482</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_area_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga93d2f045575afb161abff126c3750049</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channel, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_channel, snd_pcm_uframes_t src_offset, unsigned int samples, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>gad57f8921f52ea2ffd870cafb2d076f2c</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_channels, snd_pcm_uframes_t src_offset, unsigned int channels, snd_pcm_uframes_t frames, snd_pcm_format_t format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_areas_copy_wrap</name>
      <anchorfile>group___p_c_m___helpers.html</anchorfile>
      <anchor>ga38797de781a0e4041408c58d49463062</anchor>
      <arglist>(const snd_pcm_channel_area_t *dst_channels, snd_pcm_uframes_t dst_offset, const snd_pcm_uframes_t dst_size, const snd_pcm_channel_area_t *src_channels, snd_pcm_uframes_t src_offset, const snd_pcm_uframes_t src_size, const unsigned int channels, snd_pcm_uframes_t frames, const snd_pcm_format_t format)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Hook</name>
    <title>Hook Extension</title>
    <filename>group___p_c_m___hook.html</filename>
    <file>pcm_hooks.c</file>
    <member kind="typedef">
      <type>struct _snd_pcm_hook</type>
      <name>snd_pcm_hook_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>gae6b33860eeaf4eca00bdbef9383c1911</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_pcm_hook_func_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga1f6104443e129a88c5ac82bf398464a5</anchor>
      <arglist>)(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_pcm_hook_type_t</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga57b6ba407d293017e116fa1b462a2411</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_t *</type>
      <name>snd_pcm_hook_get_pcm</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>gacaec88e4b6cc2a45e7a805487acd64ed</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_hook_get_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga1eb467cd5ab11817edc2ed7df3608019</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_hook_set_private</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga6930df3b750b3f62dee6846fb3f6a576</anchor>
      <arglist>(snd_pcm_hook_t *hook, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_add</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga89eed2fdcda68c1efae9180a3794d5ef</anchor>
      <arglist>(snd_pcm_hook_t **hookp, snd_pcm_t *pcm, snd_pcm_hook_type_t type, snd_pcm_hook_func_t func, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hook_remove</name>
      <anchorfile>group___p_c_m___hook.html</anchorfile>
      <anchor>ga4c59ad440d2479f957b477b26b90e4b1</anchor>
      <arglist>(snd_pcm_hook_t *hook)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Scope</name>
    <title>Scope Plugin Extension</title>
    <filename>group___p_c_m___scope.html</filename>
    <class kind="struct">snd_pcm_scope_ops_t</class>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_bufsize</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga39a4a1f88cd8b5e474d3d1d6f8e3a8ce</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_channels</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaeb0f82c12f8a1e57f4b6b09ad324f3ed</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_pcm_meter_get_rate</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga8c95279cba00918b29671205e38f3e78</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_now</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaa4929399573ca0e24b71a22b51d7f108</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_meter_get_boundary</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga543fd7565c138f1a408ec55186725908</anchor>
      <arglist>(snd_pcm_t *pcm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_meter_add_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gae37aa1c3ce01063b9047e0bd437ef749</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_scope_t *</type>
      <name>snd_pcm_meter_search_scope</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabb6cacf50cf10cb6e95853dadd19234f</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_malloc</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga360da60e074bffc146ffee93f8e79aa7</anchor>
      <arglist>(snd_pcm_scope_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_ops</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gabaf2af40ecc689cee2e81b9250823fcd</anchor>
      <arglist>(snd_pcm_scope_t *scope, const snd_pcm_scope_ops_t *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaae1d6cce40b244180c54b72aee0e00d2</anchor>
      <arglist>(snd_pcm_scope_t *scope, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_scope_get_name</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gaff680f85a1f30c83b4b544ead5ff5a2a</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_pcm_scope_get_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gada4e9d2bfe2f7dc2b638c6406b9a4b26</anchor>
      <arglist>(snd_pcm_scope_t *scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_scope_set_callback_private</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga683ced3c9344b8f6f8aab4997f74f72d</anchor>
      <arglist>(snd_pcm_scope_t *scope, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_scope_s16_open</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>ga3c1e3e9c3a5a99915de23bbd2635ae26</anchor>
      <arglist>(snd_pcm_t *pcm, const char *name, snd_pcm_scope_t **scopep)</arglist>
    </member>
    <member kind="function">
      <type>int16_t *</type>
      <name>snd_pcm_scope_s16_get_channel_buffer</name>
      <anchorfile>group___p_c_m___scope.html</anchorfile>
      <anchor>gac4297c74f130a89992459cbbc5ab029b</anchor>
      <arglist>(snd_pcm_scope_t *scope, unsigned int channel)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Simple</name>
    <title>Simple setup functions</title>
    <filename>group___p_c_m___simple.html</filename>
    <file>pcm_simple.c</file>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_latency_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga0c8bcbf9cc83e8b0edaa501b15ff8ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_STANDARD</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9a51386f1133cba0e74aad6fbd8f6cf714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_MEDIUM</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9ad392df38379992a4474f24fa2d0a7146</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_LATENCY_REALTIME</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga0c8bcbf9cc83e8b0edaa501b15ff8ba9aa29ff6c1b58c9b050df6ae575229cd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_xrun_type_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gaf89aba8106b8cc46e9f18d91268ec5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_XRUN_IGNORE</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ggaf89aba8106b8cc46e9f18d91268ec5baa7ef0dcc10a5e328bc78aa472d882f1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_XRUN_STOP</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ggaf89aba8106b8cc46e9f18d91268ec5baa716f9883b17fe11b35d162a6ff14a96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_spcm_duplex_type_t</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga6ed7a5a0762c198cb90ee48fb477b092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_DUPLEX_LIBERAL</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga6ed7a5a0762c198cb90ee48fb477b092a1baaaad19888ceeaf728364362274e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SPCM_DUPLEX_PEDANTIC</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gga6ed7a5a0762c198cb90ee48fb477b092a3efcb3f575fd6b86c0198dc87484f7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga5c55688bfe990821798936c20cd11ca5</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_duplex</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>ga148a05b14b083d9c6ded79dd6bfd7fdd</anchor>
      <arglist>(snd_pcm_t *playback_pcm, snd_pcm_t *capture_pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type, snd_spcm_duplex_type_t duplex_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_spcm_init_get_params</name>
      <anchorfile>group___p_c_m___simple.html</anchorfile>
      <anchor>gab6ee6daf2b83bdebf6cf6355c0365885</anchor>
      <arglist>(snd_pcm_t *pcm, unsigned int *rate, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_Deprecated</name>
    <title>Deprecated Functions</title>
    <filename>group___p_c_m___deprecated.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_start_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92ee6cf89b3ed71d47b7051f92699045</anchor>
      <arglist>(snd_pcm_start_t mode) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_pcm_xrun_mode_name</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gafd15306572f02e67354d65008e41dc8f</anchor>
      <arglist>(snd_pcm_xrun_t mode) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga77967d8bdd8f4baf08661443523065c4</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_start_t</type>
      <name>snd_pcm_sw_params_get_start_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gadd38871f4c64d9ecf8421b739228b19d</anchor>
      <arglist>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7f0da15ce674e09167688d3e98ec20ce</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_xrun_t</type>
      <name>snd_pcm_sw_params_get_xrun_mode</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga92a1742ca544aaa41de93d3d3661cb5b</anchor>
      <arglist>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e16b325ad44596db299468ccc4531b8</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_xfer_align</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gabb62c5df350f6ceb266f9ff02a3a6ac7</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_set_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga5e098517809fd447df0ea1a4df371e08</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, unsigned int val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_sw_params_get_sleep_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga82e216007e0093240ae9a96560434f84</anchor>
      <arglist>(const snd_pcm_sw_params_t *params, unsigned int *val) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga55342da81dd6611ab2239c650dc73b7c</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gab74b4c9b873754e189b1f96468fa38f9</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_get_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gada829ffd7b5b93a8d5e47a35322599e8</anchor>
      <arglist>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_test_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>gae8f2e422b5e6ec5328d003c75cd978ea</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga4e968294e94f56d3ffcb20945d8a8543</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_min</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga458ef7a2e8aa9445446e4e5ddba9c654</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_max</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga44f6dcae8ee774254d964ba41f2f8ddc</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_minmax</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga7b30d734fd89678f77563e655f7c06ab</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_near</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga9e871038328399ad5112747457256c53</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_first</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga257cc818f91ac4b4ae39710256a245dd</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_hw_params_set_tick_time_last</name>
      <anchorfile>group___p_c_m___deprecated.html</anchorfile>
      <anchor>ga1daa74f876820685cb4e3e384728f004</anchor>
      <arglist>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>RawMidi</name>
    <title>RawMidi Interface</title>
    <filename>group___raw_midi.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_DLSYM_VERSION</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga2b1694b5b3e98514d6b2bc5b824e9adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_APPEND</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7060640f32abcd337239bde2c8749d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_NONBLOCK</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga31ee35659c82272382ccc3014c8a73f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_RAWMIDI_SYNC</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab1a659b38e5174d790d5671739995894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_info_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaaa4c7257d03c396293cffaef02818c35</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_params_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0a7ab61af3880409ccd9adee0e756210</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_rawmidi_status_alloca</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa83c6963d341b0c067764dd1ba2c3d76</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_info</type>
      <name>snd_rawmidi_info_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab0f0f325ab812941e9b81addf0b941d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_params</type>
      <name>snd_rawmidi_params_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga98ad06bccfabc646530241d3a0eef5a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi_status</type>
      <name>snd_rawmidi_status_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga10a44a41000ef7dfe61f712466237aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_rawmidi</type>
      <name>snd_rawmidi_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa21972df6ca3ebde0f7225b2472d0095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_rawmidi_stream_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac3d11365c928cdfd3176ffede3e6f8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_STREAM_OUTPUT</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ggac3d11365c928cdfd3176ffede3e6f8c5a6a57199496cb5a0fa2c635c94fbd2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_STREAM_INPUT</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ggac3d11365c928cdfd3176ffede3e6f8c5a3707a884c8eec9b11bc2c30127d1c4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_rawmidi_type_t</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga271ccd508f221ec7c99a27b150c657ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_HW</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baa77f1b4650305a5d52e686c9ee2768c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_SHM</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baa3f2311c1769989c17c5949ef01d4e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_INET</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baab2e654ca9c1a7bc4253bc5a2d97211bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_RAWMIDI_TYPE_VIRTUAL</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gga271ccd508f221ec7c99a27b150c657baae1144b9e6ffe7729d853705687bb3324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga2ab783051deeb7eb37eb568b76448889</anchor>
      <arglist>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_open_lconf</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa7e3daf5cf4dd36b2534d2f1d6309477</anchor>
      <arglist>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_close</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabc6bd5922151fb50196f62b9a4ab9f56</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga39ac11df7e520e753b26ab4eceabe6de</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga22fcc3fc5c62c9db88d79a0b91e3a75f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_poll_descriptors_revents</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga38f15766f77c0bb50fec6cdcd87254b0</anchor>
      <arglist>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_nonblock</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafe714a54fdb6083eb003bcc21da89553</anchor>
      <arglist>(snd_rawmidi_t *rmidi, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_info_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga383592eddf099559822357678fbe7d8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga11f8d3832ec7ea7fd6e8445338704528</anchor>
      <arglist>(snd_rawmidi_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa84495bee993f34fb9bac33b5a9cf65f</anchor>
      <arglist>(snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfb769e2aaf0a6b8274b5e0c3e9141d8</anchor>
      <arglist>(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gacfb2e65475c314f5f1dde0c5d7a05a7b</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3fea97d5bff26c54831e95b2200f857c</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_info_get_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga760552af30a089ddacc3af79985e24f6</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info_get_card</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga463916bd78a0ab5a96a053edca05a8d3</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_flags</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaf9ede5bbc9abc9124910c2612363de30</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_id</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac7ac90e99759ee7b2dddd3613219c798</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gafd809c976c1dab23957e338b5af2a353</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_info_get_subdevice_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga428398f23118575aa4f62eed860132cf</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_count</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac0b33eb2f54cd6fc9b34002fe28ca9fe</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_rawmidi_info_get_subdevices_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga71717ea1f35bf2a59548d3d106278336</anchor>
      <arglist>(const snd_rawmidi_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_device</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga98fcdcb94c12baf65dd0ec8f9d52ef59</anchor>
      <arglist>(snd_rawmidi_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_subdevice</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga49eff1cd1b62e0399826740863cdcce3</anchor>
      <arglist>(snd_rawmidi_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_info_set_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad704ac98c8313235c73c23d374bf6831</anchor>
      <arglist>(snd_rawmidi_info_t *obj, snd_rawmidi_stream_t val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_info</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga3c3595d2907ee30754f6a1d5ceb2d97f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb5767a318d349a4d2a100191c3cf8d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaedc01312384764d02b6bc946cb1e79a9</anchor>
      <arglist>(snd_rawmidi_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gad8c735ed6a8533655dabd7318f25a6fc</anchor>
      <arglist>(snd_rawmidi_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_params_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga533710a31f6b6b4f6791baa27e69089f</anchor>
      <arglist>(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga612c96757e2f81fda5b6cd6dec826de1</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_buffer_size</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0bd9629686062562b88bfd2a3eadc1bd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga89782681ce86b3d5cbebb5136d25439f</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_params_get_avail_min</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae629f2ef814eda39dc081dff65bf7d20</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_set_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab717719be70fe4396dc84f3f895d6e12</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_get_no_active_sensing</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga6a057d467faa2b65ddace364fde985fd</anchor>
      <arglist>(const snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga458d8ad22277645d9b65fa47c011465c</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_params_current</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga86eabf81acd7c43fc100c67fbda5085d</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_sizeof</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7933bdb7eea04815be0bba98261865e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status_malloc</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac1035208bbdf81852dbcf2e14ce4a8dc</anchor>
      <arglist>(snd_rawmidi_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_free</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gac9852f68911bbb8aef21d2e20c3ff2c0</anchor>
      <arglist>(snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_copy</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab62e8a4ca0033166f906a969048d935c</anchor>
      <arglist>(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_rawmidi_status_get_tstamp</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaeb867dbf1d4d5fb3bdcad36a86565837</anchor>
      <arglist>(const snd_rawmidi_status_t *obj, snd_htimestamp_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_avail</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga7ff63a2376b2df549698296d37b532ed</anchor>
      <arglist>(const snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_rawmidi_status_get_xruns</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gae4f69ac10574cfc2cd5c848628e75f9b</anchor>
      <arglist>(const snd_rawmidi_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_status</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gab888bce923769882931f77603327231d</anchor>
      <arglist>(snd_rawmidi_t *rmidi, snd_rawmidi_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drain</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gabfff7417ec957b7ee07882f91d73d7be</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_rawmidi_drop</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga01076c87d169cf77334d35bd094abd0a</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_write</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga0a30e482efec57f4ea74c533a0f9b134</anchor>
      <arglist>(snd_rawmidi_t *rmidi, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_rawmidi_read</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga9b0952fc04facda83cdf1521325ca475</anchor>
      <arglist>(snd_rawmidi_t *rmidi, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_rawmidi_name</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>gaa4bf6540f3f36c5878d31abd34a341d3</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_type_t</type>
      <name>snd_rawmidi_type</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga5984e0c61995c8184a0e6e0a68a6faaf</anchor>
      <arglist>(snd_rawmidi_t *rmidi)</arglist>
    </member>
    <member kind="function">
      <type>snd_rawmidi_stream_t</type>
      <name>snd_rawmidi_stream</name>
      <anchorfile>group___raw_midi.html</anchorfile>
      <anchor>ga295d2f3ce9e992919f205b929fcb83ee</anchor>
      <arglist>(snd_rawmidi_t *rawmidi)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Timer</name>
    <title>Timer Interface</title>
    <filename>group___timer.html</filename>
    <class kind="struct">snd_timer_read_t</class>
    <class kind="struct">snd_timer_tread_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_DLSYM_VERSION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gae123de10661be511c00d2d7b6a428745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_QUERY_DLSYM_VERSION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7439ac1cc9e0958a21f313ca848af77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_SYSTEM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga1cda350fb4de9a2f7a137c5649e3793c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_RTC</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga77ddf4d042846b39fc4ed4966e04bee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_HPET</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga15f5febc65924c9d3b12c7440c13bdd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_GLOBAL_HRTIMER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacf694819483359539a0017b09e9de9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_OPEN_NONBLOCK</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac2c50bf6045560bc13aab81f25b2b740</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TIMER_OPEN_TREAD</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8d8b1f21a9c9db84a6ffc02e8f2c745b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_id_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaef1895685cb2f65d1a40cc46fa5a7eb2</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_ginfo_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2b8086e599bd8d1bec750df97f572fcf</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_info_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafad2100b7f0478b8c3c59f0f4aced23e</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_params_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2e76b7b6f7fe340b4a06935f080fbbbd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_timer_status_alloca</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6597b8f73b30a3f2bf2aa9f3590b92f2</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_id</type>
      <name>snd_timer_id_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga87c7e9656e171a76dada7e7e2da37136</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_ginfo</type>
      <name>snd_timer_ginfo_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga794ba3ef840cdb926d415ebb75d2c968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_gparams</type>
      <name>snd_timer_gparams_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga891a982092ef97b93001ae2c096b8bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_gstatus</type>
      <name>snd_timer_gstatus_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac14592347542015d4540e5c91ba2f677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_info</type>
      <name>snd_timer_info_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8d2a9e26d1f38ce65160d3cd71a2bce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_params</type>
      <name>snd_timer_params_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3450759fce8e0863ebce3221e82bafca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_status</type>
      <name>snd_timer_status_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fe20f2c0d1535e3a200944b1244f855</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer_query</type>
      <name>snd_timer_query_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga279f189051eba2c5e072c30198deb81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_timer</type>
      <name>snd_timer_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7f514d85bfd93e1e5853a5fded89b668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_class_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafcf09894847cdee6925ab6e405c358d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_NONE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a678ee4a7108ad3653fc49a6fe07ae45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_SLAVE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a532f7292aafb8e4eaa8fce3bb42b7ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_GLOBAL</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9ae7a63ed172c4c38199e4d6b3ed9fd728</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_CARD</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a1537e543af1e092113918133e967060a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_PCM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9a7ec320b901911a00dabae6361497904b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_CLASS_LAST</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggafcf09894847cdee6925ab6e405c358d9aba93010fc89dbe48bbf9000cf8ee9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_slave_class_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gad834b328331c3a4a4fb42041e2e61298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_NONE</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a93c410a46bba52d680058f0718a32879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_APPLICATION</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298ae7fbc56d9edddadce36b1c106642df47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_SEQUENCER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a1b051f95a8e420b7d0bea1621882bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_OSS_SEQUENCER</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a36e74e47c3d113180d91f869d37a2d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_SCLASS_LAST</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ggad834b328331c3a4a4fb42041e2e61298a411d2f011abfe46d76af7e0be1056512</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_event_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga396a3bb020be40c36c9a6de0554145b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_timer_type_t</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga07cba0cdbcdc514edb078bcc0740a7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_HW</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfaf824868ef06d7288077a6f48a1e2e54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_SHM</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfa58a150be6754c776d9be0a6d1be810bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TIMER_TYPE_INET</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gga07cba0cdbcdc514edb078bcc0740a7cfa78682127e299b23d290649ddc34775b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga54f6d3838ff4680fcda97952a60376ff</anchor>
      <arglist>(snd_timer_query_t **handle, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5d11f58dc15f5d12465f4e6aacae43cf</anchor>
      <arglist>(snd_timer_query_t **handle, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga13063464032aae91ab4e72dfdb57cb10</anchor>
      <arglist>(snd_timer_query_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_next_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5c10a9b8dc5f4442908fa3d15ab79169</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafcab2e2ce9b0ab69641ca10ba6a5bc17</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_ginfo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga03945b4d2bd9512de9a3fd923b71551d</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_gparams_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_query_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4faf0668a3808f0b0f78f260af193645</anchor>
      <arglist>(snd_timer_query_t *handle, snd_timer_gstatus_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9fa22f49745d1e383f0d6e5d9e795e2e</anchor>
      <arglist>(snd_timer_t **handle, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_open_lconf</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadd7dd0538f800b67fea5f096a73c2fee</anchor>
      <arglist>(snd_timer_t **handle, const char *name, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_close</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga155e0b5c831a3140f49c04932da9404f</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_async_add_timer_handler</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga076a6bbae3bfdb956b0a1a6ea9daa0a2</anchor>
      <arglist>(snd_async_handler_t **handler, snd_timer_t *timer, snd_async_callback_t callback, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_t *</type>
      <name>snd_async_handler_get_timer</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa497b2873abd234df7e932ecdefad5e0</anchor>
      <arglist>(snd_async_handler_t *handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_count</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf035c37343afed7f13c60e950e461cdf</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga89ec000a41fa7dd1269e332324663f61</anchor>
      <arglist>(snd_timer_t *handle, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_poll_descriptors_revents</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga395e14d49bbb41794fb1bb6114fdf93f</anchor>
      <arglist>(snd_timer_t *timer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga608cb266bf1cfd8f3796e6e55a2d5fe8</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_info_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3fd358a410688c3aba3e2d69acf027a8</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa78c7089909252ee0ca69f7552fa2804</anchor>
      <arglist>(snd_timer_t *handle, snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gafc990117a12e19a729ff10ef217fe2f9</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_stop</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6f8147c0679c820a77f98b1dd5b664a5</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_continue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaefeb6d7a87d49666470a62cea1440ed3</anchor>
      <arglist>(snd_timer_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_timer_read</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga724ada94d0bc3564ad77973c0a084682</anchor>
      <arglist>(snd_timer_t *handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_id_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacc0a4c452e6dc6a9401da8b0f22cd14f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab60829b0a47dfc5ef88ce74e586ebe23</anchor>
      <arglist>(snd_timer_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga4c938bd81f93c364aff08de5e96a3cf6</anchor>
      <arglist>(snd_timer_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac6d57323807a3ea3f3f9fe1870cd4755</anchor>
      <arglist>(snd_timer_id_t *dst, const snd_timer_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga93bce2afe5e3f40f9f7adc17339273c4</anchor>
      <arglist>(snd_timer_id_t *id, int dev_class)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_class</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga42ea98dbaf720519453c0110bd06fb8b</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga2cafa2722ebd48051328c8684c9c544c</anchor>
      <arglist>(snd_timer_id_t *id, int dev_sclass)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_sclass</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga82e2754532fa2b5b28733820eab4d600</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga18406bd50ccd2818c7aa6fde6274a303</anchor>
      <arglist>(snd_timer_id_t *id, int card)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga305324f73fc12e7e42891598613a2d29</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c296e2bf5e2b0e1a71fe6612993e68e</anchor>
      <arglist>(snd_timer_id_t *id, int device)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_device</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa864bb9270989329f8acc86c5aec2093</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_id_set_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga28a3d45e09fc45f97fd37d7338138544</anchor>
      <arglist>(snd_timer_id_t *id, int subdevice)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_id_get_subdevice</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7f52f12140cd97f267143cbcd0832d02</anchor>
      <arglist>(snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_ginfo_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga5433f9a5020b9db09939b51bfdecd449</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c0c9386149431c24b8260678afe57ea</anchor>
      <arglist>(snd_timer_ginfo_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf223a09c3d076947ed3c09cb4d6fec79</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_ginfo_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gacfde902fd8078764afa3c7cadfc5f53d</anchor>
      <arglist>(snd_timer_ginfo_t *dst, const snd_timer_ginfo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_set_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaebdec979e0c5a70100620cb7bf1c22d8</anchor>
      <arglist>(snd_timer_ginfo_t *obj, snd_timer_id_t *tid)</arglist>
    </member>
    <member kind="function">
      <type>snd_timer_id_t *</type>
      <name>snd_timer_ginfo_get_tid</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66c1351ff92884298849d650f98b0a94</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_flags</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3f4cf1a7e485c18aa16c9de159490f36</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_ginfo_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga086c81db497d7818afabbaadb888731b</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga7c95448884b61a0f8a04c2cd134d5a41</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_timer_ginfo_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gadcd41537e9db1c08d816a9f2fe1bea52</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga452c539c7c8c949bb446879e4d9151c2</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_min</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga33c9458b0a47e6448af0acc97d8860f7</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>snd_timer_ginfo_get_resolution_max</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fbb78b3361209c15a0ece5bc2b939c0</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_ginfo_get_clients</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497147a128b64374829408beb773316d</anchor>
      <arglist>(snd_timer_ginfo_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_info_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3845cca41afd0f5ee40132d5b10c1e38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga51e754aec623f96bcfeda9511f51b5b7</anchor>
      <arglist>(snd_timer_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga10da72bb7ae7a6ed91e7857b61add016</anchor>
      <arglist>(snd_timer_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_info_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga92e91d9222794a1c5e82b7672faa214b</anchor>
      <arglist>(snd_timer_info_t *dst, const snd_timer_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_is_slave</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaccf0a207b91965e7200355a0daaac6ce</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_info_get_card</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaddb757aa65e9532ced42ff7e9146ff34</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_id</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf46477b4ca62a7c2bd87926a45ecbd50</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_timer_info_get_name</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga9360acea37a3351ab9d2c17b7a264395</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3b33c3f0af5c93461e9493b0d4a3b81c</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_params_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga8a76df112a4046b72bdd4903215eca09</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6bdf00a7a9a2bcd46848c3862e31d7e7</anchor>
      <arglist>(snd_timer_params_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3cba3ec4b6146cc7855d937b7aaf7953</anchor>
      <arglist>(snd_timer_params_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6beaa69176cf2bb404983da4d133fda5</anchor>
      <arglist>(snd_timer_params_t *dst, const snd_timer_params_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac39b36fdcc72cbb05adb909673df04f0</anchor>
      <arglist>(snd_timer_params_t *params, int auto_start)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_auto_start</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c7537d0729793d242b9263185f24e06</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga497d23da21ec46d58ef3d6c01942d7c1</anchor>
      <arglist>(snd_timer_params_t *params, int exclusive)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_exclusive</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga66fffdd5b538259b54ebe9570581d52a</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_set_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaede871d499497de1199bdf1e8f9c9872</anchor>
      <arglist>(snd_timer_params_t *params, int early_event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_params_get_early_event</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6e45bbcef976cfac74336f337a0460cd</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7101edb9ec33fdbbb94e04256388caa</anchor>
      <arglist>(snd_timer_params_t *params, long ticks)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga298418a42230f305c3c4efdf14da3403</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga3c55b27f682897a1b421b1be46a36289</anchor>
      <arglist>(snd_timer_params_t *params, long queue_size)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_params_get_queue_size</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa4462f1d878e5f1f10c40549692effcb</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_params_set_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gab6820b66547c333402ea8e66fd600af2</anchor>
      <arglist>(snd_timer_params_t *params, unsigned int filter)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_timer_params_get_filter</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga94c66976bd4b993c766e81d2452597f1</anchor>
      <arglist>(snd_timer_params_t *params)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_timer_status_sizeof</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf0ceabb82125265a8bfe6ea85b889063</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_timer_status_malloc</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6fa0de36e4494bd5ece4965ffe832db1</anchor>
      <arglist>(snd_timer_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_free</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga60f6cf340f3f4881e1bff8ed11f1e634</anchor>
      <arglist>(snd_timer_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_timer_status_copy</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gac14cf4718333897ecb2b823b738aaff4</anchor>
      <arglist>(snd_timer_status_t *dst, const snd_timer_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_htimestamp_t</type>
      <name>snd_timer_status_get_timestamp</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga0c303da4c37285d423f428710409ee08</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_resolution</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaaab668cc548b6c4a24236504d63da0a0</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_lost</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaa7ad78e8af9855e71d4951147869693b</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_overrun</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gaf3a83c122c2e19059297599d3486c04d</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_status_get_queue</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>ga6edb10e32b6b485ecccef73d862ca648</anchor>
      <arglist>(snd_timer_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_timer_info_get_ticks</name>
      <anchorfile>group___timer.html</anchorfile>
      <anchor>gad0cf85bf970338f0924e0f642057c9a6</anchor>
      <arglist>(snd_timer_info_t *info)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>HwDep</name>
    <title>Hardware Dependant Interface</title>
    <filename>group___hw_dep.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_DLSYM_VERSION</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gadbdb136d096a033b5a37da051334c311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_READ</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga0c719693523de2875822c7c488aa46af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_WRITE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga256f488476a56156609160ce2a8ff4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_DUPLEX</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga65dd0ca8c1810b8e9c7f9d95a09d444f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_HWDEP_OPEN_NONBLOCK</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf29d78d2741d1b7dc2647cd2e6525a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_info_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga209969eb18c5461a5cf2ce331c8d0898</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_dsp_status_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaa8ff5094038689503524a6c38e7064cd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_hwdep_dsp_image_alloca</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga228ee5cb7404cabc425d8aa135287475</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_info</type>
      <name>snd_hwdep_info_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga12be97323a913a065524c01fb163cb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_dsp_status</type>
      <name>snd_hwdep_dsp_status_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga904ac34d4d2af6c080aa01d9d70f6ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep_dsp_image</type>
      <name>snd_hwdep_dsp_image_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga041c777902d3888a5b000ccd305f32ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_hwdep</type>
      <name>snd_hwdep_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga1f13b151f43d06b257c71570010b2ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_hwdep_iface_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga288eb9342aaea8317a7bfa03b22feaca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL2</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa06892f4442380329139dfd755454b3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL3</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa952e48f4f4fc5fb7f2472c5d0c679b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_OPL4</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa122462f3f79578ac7408b476313ffa72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SB16CSP</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa1043d86e7c1b34d3b844892674406aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_EMU10K1</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa805de2b442f7da96cea9d3864df67f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_YSS225</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa469940712513383aeb94e239e3388efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_ICS2115</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaafcd56e8aff83d4be3a9708f7d9f74204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SSCAPE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaad85f235cbfcb8ba4300d3ef6252ea62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_VX</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa4a96dcd5734fe382cbfe8545522fa7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_MIXART</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa47cfeee8ec9532f213b2151c9f411990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USX2Y</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaae7f996ad6c0601e558353404e32c4366</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_EMUX_WAVETABLE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa01f290961f48f4981d91b158f517000f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_BLUETOOTH</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaaa644270f5423d396c973f32c82d489bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USX2Y_PCM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa72513cceee36da63f12514742d491a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_PCXHR</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa1871ee51a3434c7cf0e1afdff93c5775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_SB_RC</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa517dcdf103a96fab2aad10e8df123afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_HDA</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaaf386ce97ea4a4bc1ae73be55da7e1b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_USB_STREAM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa9dc5977a60b6d155fc6f6689f5208cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_DICE</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaad82269a7bf2ea4c8ea69511292071ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_FIREWORKS</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa98638b800a2d27eca5e70a63571e8c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_BEBOB</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa6fdaff4ff3d98b2d74815ee058fd574e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_FW_OXFW</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaab405c3453e2ec2c437945b2aeac92d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_IFACE_LAST</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga288eb9342aaea8317a7bfa03b22feacaa08d49aeea9f376daf523a8f7b2825744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_hwdep_type_t</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga839de1d3a2bf9495cc631c08099bca79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_HW</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79a177e7de0de2e799ff985de775ebee841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_SHM</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79a59cee94d2b24ab7d23be97cb88705e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_HWDEP_TYPE_INET</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gga839de1d3a2bf9495cc631c08099bca79ae9843ef92e5b944c9b0623389a38fe29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_open</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaade8a9030fadb398fdb6d139f360f07e</anchor>
      <arglist>(snd_hwdep_t **hwdep, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_close</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga35ba1e894c069b37012604abf1432314</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga179b89384deb4c5a76b7017e6ba6af88</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_count</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc4e48e9d9fa90fb5e35b3502cfe6f7f</anchor>
      <arglist>(snd_hwdep_t *hwdep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_poll_descriptors_revents</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga654b2c89f1e6bc16e590161340f1e3d9</anchor>
      <arglist>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_nonblock</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6eaa5f13367625587fdd955fb4cb4c51</anchor>
      <arglist>(snd_hwdep_t *hwdep, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga97f208875f4ec6a253f088e3c2c084c1</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf071b6171019a11a72367cc7f9613f5d</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_load</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7316c8ce8d4ba06b58e6536e3cf96223</anchor>
      <arglist>(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_ioctl</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga74f5260b0f5f779932bfe7afcf68ecb1</anchor>
      <arglist>(snd_hwdep_t *hwdep, unsigned int request, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_write</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4c158ce0db68b8bfac1a00abe5e2ffcd</anchor>
      <arglist>(snd_hwdep_t *hwdep, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_hwdep_read</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7ef0c6e7ae7b838d509dd09b800b321f</anchor>
      <arglist>(snd_hwdep_t *hwdep, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_info_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gad39906514d5d04b7ebcc190382b8bd27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6831cd666bea427ab3779710e90a857</anchor>
      <arglist>(snd_hwdep_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga9e19ef5118f808962689c3d947af1a00</anchor>
      <arglist>(snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3132936fc99968e59df02711d2927018</anchor>
      <arglist>(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_info_get_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga23deebecc5e88b0124222ebf73999c24</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_info_get_card</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga04193d4395908c0e31ac826ac05d3824</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga80bb1ca217fa051086e7f2ab5821ee34</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_info_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf7f6251acc0f26d6fefc2c28fcf90c6a</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>snd_hwdep_iface_t</type>
      <name>snd_hwdep_info_get_iface</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga7d846bea699c0917f54d75fe5d76a58e</anchor>
      <arglist>(const snd_hwdep_info_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_info_set_device</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga5f497ef1c3a675af203923d93eda4202</anchor>
      <arglist>(snd_hwdep_info_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_status_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga54205faff69bdd35b996863094bafada</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_status_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga444c5bd71b0a3756084450dfb7528c6d</anchor>
      <arglist>(snd_hwdep_dsp_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaa7d3a0f8f01805b10342581893e9671e</anchor>
      <arglist>(snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_status_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacc06c08ac09beec6b50fddf5496ce25b</anchor>
      <arglist>(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_version</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga52f6b403c2a4947c647043fdd7c5dbf7</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_status_get_id</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3f62477a689ef9e84048f7ba8e33a792</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_num_dsps</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gac49bce861455b700ba79c3eb9f73aae9</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_dsp_loaded</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6c5e57aaf95a248814897bd80e12edf4</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_status_get_chip_ready</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf49d8044583b6f0c890bbb6a493734e8</anchor>
      <arglist>(const snd_hwdep_dsp_status_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_sizeof</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga8a5e773b145d973ea5c75057974a371d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_hwdep_dsp_image_malloc</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gacf44ffc69400d7d195809c18cb71f89d</anchor>
      <arglist>(snd_hwdep_dsp_image_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_free</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga95c9c00e3b9b20ba6a92ac9d14c5cfdd</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_copy</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga4178c718645804dffde98bf210e447b5</anchor>
      <arglist>(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_hwdep_dsp_image_get_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gada5fa0eaa5a4a941dc5b79ae1897db76</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_hwdep_dsp_image_get_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga025e4656f44f73d8c372b8b10285f202</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>snd_hwdep_dsp_image_get_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga330539511a4fe2936351b34a26cf96ff</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_hwdep_dsp_image_get_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gaf6087e4530245055c8cceaa74df629aa</anchor>
      <arglist>(const snd_hwdep_dsp_image_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_index</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6e93c88a4595ac0915211dca5f46ab72</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, unsigned int _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_name</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>gab6529c1bf1aba5bf2abdbbf157a4e9e0</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_image</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga3da9921e2aab7ab9ed91a39c4f3f6a0f</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_hwdep_dsp_image_set_length</name>
      <anchorfile>group___hw_dep.html</anchorfile>
      <anchor>ga6de5750e29632c68af2648dcb11a1429</anchor>
      <arglist>(snd_hwdep_dsp_image_t *obj, size_t length)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Sequencer</name>
    <title>MIDI Sequencer</title>
    <filename>group___sequencer.html</filename>
    <subgroup>SeqClient</subgroup>
    <subgroup>SeqPort</subgroup>
    <subgroup>SeqSubscribe</subgroup>
    <subgroup>SeqQueue</subgroup>
    <subgroup>SeqEvent</subgroup>
    <subgroup>SeqMisc</subgroup>
    <subgroup>SeqEvType</subgroup>
    <subgroup>SeqEvents</subgroup>
    <subgroup>SeqMiddle</subgroup>
    <subgroup>MIDI_Event</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_DLSYM_VERSION</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gad6233417c4c820a4c0aef4c379cf65a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_OUTPUT</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1edd6d976f3dae5d921568f2107bd121</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_INPUT</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaaf1cded61cf90f4d37caf910192ef513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_OPEN_DUPLEX</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga61c3481e1d357bb38cc399f6b9884ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_NONBLOCK</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gafb3bf2f7109d85d9226c64578e73d614</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_UNKNOWN</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga79353f7f2482e98b5181f03df7c807ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_SUBSCRIBERS</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga383b235d2afbe48704952edfd3a33eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_ADDRESS_BROADCAST</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gafc9dd136f59487d09d2124cef09b8c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_CLIENT_SYSTEM</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga5437f98c59679c92ee4d940ac643169e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_system_info_alloca</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf6343bc1e96ab067152b35b8ff6904ea</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq</type>
      <name>snd_seq_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae141149958a7458806152ed5942a1acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_system_info</type>
      <name>snd_seq_system_info_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga2bcf0bf155f961b6294d556c654023e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_type_t</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga95ee23dbfb14769db6a470875ed94807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_HW</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a9f702d2b9053cbb77f5bebc74b727415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_SHM</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a6df472343a3602be359406452222f1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_TYPE_INET</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gga95ee23dbfb14769db6a470875ed94807a1b09154678b8e506abac5c84d88aa195</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga95462dc59c0319e186cda713ecfb4ed3</anchor>
      <arglist>(snd_seq_t **handle, const char *name, int streams, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_open_lconf</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga03b68a24d0d2de303ee9ec04ed68c8b7</anchor>
      <arglist>(snd_seq_t **handle, const char *name, int streams, int mode, snd_config_t *lconf)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_name</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8736d847fb7b3b6627f29f0eba907e30</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_type_t</type>
      <name>snd_seq_type</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1ff33a2d698836d879ac05f5176c58b3</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_close</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gab209cdcf6e1e1907f8c49d3148a4e0f6</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_count</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf281c1dddfc626124b9e61d2cad94f2d</anchor>
      <arglist>(snd_seq_t *handle, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga99851fa9ff4ec5be7414cd9defbcda89</anchor>
      <arglist>(snd_seq_t *handle, struct pollfd *pfds, unsigned int space, short events)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_poll_descriptors_revents</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaae23b17b3c34639b7a2a8ed74880d364</anchor>
      <arglist>(snd_seq_t *seq, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_nonblock</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaa41faa2ad471677d1060f9e9a226ac52</anchor>
      <arglist>(snd_seq_t *handle, int nonblock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_id</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga2cdaded101f041b9a0930b665ac44b93</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga02442682a361bc6f9faeff468cdebbad</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_get_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gacd207de4c08ffff3020b078de8e64cc5</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_output_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae9a0931460444f130c5c1df9de57707a</anchor>
      <arglist>(snd_seq_t *handle, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_input_buffer_size</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga62cd9f5ea1d75db676d43da44596750e</anchor>
      <arglist>(snd_seq_t *handle, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_system_info_sizeof</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga1a036e739dd2daaa9952875528c2f763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_malloc</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gad49e5da1a851505e43dcfbf5fd00b0d9</anchor>
      <arglist>(snd_seq_system_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_free</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaf3876a29ae1e648d9fd8e6d067a56b6b</anchor>
      <arglist>(snd_seq_system_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_system_info_copy</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga8cbf6ad4d47837d0a5a1100ef0808ab7</anchor>
      <arglist>(snd_seq_system_info_t *dst, const snd_seq_system_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga63c9cfcc634c722350b55a6820461e9e</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga7fbb56a82dfef9224b411a659ba7d8f0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_ports</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gae446559ff05dc0ed1967eab253921aa0</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_channels</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga58fa1ff3d4ffafac092e5cffb7092ad1</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_clients</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>gaeb16d361d1fc92de95cc1986619eac8a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info_get_cur_queues</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga5af096ec5db751e0d10ec0d998482c6a</anchor>
      <arglist>(const snd_seq_system_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_system_info</name>
      <anchorfile>group___sequencer.html</anchorfile>
      <anchor>ga548a7ebe6c90e90f689cf8d862b81f9e</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_system_info_t *info)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqClient</name>
    <title>Sequencer Client Interface</title>
    <filename>group___seq_client.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_client_info_alloca</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga894207ef8acec9da5fffe597749deca4</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_client_pool_alloca</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga662f3c4e0f6d83fbaa6737c028a67ddb</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_client_info</type>
      <name>snd_seq_client_info_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaab203ba82e80c859c8d577fb733e3ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_client_pool</type>
      <name>snd_seq_client_pool_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadc7ce8adaec84d42695492f0ba2515af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_client_type_t</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gab56446870a0d358e3c4d9b0640fbaeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_USER_CLIENT</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ggab56446870a0d358e3c4d9b0640fbaeedad496718243f7aac36d8e7f0ff4bd5cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_KERNEL_CLIENT</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ggab56446870a0d358e3c4d9b0640fbaeeda72126c32d00cabdf8e6c6d555791e4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_info_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga307d71507e4bd63602cd9686840e68ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga632a84797c8b3a96cd188dae681a4c97</anchor>
      <arglist>(snd_seq_client_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac6da8138f5ab2966ac7cde41a2218965</anchor>
      <arglist>(snd_seq_client_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gae45c6df3ba2bfccd72bab8bf0fad4791</anchor>
      <arglist>(snd_seq_client_info_t *dst, const snd_seq_client_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga5eccc990c80935a7cc7dc8f9fecc44eb</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_client_type_t</type>
      <name>snd_seq_client_info_get_type</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf8d7a9e3884ccaccc0fa8f3008a1922</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_client_info_get_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga72c935b373607fea06a2c3ad996d1722</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga68795cb06ceb82f8b02cfcb272024936</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa5788a36d5d5e3ad710114b355957323</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_card</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaf6f134c1ca63142a5d61ea7e44a24eda</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_pid</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gab1cc1f3bf148d0510facf7ba194285d2</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>snd_seq_client_info_get_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac9298146a03d2680fa9bd00bb912fdb9</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_num_ports</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gacc60e8ca52278c2ab78bcf317591309b</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_get_event_lost</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga10db9e262a007b34010a1112afca2f73</anchor>
      <arglist>(const snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga202a4ed9a8dcb521b1b7468fd2ea9560</anchor>
      <arglist>(snd_seq_client_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_name</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga17a196d1cba06f3d96f79882884b5cc3</anchor>
      <arglist>(snd_seq_client_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_broadcast_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga69acaad376ff2645afe6dbd46fd74b15</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_error_bounce</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga11ffeb226dc9f79a18069d8c3c26d12b</anchor>
      <arglist>(snd_seq_client_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_set_event_filter</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad130c3a85ea614450905149339419794</anchor>
      <arglist>(snd_seq_client_info_t *info, unsigned char *filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_clear</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga70d31a588c75cc7e8407974942f8f974</anchor>
      <arglist>(snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_add</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga90f86c0c27e8f279c887728ed59d2ec5</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_info_event_filter_del</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga379ef80c5c54ad11188ed0256068f83a</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_info_event_filter_check</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga252e1390151d892c190f4e1744046bff</anchor>
      <arglist>(snd_seq_client_info_t *info, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gad4e3dd20d087a3ac4b709b4fbb525ad7</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaa6c062d0423dbd735c0f97f3e0aad6ee</anchor>
      <arglist>(snd_seq_t *handle, int client, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_info</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga109f62fb356c322533ddde4a6ce2c587</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga71ed00b1bf9265563a5377e720511cae</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_sizeof</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga64dd385218ec42e3b29a3fbbea4f16ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_malloc</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga9e7694a46464eef735baa6fe707772e5</anchor>
      <arglist>(snd_seq_client_pool_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gadf2b20b02752e3986a04191e8f978114</anchor>
      <arglist>(snd_seq_client_pool_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_copy</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2800f799c3d2f91dad38ac4507fbf5a2</anchor>
      <arglist>(snd_seq_client_pool_t *dst, const snd_seq_client_pool_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_client_pool_get_client</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga0fe8815acdcea59b64f6c8309fd3976f</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga97029b162c526b18a06b989b0ceb0ba0</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2a30c5144b83b16742dc58a43c3285d8</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga08f0213028e27cc005d2ae9deab054ff</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_output_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga2ed48ca260bbeae082d7ff9e92d29e03</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_client_pool_get_input_free</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gaee2a604809f284e9de22cf36aaa4326b</anchor>
      <arglist>(const snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>gac32365b27518a67e72231f835f3eb054</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_input_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga197e31b28dedbe68946704c38e6805d0</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_client_pool_set_output_room</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga1bedc9459e1ec6e4dfa34904105dc215</anchor>
      <arglist>(snd_seq_client_pool_t *info, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga896dd0d346d66cc7deac06eaf7ce056a</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_pool_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool</name>
      <anchorfile>group___seq_client.html</anchorfile>
      <anchor>ga076635492cecbf740302c97a4a84ea07</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_client_pool_t *info)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqPort</name>
    <title>Sequencer Port Interface</title>
    <filename>group___seq_port.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_SYSTEM_TIMER</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga02870ceddec24d3cc5609ec728b0cb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_SYSTEM_ANNOUNCE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaf12ff6ca6077edc7c6027a3fb1d0664b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga81a7a5385af746364b757eb7911ec2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae8afb5ac8f546461b4bab25454972aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SYNC_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaebcc3dd1ad3b42d2305290feab04005a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SYNC_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gabd27d66e2de0ff9556cc81cbec9ba7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_DUPLEX</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga97da74dc7f0f295f000fadd1c50c1130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SUBS_READ</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga4b8aa6cbeb3c99c3ad033f4ce69c06e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_SUBS_WRITE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga52ff1c51578166e67936cfb826c966c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_CAP_NO_EXPORT</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaa0a63e34744ed9faedf64fe0b364bfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SPECIFIC</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaeb05a94bbdf256b857fcad28aeb2bb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GENERIC</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga0f89faac8be715b9e2d9d885c7f644a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GM</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7202cc7b9acc0d78f59c502d7be4d2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GS</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gadf72cb865e33a0ce1462f68303165537</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_XG</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga8b51348b38a543151dda96c73fbfb5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_MT32</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga12743fc5f31ab3718d5f86d88eef05fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_MIDI_GM2</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gabba1c9b09748d446bb6b20b0ae717984</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SYNTH</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga25b090c0416b501001ae05350480acfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_DIRECT_SAMPLE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga745828e8de9962c7c8c42ad5039e595d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SAMPLE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae4096b5c650fc3db614d8dead99ef404</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_HARDWARE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7c7c4e97a41a4056c759f5398643a37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SOFTWARE</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga6b1a73e34cedbf61f039db614a50b27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_SYNTHESIZER</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab873e7e613eee3af725f4a286c9c1cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_PORT</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga3c9413dbab5e6c6a18235e8b05c8fb3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PORT_TYPE_APPLICATION</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga703a0651b941c583d5f8928f8f3b1b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_port_info_alloca</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac39e99230c62a36daa985273faac0de7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_port_info</type>
      <name>snd_seq_port_info_t</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga122b704fdab734223ef90b5e26f358e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_info_sizeof</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaaf7342df4e6dcdd4b40bffab2d9383bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_malloc</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga86ff334491c0d8c5b007e5b78d457334</anchor>
      <arglist>(snd_seq_port_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_free</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac6254a78c36c8244782e18225647a06a</anchor>
      <arglist>(snd_seq_port_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_copy</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gac1a2571b37277ca7845a078fbbd07e30</anchor>
      <arglist>(snd_seq_port_info_t *dst, const snd_seq_port_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5a9f99c028e47a549836581b3cc01705</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga90475c2db0acf804d8959058782493ed</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_info_get_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga58c1e63db50536dbe517c4eb56884a99</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_port_info_get_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2ce813765619784f7b6f773730bb00a3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga52d3744aa8a9ef122b350247c206ca1f</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_port_info_get_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67089430166da86830b2e8d24ffcb82e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga98f449484e99680ec24dd8a635e5c46e</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gace0fa9154b4c7f48e582d2c6fca4d343</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga3a7cc5d4eecf7fff98f6f8118176b352</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_read_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga67ae52056047784f451f46dc0e81ca67</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_write_use</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga8278d1e6aa256e8f26191ae16202c114</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaf4a8c5c64c489321994ace0247921a87</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2b452e4c849fc860db7879f82d4b3323</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga56146d9a0b992ed1fddabd787ecdd755</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_info_get_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga25bed7f48ec3e75764c3c49b510b23b3</anchor>
      <arglist>(const snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_client</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga7ea54e7b23774e0670174cc8698cb375</anchor>
      <arglist>(snd_seq_port_info_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae3d9b091002c86bc31644da0a9b48bb7</anchor>
      <arglist>(snd_seq_port_info_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_addr</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2cb8af4a438139a3733212ef8d9fda81</anchor>
      <arglist>(snd_seq_port_info_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_name</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae36f8b99f4e5a374dd69760a2d23b1a5</anchor>
      <arglist>(snd_seq_port_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_capability</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5e66f8964ac8686437936958c50d2e08</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int capability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_type</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gae67a71150ca0bf04f265f6df14120c8a</anchor>
      <arglist>(snd_seq_port_info_t *info, unsigned int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_channels</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga95fd5b48eae29be7186013a3aded24c4</anchor>
      <arglist>(snd_seq_port_info_t *info, int channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_midi_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9efdb4781a133315240b4da0a336935f</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_synth_voices</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gad52fdf46df934c1c3ab369ee4bcb7a66</anchor>
      <arglist>(snd_seq_port_info_t *info, int voices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_port_specified</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gafd4325db9167baf3e994a942577c2d5c</anchor>
      <arglist>(snd_seq_port_info_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamping</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gacf6441ee4622b87b450381e1cea7d7d1</anchor>
      <arglist>(snd_seq_port_info_t *info, int enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_real</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga2faba31e8c97874e4be7ca95e76bdbd1</anchor>
      <arglist>(snd_seq_port_info_t *info, int realtime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_info_set_timestamp_queue</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga5c4463ccb1c7f599a1b34bcac2c01ff5</anchor>
      <arglist>(snd_seq_port_info_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab40867ed02d9d6e40a75f929b5adf24d</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_delete_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaa79a02d8fc3d6668b0a68d5d8b172603</anchor>
      <arglist>(snd_seq_t *handle, int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9de3dbd9960f6108257f38e7945ae327</anchor>
      <arglist>(snd_seq_t *handle, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_any_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gaca72792a7a96c18809768a905cefbfa4</anchor>
      <arglist>(snd_seq_t *handle, int client, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_port_info</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>gab979b7ece475bba1d75e9d7279b912b1</anchor>
      <arglist>(snd_seq_t *handle, int port, snd_seq_port_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_next_port</name>
      <anchorfile>group___seq_port.html</anchorfile>
      <anchor>ga9f3ba4f4a959798bd0b25b417b9ca4cd</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_info_t *info)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqSubscribe</name>
    <title>Sequencer Port Subscription</title>
    <filename>group___seq_subscribe.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_port_subscribe_alloca</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga1ce0255bad553e69da93b929279e6e88</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_query_subscribe_alloca</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga1afada580792099ea0fd90624b20bd0d</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_port_subscribe</type>
      <name>snd_seq_port_subscribe_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gafdf1b5614ce0d591c86bfcd3f369fa38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_query_subscribe</type>
      <name>snd_seq_query_subscribe_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga67932dfbdaa8fc71a08d058fa7121870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_query_subs_type_t</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gafd3bd807eb95e26760bced605f7b4b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_QUERY_SUBS_READ</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ggafd3bd807eb95e26760bced605f7b4b9fa0dbe48892b30a0412c19a304d05dd6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_QUERY_SUBS_WRITE</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ggafd3bd807eb95e26760bced605f7b4b9fa62a1002a52629b24aba14f592e8e0689</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_port_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadbb7289e585bbc1562ef3b9a0faf17b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga5b9d64f3edd2e5ee90087c447e52d0ef</anchor>
      <arglist>(snd_seq_port_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga8a88b6f7986cdfef79c95fc868ac8b2b</anchor>
      <arglist>(snd_seq_port_subscribe_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga736cf588e66b79fbc575beac47d8f608</anchor>
      <arglist>(snd_seq_port_subscribe_t *dst, const snd_seq_port_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaf25cc0762f6ee1be48762e1804d732fe</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_port_subscribe_get_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab8f9a467cc4cc4587fc3d96efa62b86c</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga236296f6da31744a13d26c970a80fcb1</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac80f53bfaecc9dc6f57a99a859549771</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0c0f2ec04a4496d98cfb75535c8ef047</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_port_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gace8d1d45a7a94a1eb2dcf19056d345a0</anchor>
      <arglist>(const snd_seq_port_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_sender</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabda2bb1e51927155ad1df1701a337f50</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_dest</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0ab685bdf4e1f0dd8be756cb5f089765</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga79a030e6155c66afe94b81f77b8575cf</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga10b7e0184afa49bed2b871bcd1c310c0</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ae181ecaea97317fa724a80e8ce4f21</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_port_subscribe_set_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga14bac64ec25eb4acbfc828657ad8d25d</anchor>
      <arglist>(snd_seq_port_subscribe_t *info, int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_port_subscription</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga29d9011ec93bc997f7de9f3cc99fd755</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_subscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga2b216ec66cd724af31d376398e7b4863</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_unsubscribe_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga962385329f27f4024276756019e8a615</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_port_subscribe_t *sub)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_query_subscribe_sizeof</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga4110de85e3c685870cfcb4279f7278d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_malloc</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga85589d7d7a1dd6b5dee2ce0359657c46</anchor>
      <arglist>(snd_seq_query_subscribe_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_free</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gadf3d6ab12f6153688aa9fcebcc0c23a0</anchor>
      <arglist>(snd_seq_query_subscribe_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_copy</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaca069489ed3e50c239ad50873ebe19b3</anchor>
      <arglist>(snd_seq_query_subscribe_t *dst, const snd_seq_query_subscribe_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga293315700db5b8bf4e56f5ec14fd8c96</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga905bbf39942d96ee653dd239bcd9d761</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0e194f0caff016949b2b4cd591f0536d</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_query_subs_type_t</type>
      <name>snd_seq_query_subscribe_get_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac2e74d5d75c258d8d7c770ecf42ccf84</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga36147269fd15907a52f74c9879b8ad8b</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_num_subs</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gabced00f0d6b51d5cd6461035a5d38bbc</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_query_subscribe_get_addr</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gab43ae1fb1211b7762adc31723344de77</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_queue</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga639c72ea9a0b84d2eab5bf5c70b8e316</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_exclusive</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga08702e693e3a1508755232730f5addc3</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_update</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga543ec2a6286e294363ee13f5294c38fd</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_subscribe_get_time_real</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga97717919a2d96232cbe21d6a9a51b7f7</anchor>
      <arglist>(const snd_seq_query_subscribe_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_client</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga0048b9508d64d897ae90e6155fc66fad</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_port</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gaa79fcd963a66539f92c3ec4dd3d77a9d</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_root</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga9ce815dd0d8d50c4806399449292402b</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_type</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gad78be14f613420a840ef0fc3ebdf3740</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, snd_seq_query_subs_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_query_subscribe_set_index</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>ga3c65dcdc45ec727cb76f9ad15c2364a6</anchor>
      <arglist>(snd_seq_query_subscribe_t *info, int _index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_port_subscribers</name>
      <anchorfile>group___seq_subscribe.html</anchorfile>
      <anchor>gac9c05af9bb647d1aa9b4408f571c809d</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_query_subscribe_t *subs)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqQueue</name>
    <title>Sequencer Queue Interface</title>
    <filename>group___seq_queue.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_QUEUE_DIRECT</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2a5be7ea9ad68adc9a7288ba25850245</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_info_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5f28c5167a09d62b6d4ef0338561ab82</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_status_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga38ba4506ad5f5d63387d3d1fb3d630e7</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_tempo_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8b8349b2bce37cde49359bbbcd47f765</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_queue_timer_alloca</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab9d04097fd82162e5511564248c55114</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_info</type>
      <name>snd_seq_queue_info_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad6fa414eb8273839c2e8ab4418ce1cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_status</type>
      <name>snd_seq_queue_status_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6f72d6b360291ad44ebe45cd64ca38d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_tempo</type>
      <name>snd_seq_queue_tempo_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8cef04796cda140f86f8e6298f26b4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_queue_timer</type>
      <name>snd_seq_queue_timer_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaff3d3167d37b04dfeb5cf834e35b0729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_queue_timer_type_t</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaaa4b5ef5120e6c49b799d8a7aa08427b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_info_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55ef5e5a6defb4644756cd74c2979e31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad78dec2ee096469359b25935d7097870</anchor>
      <arglist>(snd_seq_queue_info_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga505d9b6f484307d65699c06ce8f441c5</anchor>
      <arglist>(snd_seq_queue_info_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga29a887460bfe9267cb52762c92fb223f</anchor>
      <arglist>(snd_seq_queue_info_t *dst, const snd_seq_queue_info_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga457f2e8325b450d2438f51dfffc0f1ac</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_seq_queue_info_get_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcfc3ffd825a8815cbf4eb33e475de02</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga96157a2ca9d489b44643e45ff2f59dbe</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_info_get_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1030896da01cf5db2d1f4f0708f70df4</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_info_get_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5f0bec17e5659f97e4e1120bdce17f89</anchor>
      <arglist>(const snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_name</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaa62c379286b52d3ca60b28a895cce88e</anchor>
      <arglist>(snd_seq_queue_info_t *info, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_owner</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga034321c7457283655d905b628ddf5be5</anchor>
      <arglist>(snd_seq_queue_info_t *info, int owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_locked</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gadb0872c315b7aad61efb1fbe0a5c9a47</anchor>
      <arglist>(snd_seq_queue_info_t *info, int locked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_info_set_flags</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad28b514ecfab5d4446ed2699d2aeed7f</anchor>
      <arglist>(snd_seq_queue_info_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga05fc43229e94aecbb4379909200aeeae</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga8efa821e0fc96fd05460306808e8fb7d</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_alloc_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga036e62b321b56bee2e8d2e8280a6416a</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5b2cf5082861776ac9f7f986459cbccf</anchor>
      <arglist>(snd_seq_t *handle, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga55c027a8a487f9c9000674a0e5ef4ab0</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_info</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1b55c8f96590fc916aa55090c4ba42f1</anchor>
      <arglist>(snd_seq_t *seq, int q, snd_seq_queue_info_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_query_named_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaad396a0a6257df968e5ad0c7ee1222ae</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5ae5f595791c1fb83b21d8ffbf493ae6</anchor>
      <arglist>(snd_seq_t *handle, int q)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_usage</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gae9663bbdc879358019ba35b317a9278a</anchor>
      <arglist>(snd_seq_t *handle, int q, int used)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_status_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga410d7b24d89be10501ee18c1b2673a72</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga97a3fa054a6c7778bf3b098bde16c71e</anchor>
      <arglist>(snd_seq_queue_status_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaab4d1480fceb6773993d615fec82716b</anchor>
      <arglist>(snd_seq_queue_status_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_status_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1869ff7afa1c4369b7f55b00d3918bec</anchor>
      <arglist>(snd_seq_queue_status_t *dst, const snd_seq_queue_status_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab62a82ccd8e49520bdc5c6c3c74a73e7</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_status_get_events</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad132bcb774aacbf89cd43f810980cf17</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_tick_time_t</type>
      <name>snd_seq_queue_status_get_tick_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga45f380b20367b1ccce3e8f26b3ce35d4</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_real_time_t *</type>
      <name>snd_seq_queue_status_get_real_time</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab386a400f82a7b181e40646d2c58d786</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_status_get_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2f497177636b228f8ce75f853d380428</anchor>
      <arglist>(const snd_seq_queue_status_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_status</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga594dfc6fa6708674238275821c759661</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_status_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_tempo_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga9da76e175bbb5672d456888a1c6563ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga725a4ba4e5b9860468a8904a64dcf20c</anchor>
      <arglist>(snd_seq_queue_tempo_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabcefe4a38566fbbfaea2ba72dd7d020b</anchor>
      <arglist>(snd_seq_queue_tempo_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6d6b5e1c110e1fa86f73a6dc9ae30669</anchor>
      <arglist>(snd_seq_queue_tempo_t *dst, const snd_seq_queue_tempo_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gabe8d63b929c886cd0a0c30ff29dde687</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0ae17b5abc2d0967eb486f09186c78a2</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_tempo_get_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga65741e506fe8b4e508948276c28369a5</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga58bd46f3157166238aedf69d0d1488e1</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_tempo_get_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gab69067f2e5f84592004709c5a02dc980</anchor>
      <arglist>(const snd_seq_queue_tempo_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga4b0488b65a0ca46460c92d80afa53681</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int tempo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_ppq</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga69e4bf372ce3fb49b8fa60130472ba47</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, int ppq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga1fe4c287eb922f986d70d97e8b189b2a</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int skew)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_tempo_set_skew_base</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf3d139c12fa36fa8c582d966bcedde29</anchor>
      <arglist>(snd_seq_queue_tempo_t *info, unsigned int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf1fab24ee86f45c7eb2b0c3d1b2574b4</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_tempo</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga84793898d689520441a4c1164a8c0c77</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_tempo_t *tempo)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_queue_timer_sizeof</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga60d0cf3e001553f476f9e42f36fbc4c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_malloc</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gaf92d9d17a12095b2d79fda8c9a55c165</anchor>
      <arglist>(snd_seq_queue_timer_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_free</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga0b0b25bcdc1ed4d77fb652af640b1a85</anchor>
      <arglist>(snd_seq_queue_timer_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_copy</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad51004af9337c59da5863167dc7a79a1</anchor>
      <arglist>(snd_seq_queue_timer_t *dst, const snd_seq_queue_timer_t *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_queue_timer_get_queue</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga2255dc028c3143237de8a4440a81699b</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>snd_seq_queue_timer_type_t</type>
      <name>snd_seq_queue_timer_get_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga635fba8ca3b26972a318c1ee788be52a</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_timer_id_t *</type>
      <name>snd_seq_queue_timer_get_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6b83a4e6cb579c1d1ed99b24e258fdf7</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_queue_timer_get_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga3981cf76e6447dfcccfa429a3f7cb94e</anchor>
      <arglist>(const snd_seq_queue_timer_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_type</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>gad10886abb8001755915a29ee450fa3a5</anchor>
      <arglist>(snd_seq_queue_timer_t *info, snd_seq_queue_timer_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_id</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga5525b8e9d1efbad4718e3dbbaa9e4462</anchor>
      <arglist>(snd_seq_queue_timer_t *info, const snd_timer_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_queue_timer_set_resolution</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga6e6fbe81b0fff646e046ac81b32fd44f</anchor>
      <arglist>(snd_seq_queue_timer_t *info, unsigned int resolution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga545fa858434c91dba0de7bd9585bcc08</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_queue_timer</name>
      <anchorfile>group___seq_queue.html</anchorfile>
      <anchor>ga607d9437a074adea11f2112e26eac6ac</anchor>
      <arglist>(snd_seq_t *handle, int q, snd_seq_queue_timer_t *timer)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqEvent</name>
    <title>Sequencer Event API</title>
    <filename>group___seq_event.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_INPUT</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gac6a1b26c4551664f1647bc71001b5f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_OUTPUT</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga21236ad0af7c1f3d549c1b3e008b0c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_DEST</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2662f8f42259f5d61be4bfb66fc6f248</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_DEST_CHANNEL</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga639b7c33bf27b65ca14857bf5f1cee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_BEFORE</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga69279405cabd0127222b936dd6e45e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_AFTER</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga8213dbaeb33df14ec7a1e7fd501f8c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TIME_TICK</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gac4169f30c9c8c5dc462245f3a2dc5d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_EVENT_TYPE</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gada13f98960143c3d24e6965c954d0fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_IGNORE_OFF</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga43008e518e356084dbcea01b3e7d1909</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_REMOVE_TAG_MATCH</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga19bc5ec1e09ad34af5cf5ae3b28ee434</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_remove_events_alloca</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaa961c5d6e931bb50c75d828c8470ab02</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_seq_remove_events</type>
      <name>snd_seq_remove_events_t</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaff65b0e9c173d96af7f21bfceeca249c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_free_event</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6a4edcdaec5d55e61c8db1a0fbb2daa9</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>snd_seq_event_length</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae807a81acfbb8e7147a186a02274b34b</anchor>
      <arglist>(snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0360e41b946c9948ad717beef7c5ab61</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga41be1e09173957944352c50067a686ea</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_direct</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga63986686b918abeff9902108638c5b2f</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6421feafcd6f116d34531d6b54177c17</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t **ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_input_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga08d1c09716d6c04f8164539429a8659c</anchor>
      <arglist>(snd_seq_t *seq, int fetch_sequencer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drain_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga64a0ed5488504ef91b5b6b92172bc0aa</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_event_output_pending</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga9ac143d4f0f826c9715424a8ec47339a</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_extract_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga8a75dbcc2b51d0ea81d2538c0ae131f0</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_event_t **ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gae42e855dcb4745bdc78efe313d49a0ef</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_output_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga12bcd6b29f0d5f13b00f2c55a2ca4556</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga6f8a93aaa55cdbff67e264fd5357de0e</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_drop_input_buffer</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7b1182e2df033f7813a28bded948cd5e</anchor>
      <arglist>(snd_seq_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_seq_remove_events_sizeof</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaa5a0541a3f5e9b0536c8bc022c64dc04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_malloc</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga280e1b40b1cb608176d9f561038afb74</anchor>
      <arglist>(snd_seq_remove_events_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_free</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga14849dfc4b6f46c58aa8567a7ee5860e</anchor>
      <arglist>(snd_seq_remove_events_t *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_copy</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga03bce50b05a4a7ae7236875a3e9d2949</anchor>
      <arglist>(snd_seq_remove_events_t *dst, const snd_seq_remove_events_t *src)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_seq_remove_events_get_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga448bdde3612be594f3651d591678770e</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaf1c86405bfc4ad14bfa7d6234545e4ae</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_timestamp_t *</type>
      <name>snd_seq_remove_events_get_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga781d9bfba05346779a4d89b8720111f5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>const snd_seq_addr_t *</type>
      <name>snd_seq_remove_events_get_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2b26aa9977be1f96e42cc71a9075909a</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga474f7d65b54164c7b4066b2341680b69</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga2bac6d50ae68c432441b6f86f8e51ec5</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events_get_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaefe8772759971b008123512b5294fecb</anchor>
      <arglist>(const snd_seq_remove_events_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_condition</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4efc426e73bd8ed2398ee8911c1a1fea</anchor>
      <arglist>(snd_seq_remove_events_t *info, unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_queue</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga79e4eea77bf7639b314d0c6a2b858897</anchor>
      <arglist>(snd_seq_remove_events_t *info, int queue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_time</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga34502d7f197063e7e404039c06cd49f6</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_timestamp_t *time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_dest</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>gaaae3ddaad59def2395a9c3391ad3ea3c</anchor>
      <arglist>(snd_seq_remove_events_t *info, const snd_seq_addr_t *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_channel</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga0611da2732cef4d8943489736e838cb5</anchor>
      <arglist>(snd_seq_remove_events_t *info, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_event_type</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4b3ac3780f5368118422b08a08ed8d43</anchor>
      <arglist>(snd_seq_remove_events_t *info, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_remove_events_set_tag</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga4847f69287addc86dddf61a2ffca5089</anchor>
      <arglist>(snd_seq_remove_events_t *info, int tag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_remove_events</name>
      <anchorfile>group___seq_event.html</anchorfile>
      <anchor>ga7ed1109642fdb8dbd9f8a20564e40362</anchor>
      <arglist>(snd_seq_t *handle, snd_seq_remove_events_t *info)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqMisc</name>
    <title>Sequencer Miscellaneous</title>
    <filename>group___seq_misc.html</filename>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_set_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga8ff28fb95b62e6359d2e21c23b2a73a5</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_seq_unset_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga74b65393d57f2e8771a801629d6b3528</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_change_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>ga2eb3e010834db5401a6e38c1bd2f23e1</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_get_bit</name>
      <anchorfile>group___seq_misc.html</anchorfile>
      <anchor>gab9ee8563691ac283aaf93c6bd15ad99b</anchor>
      <arglist>(int nr, void *array)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqEvType</name>
    <title>Sequencer Event Type Checks</title>
    <filename>group___seq_ev_type.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>_SND_SEQ_TYPE</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga4751ac8b4272b1439408afc963a49636</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_SND_SEQ_TYPE_OPT</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gadc21b59998d0cf1473c0fe1b6b863b71</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_type_check</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf2830d00d1641fd9311364f2a3521485</anchor>
      <arglist>(ev, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_result_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga8f90579f79cee4d8b29b1d10114373ea</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_note_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9a27965148074e206c3143dbb0c8de3e</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_control_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gac72e058f43ff25cea0043c460c109cae</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_channel_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga1ba891f98c9c4b54384e7c24fa9a7dd5</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_queue_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gacb4bf5684b67c3763a5088df71ca0159</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_message_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga325c894a9eef04a510d79765581556c3</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_subscribe_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gab33330bcf7cfe7e93abe51c603ec6974</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_sample_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaef277335d27c8bee394b5f6d068497a1</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_user_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga6b390a71b71b7be48a6470db7042038f</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_instr_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga12d36511a518535dacad6d011e7994ea</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_fixed_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gacbee889f777ba57ffaefe5e170b4cdbd</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_variable_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gabae52c0158f02aa84c17f92c68683caa</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_varusr_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9985549f097ac2752dd12bf2809f8b24</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_reserved</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga93e24ae77718810bdd763c27d935f501</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_prior</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf87a88bb452f8e324ec0ed8fd0387c22</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_length_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga5ecf609b322e5b89c9c34c3bb2d79582</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_fixed</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga761af7115668606b5ec52772ed6e4c39</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_variable</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaf49ed93e227adb6c182a66f06afacce0</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_varusr</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga989761929e93fd3b3aa061f8dccd426a</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_timestamp_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gabd5fe99634508a917e1a3abc445fe449</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_tick</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga7ac61bc05ceffc89ab63ecf33b402e43</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_real</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gac9e547978dfa08480d25b5708c19df22</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_timemode_type</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gad2d8ae9a2f5fedd0834d215af7e8073b</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_abstime</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga9e04371f9b8fff628a823a7f5c1e4908</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_reltime</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga7504ce2159e886ecae2cf959bb99e9a7</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_is_direct</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>ga02ec1f914e66b2c6f7ecf53d15b75335</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>snd_seq_event_types</name>
      <anchorfile>group___seq_ev_type.html</anchorfile>
      <anchor>gaa40bbb018018a491bd102e6fe58a6c84</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqEvents</name>
    <title>Sequencer Event Definitions</title>
    <filename>group___seq_events.html</filename>
    <class kind="struct">snd_seq_addr_t</class>
    <class kind="struct">snd_seq_connect_t</class>
    <class kind="struct">snd_seq_real_time_t</class>
    <class kind="union">snd_seq_timestamp_t</class>
    <class kind="struct">snd_seq_ev_note_t</class>
    <class kind="struct">snd_seq_ev_ctrl_t</class>
    <class kind="struct">snd_seq_ev_raw8_t</class>
    <class kind="struct">snd_seq_ev_raw32_t</class>
    <class kind="struct">snd_seq_ev_ext</class>
    <class kind="struct">snd_seq_result_t</class>
    <class kind="struct">snd_seq_queue_skew_t</class>
    <class kind="struct">snd_seq_ev_queue_control_t</class>
    <class kind="struct">snd_seq_event_t</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaf3c4c4900893680d95aa722ee6c16d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_REAL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga13e36bf2f3341625f6d88858d512f50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_STAMP_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gac7da1e1965e86a68f663babec22a99ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_ABS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaa799f2aa335545bfe9dedc84105b6cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_REL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga167d462a14d80b2599470635dd0ee048</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_TIME_MODE_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gac7c12b40ede05529ec9a66b938d62aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_FIXED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga35b6aacb44080053e0ca0eeaefbe8dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_VARIABLE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga273f82dce70a0284a4dcabd34f1bfe7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_VARUSR</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga5e38e6cf87f023332b797c30b74223b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_EVENT_LENGTH_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga69fa938ef7ebc12e3d1b8758b39b7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_NORMAL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gad40a7212be7f3c8b27ad641d7e4210ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_HIGH</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga6816c4987d7dc2efe4b9949223964165</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_SEQ_PRIORITY_MASK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaea7b84a517451282036dad991a45239c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>snd_seq_event_type_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga5effcf3631d53ced009e02b8a9cabf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>snd_seq_tick_time_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaa6a1e0c4394f9b26cc55e0181a5e2cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_seq_ev_ext</type>
      <name>snd_seq_ev_ext_t</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ga4ce65ee70e6d2d346f67b2fe725abb3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_seq_event_type</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>gaef39e1f267006faf7abc91c3cb32ea40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYSTEM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8b5e0c8c25353f3bc185a73c28573d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_RESULT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a201648f4d62fc9597af38376935f62f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a783ed12805a5ecc26b36b5d469332a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTEON</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af35df63c334c5388ff349550e31460c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NOTEOFF</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aa7359bc2f050a79c5021cfa90d0705f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_KEYPRESS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a6d7adef3e4f2ed96cd7e2def9d541510</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTROLLER</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a926c84318eb653c739e1d21fa20a0d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PGMCHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae8264fb5f3870a1e5f6c2724b916cefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CHANPRESS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a7eb97df129127eb771e9800da217f1fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PITCHBEND</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab1bb9ffa38e5247f993f9368a144336b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTROL14</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a931edc93b65db5e11be1670166a6623b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NONREGPARAM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a83eb21e2fe5bf509d0d9c4a911f0cd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_REGPARAM</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae85ad451b5012c5d4f37bec4cb39516c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SONGPOS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a04f1e8a2a2201a7fbddf628b127dab39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SONGSEL</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40afc621686c4f2ac288e24ff8d0aa448bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_QFRAME</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ad2bcd713ea5fc228791eb95545cdf23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TIMESIGN</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a2d96daa58863eba007a6a8ce409d25a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_KEYSIGN</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a342cdc56ed94d27d39fae09bdbfc4e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aeca878e55b4482dc3d83bbc1c1411f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CONTINUE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a85633da32af8af5efa596a7f68cff5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_STOP</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8bda57193eede5c6d45a34a135c8d95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SETPOS_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aeb233aee7f0548cd3b0fdc811c15d3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SETPOS_TIME</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a0ff211e23d32cbb1e3bcc4a63f61c2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TEMPO</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aafa3d0b6c0a467619b802c9e27320810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLOCK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a54f38f955c675d0e9624f67befe513b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TICK</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a2df30d1017d98ea37e31f83132d89b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_QUEUE_SKEW</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac974cca728d755870c6b106fb172a49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYNC_POS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a68c456590802b80ff3e338852a2c28ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_TUNE_REQUEST</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a60918a2617fd3435decbf96029994ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_RESET</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aefe6bb7adade51add7905856d70efc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SENSING</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af0cd5b4a2aa37ee9b34c6ecdde1b32b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_ECHO</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a71cd073dbeb98982d8b094ab6d841376</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_OSS</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae67daafb563cbbda4a131bec897d8ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a7b77fe59af173ddfebb718da0859712e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_EXIT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a0b3cb6ea4b789281399b4fb6561aa390</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_CLIENT_CHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a49cf4bb402d99c25d817448b17b6e204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_START</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab21b1c620680dbc7b1f176f7b75b851a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_EXIT</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a8dc5dc9a22148dbacdbf69df2e8347f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_CHANGE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae7b1d0e0dcf385baf78ddb60975d20f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_SUBSCRIBED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a1b3b924275ca8c641df3392fb661ff30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_PORT_UNSUBSCRIBED</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac7419ff83a6e1c4b318c48ed38b938f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR0</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ae73dbea29b624e1b8d7ec37728b22b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR1</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ac1e901b952f98aee45c96627a937908e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR2</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a1828901e7b2bbc5a79a1bc88e7165841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR3</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aae35f2bb6429dc231fba55c646160e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR4</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ab7201d83f92fa2fc383a560946e34c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR5</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a39cb3eb078644cf65fb1af0c6965ab30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR6</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40ad92cb55b491219eea100794029cbf7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR7</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a717ccb9662771874b116bdccbac4f734</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR8</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40af41fd348574a8fc8876456325d9e59cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR9</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a28b9207af50fa5fae4f13acdc029db62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_SYSEX</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a053842a32bef6aac4c8b21b2fc80fc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_BOUNCE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a290af1f3314dcfe9f83ee387c38417a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR0</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a3589b2a7abd184c2daeda8d1b3cff906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR1</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aac29ee4fae15e3fbc92f489a7e08e33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR2</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a03b297316c7240dc208e8490b4309e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR3</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a92108ceb0767059de1e81566d1b92b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_USR_VAR4</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40aec2b1c443ce623770bdf5638575f97ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_SEQ_EVENT_NONE</name>
      <anchorfile>group___seq_events.html</anchorfile>
      <anchor>ggaef39e1f267006faf7abc91c3cb32ea40a78b0f3e8f6d674f01d3823481c0b90f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SeqMiddle</name>
    <title>Sequencer Middle Level Interface</title>
    <filename>group___seq_middle.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_clear</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gafa496482a21b231621b385d1f1675b58</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_tag</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga2d78011c3d4618ff47f7f60e3553ea02</anchor>
      <arglist>(ev, t)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_dest</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaff2d03c7db0d6d5cfeec429d160d9459</anchor>
      <arglist>(ev, c, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_subs</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1eb546b3a1a23044d0ba7818731ed6d7</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_broadcast</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab06bf27dd5d0c94d78d935311fec1124</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_source</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga457525dcca4a8a7e8cdb599a8ad6e8ff</anchor>
      <arglist>(ev, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_direct</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae2674210b5601e8aa3e787c1ddbdcb62</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_schedule_tick</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga589469c27715bfae205ce26d5801d8b1</anchor>
      <arglist>(ev, q, relative, ttick)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_schedule_real</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga713370bf29736477532e791b4ad92530</anchor>
      <arglist>(ev, q, relative, rtime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_priority</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga9b6fba99052fb11977559f15192581d4</anchor>
      <arglist>(ev, high_prior)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_fixed</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8c949038f36fd3e27de8b8e419978793</anchor>
      <arglist>(ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_variable</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga12ac15c961d96d3122f7c2f6a0849fb1</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_varusr</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga993e1f46d8122a227fa0072a73af813e</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_control</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gacef573eba71eb2238758f1c178efd1d3</anchor>
      <arglist>(ev, typ, q, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_start</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga4fcbcb1f9e1967a1ec77b569be735d7a</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_stop</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga342554415f9536077408dc1c7331ab36</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_continue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga32b0ff4c40ffde6e08a7df624193ae40</anchor>
      <arglist>(ev, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_tempo</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga3d2a17d5034eb296af311b56374f2b19</anchor>
      <arglist>(ev, q, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_pos_real</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae7cb527a1efa854ba487bb26cfa62c77</anchor>
      <arglist>(ev, q, rtime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_queue_pos_tick</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8b6057651e037e0df565784f629b5fb8</anchor>
      <arglist>(ev, q, ttime)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_start_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga0c7a86bb19188a00c5a3b4907d558058</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_stop_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab62a2e964135fdff96d21835d4cddad6</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_continue_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gad6b0c90be37eeb583318c9077f095b86</anchor>
      <arglist>(seq, q, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_change_queue_tempo</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab77f13c0b39dec12ef983eb706925d00</anchor>
      <arglist>(seq, q, tempo, ev)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_note</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga544adc6b2a43edab107962754a772778</anchor>
      <arglist>(ev, ch, key, vel, dur)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_noteon</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga61fbd95aadd4a80f4ff8db5f8f28172f</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_noteoff</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab9b466031485504fd5b4300def95de7c</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_keypress</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga09c562a0d1745dc1a73e7347d51af913</anchor>
      <arglist>(ev, ch, key, vel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_controller</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1658bb76bb89c8bac1e7b0140d72c23c</anchor>
      <arglist>(ev, ch, cc, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_pgmchange</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab74005fe3b04460687f88ba79695d631</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_pitchbend</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8da40bfd56e00ebec775e5241d86a3e3</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_chanpress</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaa475a6778116256734e7da45f4eb7af8</anchor>
      <arglist>(ev, ch, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>snd_seq_ev_set_sysex</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga104862c436dcc8f23892be44f50bc90f</anchor>
      <arglist>(ev, datalen, dataptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_control_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga36dee7982baa47ad22ab8437541ea5ef</anchor>
      <arglist>(snd_seq_t *seq, int q, int type, int value, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_create_simple_port</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga9368266bde7b5c0f8d5ddeaf64914719</anchor>
      <arglist>(snd_seq_t *seq, const char *name, unsigned int caps, unsigned int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_delete_simple_port</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga8ac4c3a85750550f2978ca720a6329ca</anchor>
      <arglist>(snd_seq_t *seq, int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_connect_from</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1382029795fa101a3b8cc0af7b83b639</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int src_client, int src_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_connect_to</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gab39e210c5d93e96c241644f334c6c9ca</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int dest_client, int dest_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_disconnect_from</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga931d199c780be30524aa24e58c59f6b9</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int src_client, int src_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_disconnect_to</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gafe5756afcd471b2d6bbd457c7abc5e89</anchor>
      <arglist>(snd_seq_t *seq, int my_port, int dest_client, int dest_port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_name</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gaec3acab3bfb3df3f0c9ccc4903570b9d</anchor>
      <arglist>(snd_seq_t *seq, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_event_filter</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga888bf17bbc8141d1624f7bbef52dddce</anchor>
      <arglist>(snd_seq_t *seq, int event_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_output</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga38e40d84154122798c9fad8e56c60a0f</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_output_room</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga597d2417e0fd512f56d31464cc2ea7d7</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_set_client_pool_input</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga1344c7aadb847bd409093c179557732d</anchor>
      <arglist>(snd_seq_t *seq, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_sync_output_queue</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga732ad887b457771b7db47908186e8cce</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_parse_address</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga692043bd9cb709b15513b06cea5bf0e8</anchor>
      <arglist>(snd_seq_t *seq, snd_seq_addr_t *addr, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_reset_pool_output</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>ga49d2acf57c4493a95eaaa19d8199f6f2</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_seq_reset_pool_input</name>
      <anchorfile>group___seq_middle.html</anchorfile>
      <anchor>gae90243ea4d4e534bbca2b3965ff8efe9</anchor>
      <arglist>(snd_seq_t *seq)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MIDI_Event</name>
    <title>Sequencer event &lt;-&gt; MIDI byte stream coder</title>
    <filename>group___m_i_d_i___event.html</filename>
    <member kind="typedef">
      <type>struct snd_midi_event</type>
      <name>snd_midi_event_t</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gaf4d255a5c5228aa8d46a9c3e368a0e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_new</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gaa3c1797128d84a182197f5dd853c53ec</anchor>
      <arglist>(size_t bufsize, snd_midi_event_t **rdev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_resize_buffer</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga22cffc488269968de6cae6796f92ee12</anchor>
      <arglist>(snd_midi_event_t *dev, size_t bufsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_free</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga84b9fdddfc1996d0abf759773593931f</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_init</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga670f51a0ce1402b7d03c2a3f5b2801ed</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga54a3d6f03dc0f83ae32d7b12b1da7e63</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_reset_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga1d6bd40b70cdd77e500b25e6eec19484</anchor>
      <arglist>(snd_midi_event_t *dev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_midi_event_no_status</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga4c32d90809d0c2d44fb41be0276100df</anchor>
      <arglist>(snd_midi_event_t *dev, int on)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_encode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gae44531e8091bdd6e97a5b70e7b81ea10</anchor>
      <arglist>(snd_midi_event_t *dev, const unsigned char *buf, long count, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_midi_event_encode_byte</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>gab758a60cfa82dfa28e08ba2e2cbe2149</anchor>
      <arglist>(snd_midi_event_t *dev, int c, snd_seq_event_t *ev)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>snd_midi_event_decode</name>
      <anchorfile>group___m_i_d_i___event.html</anchorfile>
      <anchor>ga9ef018a85ec7f61d45d8b17083bf8cc3</anchor>
      <arglist>(snd_midi_event_t *dev, unsigned char *buf, long count, const snd_seq_event_t *ev)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Plugin_SDK</name>
    <title>External PCM plugin SDK</title>
    <filename>group___plugin___s_d_k.html</filename>
    <subgroup>PCM_ExtPlug</subgroup>
    <subgroup>PCM_IOPlug</subgroup>
    <file>pcm_extplug.c</file>
    <file>pcm_ioplug.c</file>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_ENTRY</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>gaf1fae79f689774a0bdb72a5e15f5978c</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_SYMBOL</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga73a613cc5b7b3642f53bbd5a1d78004b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_PLUGIN_DEFINE_FUNC</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga3fd72ea47a7a921943b26c580b9d6c41</anchor>
      <arglist>(plugin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_parse_control_id</name>
      <anchorfile>group___plugin___s_d_k.html</anchorfile>
      <anchor>ga6cc0e84dc2822458b4ed163071a51ecd</anchor>
      <arglist>(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp, int *cchannelsp, int *hwctlp)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_ExtPlug</name>
    <title>External Filter plugin SDK</title>
    <filename>group___p_c_m___ext_plug.html</filename>
    <class kind="struct">snd_pcm_extplug</class>
    <class kind="struct">snd_pcm_extplug_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_MAJOR</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga82e7bf8a5b451792195a70cb74e31fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_MINOR</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga40f40d20f8683751fdbb25b1f9ed013c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION_TINY</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga685e379757c606a4d2a7fcc969cc5dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_EXTPLUG_VERSION</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga24d0ae71d106f08685d9ba8c6cf5fe78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_extplug</type>
      <name>snd_pcm_extplug_t</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gaeddcbb8005ccafb008a75283d5d9e551</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_extplug_callback</type>
      <name>snd_pcm_extplug_callback_t</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga0c554fce3192586b7a5ff51d45272f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_FORMAT</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9ea627234d455a7d4652aacead45cf650ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_CHANNELS</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9ea24eab971805f640763f6ffd9f60875dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_EXTPLUG_HW_PARAMS</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gga61dadd085c1777f559549e05962b2c9eae359079bba1fec51841cd82179961801</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_create</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gab0b27889f74c83cd033062981320fd62</anchor>
      <arglist>(snd_pcm_extplug_t *ext, const char *name, snd_config_t *root, snd_config_t *slave_conf, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_delete</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>ga7259292a6f64a2432f4c2a44bb5f8508</anchor>
      <arglist>(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_extplug_params_reset</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gacef181565eb697397ce41c1aab381777</anchor>
      <arglist>(snd_pcm_extplug_t *ext)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadbf27adba1a7cd0195b6ac750bb11bf7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gabef139bbe5db265433fd5310d0faad4d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_list</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad14f6746e36d556c7a7937633b965ca7</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_slave_param_minmax</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gad3cac0ee15293f349220a75cce69a51e</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_extplug_set_param_link</name>
      <anchorfile>group___p_c_m___ext_plug.html</anchorfile>
      <anchor>gadfb6033cad31a9d4fb5f76c2a0edd20d</anchor>
      <arglist>(snd_pcm_extplug_t *extplug, int type, int keep_link)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCM_IOPlug</name>
    <title>External I/O plugin SDK</title>
    <filename>group___p_c_m___i_o_plug.html</filename>
    <class kind="struct">snd_pcm_ioplug</class>
    <class kind="struct">snd_pcm_ioplug_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_LISTED</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga435c57838f97c24b7274a9596ccbe3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_MONOTONIC</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gad5c0b67e4d9b7be96f1083179e95f38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_FLAG_BOUNDARY_WA</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gaf7f7da416f798efac868aa5a88f1e47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_MAJOR</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga46f4111ec394e6c4209a4e1b5f99a9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_MINOR</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga49ea8946ea0c9b2655b70afb03ed79bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION_TINY</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gabe46103216aa58afc3c4bc314dd1bbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_PCM_IOPLUG_VERSION</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga81a2273c4df9be29d91e6e2a0860d991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_ioplug</type>
      <name>snd_pcm_ioplug_t</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga1038655a4ca74f3aef060282d6df739b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_pcm_ioplug_callback</type>
      <name>snd_pcm_ioplug_callback_t</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga9bbf2927f689c96faa7b6c5c89286355</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_ACCESS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635adf64bb9d9a7f95f878e8bb22e003c357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_FORMAT</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635aa7186fa6ab3791611363c83f725f1a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_CHANNELS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a5cb59832a513d2b87166000d3f4035e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_RATE</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a43827c9773bc5c40a1643bd8f930c8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PERIOD_BYTES</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635aafe12ebbe6f618aa75cc7c5d64d45eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_BUFFER_BYTES</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a004f7b7af23b37d30d520777158e8277</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PERIODS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635a1f68c89ac11ae9fe28710cee044a0b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_PCM_IOPLUG_HW_PARAMS</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gga726ca809ffd3d67ab4b8476646f26635ab024a119736127e7a606c75e57d34585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_create</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7fb5213a5e776246e2b4dc53ec8d7604</anchor>
      <arglist>(snd_pcm_ioplug_t *io, const char *name, snd_pcm_stream_t stream, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_delete</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga286ec116983166de889f0268a2c666ef</anchor>
      <arglist>(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_reinit_status</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab223893226ecf78f675c89959a8c421a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>const snd_pcm_channel_area_t *</type>
      <name>snd_pcm_ioplug_mmap_areas</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gac3b666ff286745c9eb24de3e3930970a</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_pcm_ioplug_params_reset</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gad74355dfaa56fae80d49181c83eeecc4</anchor>
      <arglist>(snd_pcm_ioplug_t *io)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_minmax</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>gab62d470b02661214319196394b55fb37</anchor>
      <arglist>(snd_pcm_ioplug_t *io, int type, unsigned int min, unsigned int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_param_list</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga7d713552fb846ccdf4b7ec6a9fc1b562</anchor>
      <arglist>(snd_pcm_ioplug_t *io, int type, unsigned int num_list, const unsigned int *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_pcm_ioplug_set_state</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga65feed7caf26f07aad0c722fc61fe751</anchor>
      <arglist>(snd_pcm_ioplug_t *ioplug, snd_pcm_state_t state)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga23584e8e132330fd00850ead1ac1aec2</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
    <member kind="function">
      <type>snd_pcm_uframes_t</type>
      <name>snd_pcm_ioplug_hw_avail</name>
      <anchorfile>group___p_c_m___i_o_plug.html</anchorfile>
      <anchor>ga3b211c9fd355e60822a1015ee29206e8</anchor>
      <arglist>(const snd_pcm_ioplug_t *const ioplug, const snd_pcm_uframes_t hw_ptr, const snd_pcm_uframes_t appl_ptr)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CtlPlugin_SDK</name>
    <title>External Control Plugin SDK</title>
    <filename>group___ctl_plugin___s_d_k.html</filename>
    <file>control_ext.c</file>
    <class kind="struct">snd_ctl_ext</class>
    <class kind="struct">snd_ctl_ext_callback</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_ENTRY</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac015d294d7ae50614f6991da93893c3b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_SYMBOL</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gaa94fc65e8951f16e4b273b0f81e90f7e</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_PLUGIN_DEFINE_FUNC</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga13e494fe5c6068d6608a974f5a62a430</anchor>
      <arglist>(plugin)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_MAJOR</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga110bc1818d56d22b89e2773d7c54a115</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_MINOR</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga9ace8ce6f67297cba3bb365b600c8bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION_TINY</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gae99e1c9ee4d5c9e9afaa0376a2af96eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_VERSION</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga65ea29f84b09ee3e640f88b06d05a1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_CTL_EXT_KEY_NOT_FOUND</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac1f0737189a30bbb1e4dcbf681df39fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>snd_ctl_ext_key_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gac73a66a3973afb51c4e585177647c693</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_ctl_ext</type>
      <name>snd_ctl_ext_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga6e8d1fd87ddef00af5a9e2dd6c77b1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>snd_ctl_ext_callback</type>
      <name>snd_ctl_ext_callback_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga8185c9a0e27e9562511a82dda1d20ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int()</type>
      <name>snd_ctl_ext_tlv_rw_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga51b74c20889bc3b81f5abc434a2267d0</anchor>
      <arglist>(snd_ctl_ext_t *ext, snd_ctl_ext_key_t key, int op_flag, unsigned int numid, unsigned int *tlv, unsigned int tlv_size)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_ctl_ext_access_t</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>gaeedd1d7413b3025e9cede1b27e509de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_create</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga317775f9c5e239781e71735ca5ba1ca6</anchor>
      <arglist>(snd_ctl_ext_t *ext, const char *name, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_ctl_ext_delete</name>
      <anchorfile>group___ctl_plugin___s_d_k.html</anchorfile>
      <anchor>ga33fadf68f6414722876f21201214f76e</anchor>
      <arglist>(snd_ctl_ext_t *ext)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Mixer</name>
    <title>Mixer Interface</title>
    <filename>group___mixer.html</filename>
    <subgroup>SimpleMixer</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>snd_mixer_class_alloca</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga040501051e4e4f8667caf0e89328702b</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer</type>
      <name>snd_mixer_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga34161447bc01a64f578456ed13d57e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_class</type>
      <name>snd_mixer_class_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga51c7b205d5afc62342d9dec3ce54d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_elem</type>
      <name>snd_mixer_elem_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9bb5eb24e4feea6c1a04c79b77938ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_callback_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga8dc213e4c7156e1a0dad485700dcdce8</anchor>
      <arglist>)(snd_mixer_t *ctl, unsigned int mask, snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_elem_callback_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga667c25f9cbf052f9eaa867a5af271007</anchor>
      <arglist>)(snd_mixer_elem_t *elem, unsigned int mask)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_compare_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaf4cc71d58faf35cb8f62006e467b21e8</anchor>
      <arglist>)(const snd_mixer_elem_t *e1, const snd_mixer_elem_t *e2)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>snd_mixer_event_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaa121b4c6c77665a9482b7a8d2128dd8c</anchor>
      <arglist>)(snd_mixer_class_t *class_, unsigned int mask, snd_hctl_elem_t *helem, snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_elem_type_t</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga18a15493e66cc90ab851e49161d28b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_open</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga240cfebce7d68f22875d76e99cf19394</anchor>
      <arglist>(snd_mixer_t **mixer, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_close</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9deea3f628bf737001d968620cfd3b1a</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_first_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaffccf51ddf8ecdc357b216cb979a2318</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_last_elem</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga51121b263ea3d3ee9367aabfd338ef11</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_handle_events</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0cfb6b50ec2493281107b0649f87cb8</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga8c36e99e3d2ab0cb76a5acd203face45</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_attach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e5feeb925addfc245ce81c037b1397</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga99ca1c15d46d5f194a216d5e0a8e9229</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_detach_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga63b6f8183e08a2b3e6bb83638828e8df</anchor>
      <arglist>(snd_mixer_t *mixer, snd_hctl_t *hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_get_hctl</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafbbaedd662ea57e573e09f39ca8b247c</anchor>
      <arglist>(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab3ee14782a19e6d62acbdcdb5f9f7786</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07f7bc33587907988aaffc03ce72367e</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_poll_descriptors_revents</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab26686311756ee3c66e05766227df818</anchor>
      <arglist>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_load</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga24b6077528d04cb9fca072b3ae109aef</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga93a71c28e82c04e4c732703e309910fd</anchor>
      <arglist>(snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_wait</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga072846849f4bc2058336fd6601f18a15</anchor>
      <arglist>(snd_mixer_t *mixer, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gac7e1bbe5d5b69a6ee67d5bced6325a67</anchor>
      <arglist>(snd_mixer_t *mixer, snd_mixer_compare_t msort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga691a593ea0a32f9535fff83b00a0a574</anchor>
      <arglist>(snd_mixer_t *obj, snd_mixer_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga9cfc303fa34eb234efeb52151838f88b</anchor>
      <arglist>(const snd_mixer_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab91fc99ac65c866e660d4d8be0cb3e17</anchor>
      <arglist>(snd_mixer_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_get_count</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3447c190c69cfce4c52df4ad3300e319</anchor>
      <arglist>(const snd_mixer_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_unregister</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga6a7bf3805fbbfc3f6f8243e91fbce5f6</anchor>
      <arglist>(snd_mixer_class_t *clss)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_next</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga68254228ef108122b8178087ea0fcc16</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_elem_prev</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaaf9a9dfe1d52f40df2be517621f9474a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga01e1fd766a313ce513f561bd03c98317</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_elem_callback_t val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga78c51ad2e60617137e47ad1d58b45916</anchor>
      <arglist>(const snd_mixer_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_set_callback_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4fb4ea11326c1cb1fdbf5dac0444507e</anchor>
      <arglist>(snd_mixer_elem_t *obj, void *val)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_type_t</type>
      <name>snd_mixer_elem_get_type</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga1083ba441bb93da13f79bc0cda226ea3</anchor>
      <arglist>(const snd_mixer_elem_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_register</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga595cbd9394f85f9af4a6b30e748e3930</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_t *mixer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_new</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga226cf962e72b6132fd61cbd434b28941</anchor>
      <arglist>(snd_mixer_elem_t **elem, snd_mixer_elem_type_t type, int compare_weight, void *private_data, void(*private_free)(snd_mixer_elem_t *elem))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_add</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga3b0e73914256f2125d2b7bb48d602457</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_remove</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gacad36ead935e96f75fe44cf8dd4afa2a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_elem_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga40d8bf56621085d5ed5a7e92ad067e03</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_info</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae4a32f9d571201a2bf33a65340dc9afd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_value</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga0d23278769e37532f810cecf2ffffacb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_attach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabe7f0255c9a981a6c73a8edf359781cc</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_detach</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga7413e8f80e2e556c75c6b9fc7d0598f9</anchor>
      <arglist>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_elem_empty</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gae0541b86ecfc094a172b4cd29bb70fd0</anchor>
      <arglist>(snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_elem_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga4cfddf235c06ae83765ecfd45c5a95d0</anchor>
      <arglist>(const snd_mixer_elem_t *melem)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_class_sizeof</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaa61b83017a92b67ea27a18777dcd141d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_malloc</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gadc36fd49fdeccc37c41fc700d29adf39</anchor>
      <arglist>(snd_mixer_class_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafef7028555b5c50b9bb072ba6d441ddb</anchor>
      <arglist>(snd_mixer_class_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_class_copy</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gabaaa35c5538fec113fffdaff4cbed2fc</anchor>
      <arglist>(snd_mixer_class_t *dst, const snd_mixer_class_t *src)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_t *</type>
      <name>snd_mixer_class_get_mixer</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga07e5edf36e361b3c1293ed14d2ef5b76</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_event_t</type>
      <name>snd_mixer_class_get_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga5744823b495ae331e7dd60f2abdf3589</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>snd_mixer_class_get_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>ga95b50447f32262756143cd7d9e76997c</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_compare_t</type>
      <name>snd_mixer_class_get_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad7182d1d18653709bf26fc53a8b1a94f</anchor>
      <arglist>(const snd_mixer_class_t *class_)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_event</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gad0162769035880347ea9af0dbc518e79</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_event_t event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gaf3b845bb0637fc59cacfe59ef29398d2</anchor>
      <arglist>(snd_mixer_class_t *class_, void *private_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_private_free</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gafe066ab71d568f7a616a587da7e3c1a5</anchor>
      <arglist>(snd_mixer_class_t *class_, void(*private_free)(snd_mixer_class_t *))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_class_set_compare</name>
      <anchorfile>group___mixer.html</anchorfile>
      <anchor>gab389fb10998a950207001e3f8abead26</anchor>
      <arglist>(snd_mixer_class_t *class_, snd_mixer_compare_t compare)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SimpleMixer</name>
    <title>Simple Mixer Interface</title>
    <filename>group___simple_mixer.html</filename>
    <class kind="struct">snd_mixer_selem_regopt</class>
    <member kind="define">
      <type>#define</type>
      <name>snd_mixer_selem_id_alloca</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae97a5b8fbc068632409e1459a9476222</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="typedef">
      <type>struct _snd_mixer_selem_id</type>
      <name>snd_mixer_selem_id_t</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac0bfc2b9efcbc308df2daad92983e2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_selem_channel_id_t</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf01a92f33cc46d0b3878d65afcc41b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_UNKNOWN</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a91369fd97c7cb996647c1993136b70ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97afabaaa694a14ab17e1c03ed0a4ff6f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ab9310897c48a0aa06c822d92970b77a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ad72538d298df9240b9b776f7019e9c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97afa66c007bd5deda0b6acb7516c483c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_FRONT_CENTER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a796f68400623ee579ce3d0a913d7ffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_WOOFER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ae8b2cde33cdb6ba8b7a2f58a69d37e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_SIDE_LEFT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97aa50f3dbd34b82d2634c0dba82a85080d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_SIDE_RIGHT</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97ae95813ea4f45d4fb8c3827adc7d36e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_REAR_CENTER</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a709e466b14161e3aba70717b2fc528bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SCHN_MONO</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggaf01a92f33cc46d0b3878d65afcc41b97a6f894eb8b9532977e29e99122e995833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_mixer_selem_regopt_abstract</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab7031d53c3876396c9880631813979c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SABSTRACT_NONE</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggab7031d53c3876396c9880631813979c2a807967c1a34b191d53eb65fe4a6f656c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_MIXER_SABSTRACT_BASIC</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ggab7031d53c3876396c9880631813979c2a71c3a86bbb0514b4c5c488741dec000a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_channel_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga37ae8c6874d975efa83a9074a28113b9</anchor>
      <arglist>(snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_register</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadd686db0b7d2bba9a88112b732b147d0</anchor>
      <arglist>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_get_id</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02aba43d5ae75392b6344c7f8f92fe72</anchor>
      <arglist>(snd_mixer_elem_t *element, snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga51329fb3fea12d50209fcf8ebf542492</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga11a14cd0d589033d49647d27e12b9cc1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>snd_mixer_elem_t *</type>
      <name>snd_mixer_find_selem</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad9b0c9a6d7956f95132aa42857d962cb</anchor>
      <arglist>(snd_mixer_t *mixer, const snd_mixer_selem_id_t *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_active</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga41eb6c6d7a237dc617115ba4ba91ffbd</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_playback_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacdc9e474bb45ca6759a2f9ea878bc1a4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga621b34fc2c4f47a28fb9b34a3dd820e7</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_capture_mono</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadc4c2179abd18d7c587cc199bb8e9273</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_channel</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac05de257374bae60c03ba033344f811e</anchor>
      <arglist>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_group</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae75b0133e7beba016589259b30cf8e7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga08c4099ef62508d5ae7f13bd6affd5a5</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga17468934f36929ae2f7af4850f40f851</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf39321d4b7bb2efac3a3af357e42c6eb</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga095d73eab22ef19cabed8732ffc44a7b</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_volume_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1646edce83681e786da2f1a6befaf113</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_common_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga468e0188282093c377776683bcea20d4</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga4efd34d5ccb384e8db4291bd3aad0760</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_playback_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga162fa35b3cc76e67c14482a2f6b734c1</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6761e23f215d3d048c729a22cfdd952a</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_joined</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga14a6a278ef91593d3c6fc53007627d25</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_has_capture_switch_exclusive</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1ad2e8afe6f5ad7857b0bdc70048d44d</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac8e2c7d0555f58ec790443da87ecbae3</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_vol_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga87dcbf4b28ba67c8a07cdd79231b9942</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, long *dBvalue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_playback_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3bf17ce7cb933fa69973cb69ca079f13</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_ask_capture_dB_vol</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga40141aa00e0839bdfa8398b5aac1a0a6</anchor>
      <arglist>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga12f6f4124bf45db95f965298c2f318bb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3b15557f590f136735a4abee96cf28fd</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6b5799e7971688e1f2e9ccf977c8a887</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga27bf2c4bd591bcf61b3fe20353bac8da</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga55a4f32e711efe4ef09cf041d9fc27f0</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga49f4c3b98ef2353cdaa582e5bf3417a1</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1e4556740beefc8bed40677a316e60ac</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8aa6b212e1e092e5d67ff11070a433ad</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga8bfb52575e4bb06deb30799bc39c0768</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac1af2ccb94c19e7f616338791707c2eb</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2567351a2a7a70e6dda81f5ccc38d04b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga0e6e40f799c9a4042444a4e26194d451</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga555df8c54f170ebe7f389eb7a8d04cc9</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_dB_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga395321949ec6444ca4590f0ca3eac6b0</anchor>
      <arglist>(snd_mixer_elem_t *elem, long value, int dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga1a9b7c48b94d8cbeffc6847f3b884dcc</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga3de8f16807b23cdf9399f86a5eb3a353</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaa3e28640247b4eef389269b92f5b4a9d</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_switch_all</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad43024c7d21c38cde7b440cdc6a85c07</anchor>
      <arglist>(snd_mixer_elem_t *elem, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga09557e90c11fbd37aeed30938338698b</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_playback_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad874cffabe541956b610858bcb38ba59</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_playback_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaf4b095372a07bcdf769d74fa73c803d5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga95e2624e7aaa7624e89121ce3f63b9dd</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_capture_dB_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga332241fcda7a9364b4d7830b592ba6a5</anchor>
      <arglist>(snd_mixer_elem_t *elem, long *min, long *max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_capture_volume_range</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga608663233daecd6b373aba808f5fc427</anchor>
      <arglist>(snd_mixer_elem_t *elem, long min, long max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enumerated</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab367abc11dae3681978c2f831afd1e37</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_playback</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gaed68ad405d2c2e9447e2fa1d4f5d1107</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_is_enum_capture</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga90c5c5c0428fd0d6722c5a84348a39b0</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_items</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gab803bca4a9c322e1efe87950b62431b3</anchor>
      <arglist>(snd_mixer_elem_t *elem)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gacbae7ca76dc02dd172c80f8f704dd8c9</anchor>
      <arglist>(snd_mixer_elem_t *elem, unsigned int idx, size_t maxlen, char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_get_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga6679dc52033e29b88da32f5bbd45f205</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int *idxp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_set_enum_item</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gadcba6291c0382676ee442311c0ff1a8f</anchor>
      <arglist>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>snd_mixer_selem_id_sizeof</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga29705a6b18fe910d2b7aeb98531d5056</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_malloc</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gac48d80bc60d03959c43a3ec6caca8498</anchor>
      <arglist>(snd_mixer_selem_id_t **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_free</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga2a6f790706e3ed64e1fb0f61177d13c5</anchor>
      <arglist>(snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_copy</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga089d6e51b1b92fb51ff2cb771071a169</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_mixer_selem_id_get_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gae54797dd9e4382d67718899047fa1087</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>snd_mixer_selem_id_get_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gabe5105469fa31b85a52253e709733638</anchor>
      <arglist>(const snd_mixer_selem_id_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_name</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>gad127341c44087525e1c715044d7a3919</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, const char *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_mixer_selem_id_set_index</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga02bf0b9758ed4146eec38cd964b7621d</anchor>
      <arglist>(snd_mixer_selem_id_t *obj, unsigned int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_mixer_selem_id_parse</name>
      <anchorfile>group___simple_mixer.html</anchorfile>
      <anchor>ga863202350cc4cb16661e7a5804b83298</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const char *str)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ucm</name>
    <title>Use Case Interface</title>
    <filename>group__ucm.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_INACTIVE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaedcdfd09f499b753d8652772ef1a248f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_HIFI</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga71b24a1fcc4ce2cee555520ca546b348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_HIFI_LOW_POWER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga9a0739ade4ac574b31b4728c22280861</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae496d33ac019caffae8dca584b04d09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICE_LOW_POWER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga64b61825903d5ce88d3f4cfb12c7bd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_VOICECALL</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaaa4aed51667887d194caae91362e8428</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_IP_VOICECALL</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga938754af309628dfc8bafe28018b8aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_ANALOG_RADIO</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab08fad02c1e8641016be957fc5ce3705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_VERB_DIGITAL_RADIO</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gac1fc6fc3c4f08b4de9e622d05b591cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_NONE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa7abb8ce3d21b584c621869f7ebed3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_SPEAKER</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga515b2956d58485b27fb982965d067c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_LINE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa5d03312d1990c0bd5c162f61fbfa4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_MIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaec0f823989984e14fab7c8e2749d76ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HEADPHONES</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaf2c22989c5315abcee46713cde8693d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HEADSET</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga72c3300fac357a2e22b52afc13547ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HANDSET</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga315d29bfbdf84cff8b7a593c34f6393b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_BLUETOOTH</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga4992d89d4ec8be51f19bec0a69ba1984</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_EARPIECE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga6ca86620d080360f6e2a240efb334dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_SPDIF</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga7f7f45feb440a49be3be9e52da98b242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_DEV_HDMI</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab4e4a2b3d44883b1ffb5406529746faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_CAPTURE_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaec6b78d147824af1474fc914770a834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_CAPTURE_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gad685f6b4dcb9e37f0b5a1160425aec23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gadee4d4dce15624e282ab1960113caf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga61c217f060e616d61a294ac5d5d2fac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_PLAY_TONE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaacc8e06e0c8fc0de5e26df6f20462484</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_MOD_ECHO_REF</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae2a230a913142c17f30d7dc2ae416866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_MUSIC</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga64dd2e9f8e4e800effc02d895e1bfdbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_VOICE</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa822e565021887e26c0eaec2cee97bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_USE_CASE_TQ_TONES</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga022328b4bb0b0b14d358cb2155e5d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct snd_use_case_mgr</type>
      <name>snd_use_case_mgr_t</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gace35ebd33e632cba9441762f6633a20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>snd_use_case_identifier</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga530159363360c3cae3c9816c034fbcc5</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_free_list</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga003553ee6fd13119fc9e08ffcdd959f9</anchor>
      <arglist>(const char *list[], int items)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_get_list</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaa128bcb412f42247e561b81ec342c2e1</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **list[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_get</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga9c13ae514eeebf918adcec0e4534aca5</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_geti</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga66311429dfd62743089be3eb79f1d1f5</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, long *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_set</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gae9ff2a06c955d40ad0204f21f8352831</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_open</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga74f0ef0116590fe8eec1edeaf1d88847</anchor>
      <arglist>(snd_use_case_mgr_t **uc_mgr, const char *card_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_reload</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gafedd1fc74ce9086033f6f668348321b4</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_close</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaac2bf25d233230d2d6a9e422795d716c</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_mgr_reset</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>ga1364dba503c216b2e46085a3f4abd20a</anchor>
      <arglist>(snd_use_case_mgr_t *uc_mgr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_parse_ctl_elem_id</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gab0d67afb18ff0b1e155f5a762762aa6a</anchor>
      <arglist>(snd_ctl_elem_id_t *dst, const char *ucm_id, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_use_case_parse_selem_id</name>
      <anchorfile>group__ucm.html</anchorfile>
      <anchor>gaee0ad3020f0b3737f449f9f2a078e075</anchor>
      <arglist>(snd_mixer_selem_id_t *dst, const char *ucm_id, const char *value)</arglist>
    </member>
    <page>group__ucm</page>
  </compound>
  <compound kind="group">
    <name>topology</name>
    <title>Topology Interface</title>
    <filename>group__topology.html</filename>
    <class kind="struct">snd_tplg_tlv_template</class>
    <class kind="struct">snd_tplg_tlv_dbscale_template</class>
    <class kind="struct">snd_tplg_channel_elem</class>
    <class kind="struct">snd_tplg_channel_map_template</class>
    <class kind="struct">snd_tplg_pdata_template</class>
    <class kind="struct">snd_tplg_io_ops_template</class>
    <class kind="struct">snd_tplg_ctl_template</class>
    <class kind="struct">snd_tplg_mixer_template</class>
    <class kind="struct">snd_tplg_enum_template</class>
    <class kind="struct">snd_tplg_bytes_template</class>
    <class kind="struct">snd_tplg_graph_elem</class>
    <class kind="struct">snd_tplg_graph_template</class>
    <class kind="struct">snd_tplg_widget_template</class>
    <class kind="struct">snd_tplg_stream_template</class>
    <class kind="struct">snd_tplg_stream_caps_template</class>
    <class kind="struct">snd_tplg_pcm_template</class>
    <class kind="struct">snd_tplg_hw_config_template</class>
    <class kind="struct">snd_tplg_dai_template</class>
    <class kind="struct">snd_tplg_link_template</class>
    <class kind="struct">snd_tplg_obj_template_t</class>
    <class kind="struct">snd_tplg_channel_template</class>
    <class kind="struct">snd_tplg_obj_template</class>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_MAX_CHAN</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga166b4ca9decf8ffd675f06c96d265490</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_INDEX_ALL</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga28f1657bb57406ee17c99cc19d8ff215</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_CREATE_VERBOSE</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1abac437bebec04406a49803d29d23c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_CREATE_DAPM_NOSORT</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8081752d129f8c23668e5e14035f94bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_SAVE_SORT</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga55f057bb4d9bbf3598059a905de5b8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_SAVE_GROUPS</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gacd3909e4e9e50bbf6e1b49487458e33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SND_TPLG_SAVE_NOCHECK</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga7bfe5d3e92eeaea67f8a5d9e779cc351</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct snd_tplg</type>
      <name>snd_tplg_t</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga85fcf522a65a5da8f57d83eec2eea98e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>snd_tplg_type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga465b5b8dea36052ad6fb12e2886f8757</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TLV</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757aaf27c1cc4c621a45d46432326a1aa888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_MIXER</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a96c0e408a18ede418d5e88b15a1a092d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_ENUM</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757acd5e9bf0971828063b10a6ce1c5f5d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TEXT</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a001f35143cd77fc5d1ffcf943197f05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DATA</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a465f9e3757181d5cfc2198b072445f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_BYTES</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757abfabfba93f42f3480ba1a157b040d2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_STREAM_CONFIG</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0f7aab87018f1c08cf34d85331eaf04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_STREAM_CAPS</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0aaae49f2f43033ea4492a244ff4d6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_PCM</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ab9c96aed8ec27baa5174b95c1a48f24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAPM_WIDGET</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ad4dc07d95c540edc290caa096f782638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAPM_GRAPH</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a60c8b0cf1870569f70e09efe0a1335fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_BE</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a8f1276de125c64cd18d4de09f077057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_CC</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a88677abcdb522863847c547c5f48ab46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_MANIFEST</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0728bac919b44131c4181976964aba47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TOKEN</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a3a9bcd3df54f0eb979b8e30611dca531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TUPLE</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ac8749fd8387d76b060e8954286e05403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_LINK</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a6c902fd43a05f900a35c8e73dc853755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_HW_CONFIG</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a418ddc4b18fd0f9998dbc5eaddfd3bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAI</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a6163e1b023ee7a14c6ddd555df9083a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TLV</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757aaf27c1cc4c621a45d46432326a1aa888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_MIXER</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a96c0e408a18ede418d5e88b15a1a092d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_ENUM</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757acd5e9bf0971828063b10a6ce1c5f5d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TEXT</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a001f35143cd77fc5d1ffcf943197f05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DATA</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a465f9e3757181d5cfc2198b072445f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_BYTES</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757abfabfba93f42f3480ba1a157b040d2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_STREAM_CONFIG</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0f7aab87018f1c08cf34d85331eaf04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_STREAM_CAPS</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0aaae49f2f43033ea4492a244ff4d6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_PCM</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ab9c96aed8ec27baa5174b95c1a48f24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAPM_WIDGET</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ad4dc07d95c540edc290caa096f782638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAPM_GRAPH</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a60c8b0cf1870569f70e09efe0a1335fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_BE</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a8f1276de125c64cd18d4de09f077057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_CC</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a88677abcdb522863847c547c5f48ab46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_MANIFEST</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a0728bac919b44131c4181976964aba47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TOKEN</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a3a9bcd3df54f0eb979b8e30611dca531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_TUPLE</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757ac8749fd8387d76b060e8954286e05403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_LINK</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a6c902fd43a05f900a35c8e73dc853755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_HW_CONFIG</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a418ddc4b18fd0f9998dbc5eaddfd3bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SND_TPLG_TYPE_DAI</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gga465b5b8dea36052ad6fb12e2886f8757a6163e1b023ee7a14c6ddd555df9083a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>snd_tplg_version</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga855c990aeb95f415c35145ccccb5838f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>snd_tplg_t *</type>
      <name>snd_tplg_new</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga33eea73f6e3a5a1cdb4af78482fd007b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>snd_tplg_t *</type>
      <name>snd_tplg_create</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac69d029f2eb030fc947bb7ed61a57b05</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_tplg_free</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad0311f45ec180cced72c0500f42b14f0</anchor>
      <arglist>(snd_tplg_t *tplg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_load</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac62aa31fba73f4810e114dacab9d78ea</anchor>
      <arglist>(snd_tplg_t *tplg, const char *buf, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_build_file</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga32610ecd4d4d3d8b298ed6eea9ee19cc</anchor>
      <arglist>(snd_tplg_t *tplg, const char *infile, const char *outfile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snd_tplg_verbose</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac4682edcfc48f7f4c90c238ebffc0260</anchor>
      <arglist>(snd_tplg_t *tplg, int verbose)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_add_object</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga05ff9c8d200b65c8511ef498443e0f5b</anchor>
      <arglist>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_build</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga537e8f4fa495e40f8fc9a8d7c4ea8840</anchor>
      <arglist>(snd_tplg_t *tplg, const char *outfile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_build_bin</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3efb9abc0f27069e10801bcc79b906e3</anchor>
      <arglist>(snd_tplg_t *tplg, void **bin, size_t *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_set_manifest_data</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabbb1cc2f7389e77d2d31919296e7e896</anchor>
      <arglist>(snd_tplg_t *tplg, const void *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_set_version</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga389e200fa8c0b4b2c4c7352486874620</anchor>
      <arglist>(snd_tplg_t *tplg, unsigned int version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_save</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga03858d3d9a181432bceb224e29c01e88</anchor>
      <arglist>(snd_tplg_t *tplg, char **dst, int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>snd_tplg_decode</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga53002b5c310f6c418a4f81eb346e0a2e</anchor>
      <arglist>(snd_tplg_t *tplg, void *bin, size_t size, int dflags)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae387167827b44dd3e98db6910d1f667e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1ffcf8621a8e6cc663f42355f619be1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga357f81502e953696483d93027f63e0aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>step</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa639e5d57583a1b451ee08f2652e96cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mute</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c6e4473806526a2f536991d499180fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga36364828c2bdee77a96cf1819b0aec3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reg</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf374c95d02af421cbc69464f54cec8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shift</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6f76c415ba4b2c074da2cf11ac7cd5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga898d38fbbec2ca83ce3475c314a323a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_channels</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga02ac7ec7cf8cded80d70ceb15806f3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_elem</type>
      <name>channel</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa22b2a1d1e1bc5bf5660007dbfca7698</anchor>
      <arglist>[SND_TPLG_MAX_CHAN]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>length</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8d7459e2d6ad42e57216056b490212ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>data</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga71ae42f26f96e9c1b7053163a387e5bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>get</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga954cfcdc65427888bdfa54b6ada8fc50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>put</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf1f9a46547467dcc560769e35e1c041e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>info</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c49bcef09fec6edb7526e396ab7be0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab67cddcd99af948e7f1c31e88fae277b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac22769fc8e2dee6739f6b0d0617b939c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>access</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0a3e7fa10db19ea81524fe6a55f92e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_io_ops_template</type>
      <name>ops</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab717044852e6fe75883956a9a99d0493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_template *</type>
      <name>tlv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac99aa1726d01df67900f6f264a55c8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_template *</type>
      <name>tlv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga33f92308176a7ddac98c719cb1ee7956</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_dbscale_template *</type>
      <name>tlv_scale</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabd3e68eab5ee13b3cadc02d6f937baf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_tlv_dbscale_template *</type>
      <name>tlv_scale</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab6fb53cb9ac21902b2a2416d13175b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga47753d107c983bcaa5f45d7b3394acf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_map_template *</type>
      <name>map</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad627bd602b491c441a8a4c9981d1fd0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga653a7de4072039fed489b2f8a2109f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga70e434e24b7f4ad3fea7285d9bb44d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>platform_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa8e7d9900d359f3b8ecea793ca5f7976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>invert</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga4b90c9c6c15ea142453f0dc52a8138b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1bccfdefa76cbb03ec73c64b25e0c821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga480256cd2b82f47087f109bd8e939a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_channel_map_template *</type>
      <name>map</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga56f870a612b4c677fb8b4d650764f410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>items</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf09e055898f81af586d8069216903428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabe76d8bd0e24508c83ea8a7b88bacf6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char **</type>
      <name>texts</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2b04f038f41433f492427b5008228271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int **</type>
      <name>values</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga16bdcaa3cec9d1a73bcda6e366bbc345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga22b1054a71ee0d81f7bcfde5dbf5f9e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template</type>
      <name>hdr</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3550150a1ee6e26abeab4bc0da5d0da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga23b07058274bfa51f093380ac9ee5e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaaddecbbc7a836db2be9ced8bad8cae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>base</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1644bf685a8915059c39b70a21673ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_regs</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad46cbdd6e9a9f5dd2f1b840de64dc26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_io_ops_template</type>
      <name>ext_ops</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga57c109fd38fe1bc72b5338aec60f8245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0d9aba951ddbedcd5fab22ad504ca8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>src</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga103c8eebede5adb8b494f11647f67949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac51f4e6cca8bbc05d1db9985d6dc751c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>sink</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga536989e825d1d329cc75fd1cc74687da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2246efb27a440795ee0afd6870c0a048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_graph_elem</type>
      <name>elem</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1600ae422e1746d831b41489df6a6197</anchor>
      <arglist>[0]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1ad4db72a1e67ea42bb86c825a466a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabeb31c5543b70053912437c03d7de386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>sname</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga63fd73f78d4ca4fbf63e374f390f5f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reg</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga98347cf0667a76a5be4d4238b99e60d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shift</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf6f8bfc8933b8e9863c2396a51022629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa238963cf4b43ad0d01b03b7ca9ddd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>subseq</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5cad88b8e70582073acf8a5fe2148455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>invert</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabc524e132701525c85157b9021a92d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ignore_suspend</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga69970ccddf3e0d16aafd1c29d572568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>event_flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6ddd7e49bae0beeba4f0dea82cd0c0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>event_type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8a2202f02af34a89c2168ed73bf9168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab9cc62ce443fe576ad1fde50e75d19f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_ctls</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8410052e0b03c98fffb3d308243879b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_ctl_template *</type>
      <name>ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga536bbc63f605da667db76cabf42c40f1</anchor>
      <arglist>[0]</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8c683c2bfc0f6f81a13e9b17c8032905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>format</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa020a51c90d9c940fc370d6cfe8cb222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rate</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gacae6d898504ccf7413491988f2acb5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>period_bytes</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0ab0be7080dd51570018c95e774107f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buffer_bytes</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gacc03d35ac9685afcdf44a4d1332d5284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channels</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac61dcb6e9419a2eb36b3c634ff2e1dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae54c502a3da78e5fb6cd9c865b0c9bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>formats</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9243e7f40be6bc8253b15e79ab360bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rates</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga30da03d09614fb0d6dea9691cea9e10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaedddf98535f00c8179404e04902baa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10beb74b167ef2c3e047d2eb1bd34719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab59baf2b2817643d761b89ed06d7f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>channels_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad85ba3f579508873b207a337a028a788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>periods_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0f70617bbd247a83070e3a1f191e6638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>periods_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5ff0469829c717608920acdf6b3936f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>period_size_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9af255ce42a1ed49b5afdbd319e48f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>period_size_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga52fb1c2c276660aaf44b52d3695bf942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>buffer_size_min</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaee27e0c3f72a2758cdb05cd496938d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>buffer_size_max</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga33a0505b7215aac418e034a2017516e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>sig_bits</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gadf73ad9d6eff2bfec6172a0ef2cccf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>pcm_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga37af3b032598a685bb1abe9262eb17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>dai_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3ef92a1f767b2ec579bf9a900d00cba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pcm_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf347aca48a61d3ab51496fbd83171b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>dai_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabd9e09d11267771903d472c86a4f104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>playback</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0b20c874ab97aa7e9638ba6bef765395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>capture</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga7074892753c00db0c79a5b0a14538038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>compress</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad85ac3b2cf144479b04012a2654048a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_caps_template *</type>
      <name>caps</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8baa9705e9cecf2d4a35a2f614e9dd61</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flag_mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac41d78c2b3e445f71a95d686c1b3c726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga330cb10c95215d2c4fb733e090a394a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaa17cb2cf7b33eaa7aaba9a7c0b7858c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_streams</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6230c8e843c6778a1ebc3e5af5aac21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_template</type>
      <name>stream</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaad9e8ff62a714640aa13587897b8b6b1</anchor>
      <arglist>[0]</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>dai_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab6eb2404fd71f31fe912644565ae5a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>dai_id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac9591895151579a58014878056c0ed50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>playback</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad0475981bd65ebd68f07761fcdda0c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>capture</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gabb31fddfe9470f8a35b23fe959a81d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_caps_template *</type>
      <name>caps</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaea3a45a2cb2080519d34fb92d1b96c43</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flag_mask</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaf964100a9a503410ed7bf4269d47d017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga43e1662068364ef2d3f24cf8adbd98ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6456fe317c9652f0dbd19d566f5c5faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10d5beb2799114b6fe8b837c242faeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga2added05dca19575812143e658fbc743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>stream_name</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1f298db79d5a4d66e29eb599eb1f23d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_streams</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga6c4c04ed502e0bfe550d1bf78f2d8bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_stream_template *</type>
      <name>stream</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gad22af2e86c2a06714c50e6dab4ae042d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_hw_config_template *</type>
      <name>hw_config</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga0c8c9d7a828ab74e896ffcdd8d4b1dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_soc_tplg_private *</type>
      <name>priv</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga9844eaaebb064f80cfeb9685c4ebc026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum snd_tplg_type</type>
      <name>type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga5ac8a01fbb895f368c4bacb574def128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gae9298a874663f911b54f4019a20171c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga21e20bff5cedad485802af1362d6810b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vendor_type</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga8ab68f45554811560909ff630f59d6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_widget_template *</type>
      <name>widget</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gac5cba47b570ce40dfdbc28f514696642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_widget_template *</type>
      <name>widget</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gafda059a017a125ffa69261da3ca5c3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_mixer_template *</type>
      <name>mixer</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gace1a0174ae799778c44b18783a60814f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_mixer_template *</type>
      <name>mixer</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga7848278cd4e9bb4b0bc4ae61d4376dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_bytes_template *</type>
      <name>bytes_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga327919369281666f2aac412b78cb4a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_bytes_template *</type>
      <name>bytes_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga15c558bdb81f82796502617683bc4a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_enum_template *</type>
      <name>enum_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gab176a05b65dce92dc7228a6c5c53c96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_enum_template *</type>
      <name>enum_ctl</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga693faf471d19a49e4cddb85cc64c9962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_graph_template *</type>
      <name>graph</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga72cda3f3084484e460f87f2be50ce965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_graph_template *</type>
      <name>graph</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga017f5713305d3377dd0ae3d1d9b0c432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_pcm_template *</type>
      <name>pcm</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga63cb6b1014c9f038cc4bfee52cede2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_pcm_template *</type>
      <name>pcm</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>gaca68dc3f07a2f81fc28f3e850ca2c5a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_link_template *</type>
      <name>link</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga01169020ecbc3c5b8112bea25eb3add4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_link_template *</type>
      <name>link</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga3b9312ee9e6b24701f61ce739eb3fd41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_dai_template *</type>
      <name>dai</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga10ec5352b32b8f12ae51964a341126e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct snd_tplg_dai_template *</type>
      <name>dai</name>
      <anchorfile>group__topology.html</anchorfile>
      <anchor>ga1fbd984ff33985ed2af6b53cf5300d1a</anchor>
      <arglist></arglist>
    </member>
    <page>group__topology</page>
  </compound>
  <compound kind="page">
    <name>Usecase</name>
    <title>ALSA Use Case Interface</title>
    <filename>group__ucm.html</filename>
  </compound>
  <compound kind="page">
    <name>topology</name>
    <title>ALSA Topology Interface</title>
    <filename>group__topology.html</filename>
  </compound>
  <compound kind="page">
    <name>conf</name>
    <title>Configuration files</title>
    <filename>conf.html</filename>
    <docanchor file="conf.html" title="Whitespace">conf_whitespace</docanchor>
    <docanchor file="conf.html" title="Line continuation with">conf_linesplicing</docanchor>
    <docanchor file="conf.html" title="Comments">conf_comments</docanchor>
    <docanchor file="conf.html" title="Including configuration files">conf_include</docanchor>
    <docanchor file="conf.html" title="Punctuators">conf_punctuators</docanchor>
    <docanchor file="conf.html" title="Braces">conf_braces</docanchor>
    <docanchor file="conf.html" title="Brackets">conf_brackets</docanchor>
    <docanchor file="conf.html" title="Comma and semicolon">conf_comma_semicolon</docanchor>
    <docanchor file="conf.html" title="Equal sign">conf_equal</docanchor>
    <docanchor file="conf.html" title="Assignments">conf_assigns</docanchor>
    <docanchor file="conf.html" title="Single assignments">conf_single</docanchor>
    <docanchor file="conf.html" title="Compound assignments (definitions using braces)">conf_compound</docanchor>
    <docanchor file="conf.html" title="Compound assignments (one key definitions)">conf_compound1</docanchor>
    <docanchor file="conf.html" title="Array assignments (definitions using brackets)">conf_array</docanchor>
    <docanchor file="conf.html" title="Array assignments (one key definitions)">conf_array1</docanchor>
    <docanchor file="conf.html" title="Operation modes for parsing nodes">conf_mode</docanchor>
    <docanchor file="conf.html" title="Syntax summary">conf_syntax_summary</docanchor>
    <docanchor file="conf.html" title="References">conf_syntax_ref</docanchor>
  </compound>
  <compound kind="page">
    <name>confarg</name>
    <title>Runtime arguments in configuration files</title>
    <filename>confarg.html</filename>
    <docanchor file="confarg.html" title="Defining arguments">confarg_define</docanchor>
    <docanchor file="confarg.html" title="Defining argument types and default values">confarg_type</docanchor>
    <docanchor file="confarg.html" title="Referring to arguments">confarg_refer</docanchor>
    <docanchor file="confarg.html" title="Usage">confarg_usage</docanchor>
    <docanchor file="confarg.html" title="Example">confarg_example</docanchor>
  </compound>
  <compound kind="page">
    <name>conffunc</name>
    <title>Runtime functions in configuration files</title>
    <filename>conffunc.html</filename>
    <docanchor file="conffunc.html" title="Function reference">conffunc_ref</docanchor>
  </compound>
  <compound kind="page">
    <name>confhooks</name>
    <title>Hooks in configuration files</title>
    <filename>confhooks.html</filename>
    <docanchor file="confhooks.html" title="Function reference">confhooks_ref</docanchor>
  </compound>
  <compound kind="page">
    <name>control</name>
    <title>Control interface</title>
    <filename>control.html</filename>
    <docanchor file="control.html" title="General overview">control_general_overview</docanchor>
    <docanchor file="control.html" title="Supplemental data for elements in an element set">tlv_blob</docanchor>
  </compound>
  <compound kind="page">
    <name>ctl_external_plugins</name>
    <title>External Control Plugin SDK</title>
    <filename>ctl_external_plugins.html</filename>
    <docanchor file="ctl_external_plugins.html" title="External Control Plugins">ctl_externals</docanchor>
    <docanchor file="ctl_external_plugins.html" title="Implementation of External Control Plugins">ctl_ext_impl</docanchor>
  </compound>
  <compound kind="page">
    <name>hcontrol</name>
    <title>High level control interface</title>
    <filename>hcontrol.html</filename>
    <docanchor file="hcontrol.html" title="General overview">hcontrol_general_overview</docanchor>
  </compound>
  <compound kind="page">
    <name>mixer</name>
    <title>Mixer interface</title>
    <filename>mixer.html</filename>
    <docanchor file="mixer.html" title="General overview">mixer_general_overview</docanchor>
  </compound>
  <compound kind="page">
    <name>pcm</name>
    <title>PCM (digital audio) interface</title>
    <filename>pcm.html</filename>
    <docanchor file="pcm.html" title="General overview">pcm_general_overview</docanchor>
    <docanchor file="pcm.html" title="Transfer methods in UNIX environments">pcm_transfer</docanchor>
    <docanchor file="pcm.html" title="Standard I/O transfers">pcm_transfer_io</docanchor>
    <docanchor file="pcm.html" title="Event waiting routines">pcm_transfer_event</docanchor>
    <docanchor file="pcm.html" title="Asynchronous notification">pcm_transfer_async</docanchor>
    <docanchor file="pcm.html" title="Blocked and non-blocked open">pcm_open_behaviour</docanchor>
    <docanchor file="pcm.html" title="Asynchronous mode">pcm_async</docanchor>
    <docanchor file="pcm.html" title="Handshake between application and library">pcm_handshake</docanchor>
    <docanchor file="pcm.html" title="PCM formats">pcm_formats</docanchor>
    <docanchor file="pcm.html" title="ALSA transfers">alsa_transfers</docanchor>
    <docanchor file="pcm.html" title="Read / Write transfer">alsa_pcm_rw</docanchor>
    <docanchor file="pcm.html" title="Direct Read / Write transfer (via mmap&apos;ed areas)">alsa_mmap_rw</docanchor>
    <docanchor file="pcm.html" title="Error codes">pcm_errors</docanchor>
    <docanchor file="pcm.html" title="Managing parameters">pcm_params</docanchor>
    <docanchor file="pcm.html" title="Hardware related parameters">pcm_hw_params</docanchor>
    <docanchor file="pcm.html" title="Software related parameters">pcm_sw_params</docanchor>
    <docanchor file="pcm.html" title="Obtaining stream status">pcm_status</docanchor>
    <docanchor file="pcm.html" title="Obtaining stream state fast and update r/w pointer">pcm_status_fast</docanchor>
    <docanchor file="pcm.html" title="Managing the stream state">pcm_action</docanchor>
    <docanchor file="pcm.html" title="Streams synchronization">pcm_sync</docanchor>
    <docanchor file="pcm.html" title="Thread-safety">pcm_thread_safety</docanchor>
    <docanchor file="pcm.html" title="PCM naming conventions">pcm_dev_names</docanchor>
    <docanchor file="pcm.html" title="Default device">pcm_dev_names_default</docanchor>
    <docanchor file="pcm.html" title="HW device">pcm_dev_names_hw</docanchor>
    <docanchor file="pcm.html" title="Plug-&gt;HW device">pcm_dev_names_plughw</docanchor>
    <docanchor file="pcm.html" title="Plug device">pcm_dev_names_plug</docanchor>
    <docanchor file="pcm.html" title="Shared memory device">pcm_dev_names_shm</docanchor>
    <docanchor file="pcm.html" title="Tee device">pcm_dev_names_tee</docanchor>
    <docanchor file="pcm.html" title="File device">pcm_dev_names_file</docanchor>
    <docanchor file="pcm.html" title="Null device">pcm_dev_names_null</docanchor>
    <docanchor file="pcm.html" title="Examples">pcm_examples</docanchor>
    <docanchor file="pcm.html">example_test_pcm</docanchor>
  </compound>
  <compound kind="page">
    <name>pcm_plugins</name>
    <title>PCM (digital audio) plugins</title>
    <filename>pcm_plugins.html</filename>
    <docanchor file="pcm_plugins.html" title="Slave definition">pcm_plugins_slave</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: hw">pcm_plugins_hw</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_hw_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: mmap_emul">pcm_plugins_mmap_emul</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_mmap_emul_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: shm">pcm_plugins_shm</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_shm_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Null">pcm_plugins_null</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_null_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: copy">pcm_plugins_copy</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_copy_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: linear">pcm_plugins_linear</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_linear_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: linear&lt;-&gt;float">pcm_plugins_lfloat</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_lfloat_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Mu-Law">pcm_plugins_mulaw</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_mulaw_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: A-Law">pcm_plugins_alaw</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_alaw_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Ima-ADPCM">pcm_plugins_adpcm</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_adpcm_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Route &amp; Volume">pcm_plugins_route</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_route_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Rate">pcm_plugins_rate</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_rate_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Automatic conversion plugin">pcm_plugins_plug</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_plug_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: File">pcm_plugins_file</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_file_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Multiple streams to One">pcm_plugins_multi</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_multi_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Share">pcm_plugins_share</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_share_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: hooks">pcm_plugins_hooks</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_hooks_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: dmix">pcm_plugins_dmix</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_dmix_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: dshare">pcm_plugins_dshare</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_dshare_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: dsnoop">pcm_plugins_dsnoop</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_dsnoop_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: LADSPA &lt;-&gt; ALSA">pcm_plugins_ladpsa</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_ladspa_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: asym">pcm_plugins_asym</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_asym_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: IEC958">pcm_plugins_iec958</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_iec958_funcref</docanchor>
    <docanchor file="pcm_plugins.html" title="Plugin: Soft Volume">pcm_plugins_softvol</docanchor>
    <docanchor file="pcm_plugins.html" title="Function reference">pcm_plugins_softvol_funcref</docanchor>
  </compound>
  <compound kind="page">
    <name>pcm_external_plugins</name>
    <title>PCM External Plugin SDK</title>
    <filename>pcm_external_plugins.html</filename>
    <docanchor file="pcm_external_plugins.html" title="External Plugins">pcm_externals</docanchor>
    <docanchor file="pcm_external_plugins.html" title="External Plugin: Filter-Type Plugin">pcm_extplug</docanchor>
    <docanchor file="pcm_external_plugins.html" title="External Plugin: I/O Plugin">pcm_ioplug</docanchor>
  </compound>
  <compound kind="page">
    <name>rawmidi</name>
    <title>RawMidi interface</title>
    <filename>rawmidi.html</filename>
    <docanchor file="rawmidi.html" title="General overview">rawmidi_general_overview</docanchor>
    <docanchor file="rawmidi.html" title="Open handling">rawmidi_open</docanchor>
    <docanchor file="rawmidi.html" title="Nonblocking open (flag)">rawmidi_open_nonblock</docanchor>
    <docanchor file="rawmidi.html" title="Append open (flag)">rawmidi_open_append</docanchor>
    <docanchor file="rawmidi.html" title="Sync open (flag)">rawmidi_open_sync</docanchor>
    <docanchor file="rawmidi.html" title="I/O handling">rawmidi_io</docanchor>
    <docanchor file="rawmidi.html" title="RawMidi naming conventions">rawmidi_dev_names</docanchor>
    <docanchor file="rawmidi.html">rawmidi_dev_names_default</docanchor>
    <docanchor file="rawmidi.html" title="HW device">rawmidi_dev_names_hw</docanchor>
    <docanchor file="rawmidi.html" title="Examples">rawmidi_examples</docanchor>
    <docanchor file="rawmidi.html" title="Virtual RawMidi interface">rawmidi_virt</docanchor>
  </compound>
  <compound kind="page">
    <name>timer</name>
    <title>Timer interface</title>
    <filename>timer.html</filename>
    <docanchor file="timer.html" title="General overview">timer_general_overview</docanchor>
    <docanchor file="timer.html" title="Opening">timer_open</docanchor>
    <docanchor file="timer.html" title="Events">timer_events</docanchor>
    <docanchor file="timer.html" title="Examples">timer_examples</docanchor>
  </compound>
  <compound kind="page">
    <name>seq</name>
    <title>Sequencer interface</title>
    <filename>seq.html</filename>
    <docanchor file="seq.html" title="General">seq_general</docanchor>
    <docanchor file="seq.html" title="Client and Port">seq_client</docanchor>
    <docanchor file="seq.html" title="Memory Pool">seq_memory</docanchor>
    <docanchor file="seq.html" title="Subscription">seq_subs</docanchor>
    <docanchor file="seq.html" title="Sequencer Events">seq_events</docanchor>
    <docanchor file="seq.html" title="Structure of an event">seq_ev_struct</docanchor>
    <docanchor file="seq.html" title="Scheduling queue">seq_ev_queue</docanchor>
    <docanchor file="seq.html" title="Time stamp">seq_ev_time</docanchor>
    <docanchor file="seq.html" title="Source and destination addresses">seq_ev_addr</docanchor>
    <docanchor file="seq.html" title="Data storage type">seq_ev_data</docanchor>
    <docanchor file="seq.html" title="Scheduling priority">seq_ev_sched</docanchor>
    <docanchor file="seq.html" title="Event Queues">seq_queue</docanchor>
    <docanchor file="seq.html" title="Creation of a queue">seq_ev_control</docanchor>
    <docanchor file="seq.html" title="Setting queue tempo">seq_ev_tempo</docanchor>
    <docanchor file="seq.html" title="Starting and stopping a queue">seq_ev_start</docanchor>
    <docanchor file="seq.html" title="More inside the subscription">seq_subs_more</docanchor>
    <docanchor file="seq.html" title="Permissions">seq_subs_perm</docanchor>
    <docanchor file="seq.html" title="Subscription handlers">seq_subs_handle</docanchor>
    <docanchor file="seq.html" title="Examples of subscription">seq_subs_ex</docanchor>
    <docanchor file="seq.html" title="Capture from keyboard">seq_subs_ex_capt</docanchor>
    <docanchor file="seq.html" title="Output to MIDI device">seq_subs_ex_out</docanchor>
    <docanchor file="seq.html" title="Arbitrary connection">seq_subs_ex_arbit</docanchor>
    <docanchor file="seq.html" title="Event Processing">seq_ex_event</docanchor>
    <docanchor file="seq.html" title="Addressing">seq_ex_address</docanchor>
    <docanchor file="seq.html" title="Delivery">Scheduled</docanchor>
    <docanchor file="seq.html" title="Direct Delivery">seq_ex_direct</docanchor>
    <docanchor file="seq.html" title="Filter Application">seq_ex_filter</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Index Preamble and License</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
