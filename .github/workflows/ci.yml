
name: CI


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}


jobs:
  check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install isort==5.10.1 flake8==3.8.3

    - name: Check coding style (flake8)
      run: "flake8 alsa_midi tests"

    - name: Check imports sorting (isort)
      run: "isort --check --dont-follow-links alsa_midi tests"

  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
        sudo apt update
        sudo apt install -y libasound2-dev

    - name: Run tests
      run: "tox -e py -- -vv"

  test-on-alsa-kernel:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2

    - name: Cache Vagrant boxes
      uses: actions/cache@v2
      with:
        path: ~/.vagrant.d/boxes
        key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
        restore-keys: |
          ${{ runner.os }}-vagrant-

    - name: Start vagrant VM
      run: |
        cp tests/Vagrantfile .
        vagrant up

    - name: Run tests in vagrant vm
      run: |
        vagrant ssh vm -c 'cd /vagrant && PATH="$PATH:$HOME/.local/bin" && tox -e py -- -vv'


  build:

    needs:
      - test
      - test-on-alsa-kernel

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        sudo apt update
        sudo apt install -y libasound2-dev

    - name: Build
      run: |
        python -m build .

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-${{ matrix.python-version }}
        path: dist
